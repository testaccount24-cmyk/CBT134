REVEXSYM TITLE ' REVIEW EXTRACT SYMBOLS FOR RECORD STRUCTURE ITEMS '
*
*         WRITTEN BY GREG PRICE FROM JANUARY 2022 ONWARDS
*
* TYPE  SUPPORT      DESCRIPTION                   ? = UNTESTED
* ------------------------------------------
* 0     BASE ?       IPL
* 2     BASE         DUMP HEADER
* 3     FULL         DUMP TRAILER
* 4     FULL         STEP TERMINATION
* 5     FULL         JOB TERMINATION
* 6     FULL         OUTPUT WRITER
* 7     FULL ?       SMF DATA LOST
* 8     FULL         I/O CONFIGURATION
* 9     FULL         VARY ONLINE
* 10    FULL         ALLOCATION RECOVERY
* 11    FULL         VARY OFFLINE
* 14&15 FULL         NON-VSAM DATA SET CLOSE/EOV
* 16    NONE         DFSORT
* 17    FULL         DASD DATA SET RENAME
* 18    FULL         DASD DATA SET SCRATCH
* 19    BASE ?       DASD VOLUME STATISTICS
* 20    FULL         JOB INITIATION
* 21    BASE ?       TAPE ERROR STATISTICS BY VOLUME
* 22    FULL         CONFIGURATION
* 23    FULL ?       SMF STATUS
* 24    BASE ?
* 25    BASE ?
* 26    FULL ?       JOB PURGE
* 30    FULL         JOB STATUS
* 31    BASE ?       TIOC INITIALIZATION
* 32    BASE ?       TSO USER WORK ACCOUNTING
* 33    BASE ?       APPC/MVS TP ACCOUNTING
* 34    FULL         TSO SESSION TERMINATION
* 35    FULL         TSO LOGOFF
* 36    BASE ?
* 37    NONE         NPDA
* 39    NONE         NLDM
* 40    FULL
* 41    FULL         DIV OBJECTS AND VLF
* 42.01 FULL         DEVICE STATISTICS
* 42.02 FULL         SMS DASD CONTROL UNIT
* 42.03 FULL         SMS CONFIGURATION CHANGE
* 42.04 BASE ?       SYSTEM DATA MOVER
* 42.05 FULL         DISK I/O STATISTICS
* 42.06 FULL         DASD DATA SET STATISTICS
* 42.09 BASE ?       EOV ABENDS
* 42.0A BASE ?       INSUFFICIENT SPACE
* 42.0B BASE ?       EXTENDED REMOTE COPY STATISTICS
* 42.0F BASE ?       VSAM RLS
* 42.0G BASE ?       VSAM RLS
* 42.0H BASE ?       VSAM RLS CF LOCK STRUCTURE
* 42.0I BASE ?       VSAM RLS CF CACHE PARTITION USAGE
* 42.0J BASE ?       VSAM RLS LOCAL BUFFER LRU
* 42.0K FULL         STOW INITIALIZE
* 42.0L FULL         PDS/PDSE MEMBER DELETE
* 42.0M BASE ?       DFSMSRMM AUDIT
* 42.0N BASE ?       DFSMSRMM SECURITY
* 42.0P FULL         PDS/PDSE MEMBER REPLACE
* 42.0Q FULL         PDS/PDSE MEMBER RENAME
* 42.27 FULL         VTOC CHANGED
* 43    BASE ?
* 44    BASE ?
* 45    BASE ?
* 47    BASE ?
* 48    BASE ?
* 49    BASE ?
* 50    BASE ?
* 52    BASE ?
* 53    BASE ?
* 54    BASE ?
* 55    BASE ?
* 56    BASE ?
* 57    BASE ?
* 58    BASE ?
* 59    NONE         BDT
* 60    BASE ?
* 61    FULL
* 62    BASE ?
* 63    BASE ?
* 64    BASE ?
* 65    BASE ?
* 66    BASE ?
* 67    BASE ?
* 68    BASE ?
* 69    BASE ?
* 70.1  FULL         RMF CPU
* 70.2  BASE ?       RMF CRYPTO
* 71    FULL         RMF PAGING ACTIVITY
* 72.1  BASE ?       RMF WORKLOAD ACTIVITY
* 72.2  BASE ?       RMF MONITOR III
* 72.3  FULL         RMF WORKLOAD ACTIVITY - GOAL MODE
* 72.4  BASE ?       RMF MONITOR III - GOAL MODE
* 72.5  BASE ?       RMF MONITOR III - SUSPEND LOCKS AND GRS DATA
* 73    BASE ?       RMF CHANNEL PATH ACTIVITY
* 74.1  BASE ?       RMF DEVICE ACTIVITY
* 74.2  BASE ?       RMF XCF ACTIVITY
* 74.3  BASE ?       RMF OMVS KERNEL ACTIVITY
* 74.4  BASE ?       RMF COUPLING FACILITY ACTIVITY
* 74.5  BASE ?       RMF CACHE SUBSYSTEM DEVICE ACTIVITY
* 74.6  BASE ?       RMF HFS STATISTICS
* 74.7  BASE ?       RMF FICON DIRECTOR STATISTICS
* 74.8  BASE ?       RMF ENTERPRISE DISK SYSTEM STATISTICS
* 74.9  BASE ?       RMF PCI EXPRESS BASED FUNCTION ACTIVITY
* 74.10 BASE ?       RMF EXTENDED ASYNCHRONOUS DATA MOVER (EADM) STATS
* 75    BASE ?       RMF PAGE DATA SET ACTIVITY
* 76    BASE ?       RMF TRACE ACTIVITY
* 77    BASE ?       RMF ENQUEUE ACTIVITY
* 78.1  BASE ?       RMF 308X/4381 I/O QUEUING ACTIVITY
* 78.2  BASE ?       RMF VIRTUAL STORAGE ACTIVITY
* 78.3  BASE ?       RMF I/O QUEUEING (AND HYPERPAV/SUPERPAV) ACTIVITY
* 79.1  NONE         RMF ADDRESS SPACE STATE DATA
* 79.2  NONE         RMF ADDRESS SPACE RESOURCE DATA
* 79.3  NONE         RMF STORAGE/PROCESSOR (SRCS) DATA
* 79.4  NONE         RMF PAGING ACTIVITY
* 79.5  NONE         RMF ADDRESS SPACE SRM DATA
* 79.6  NONE         RMF RESERVE (SENQR) DATA
* 79.7  NONE         RMF ENQUEUE CONTENTION (SENQ) DATA
* 79.9  NONE         RMF DEVICE ACTIVITY
* 79.11 NONE         RMF PAGE DATA SET ACTIVITY
* 79.12 NONE         RMF CHANNEL PATH ACTIVITY
* 79.14 NONE         RMF I/O QUEUING ACTIVITY
* 79.15 NONE         RMF IRLM LONG LOCK DETECTION
* 80    BASE ?       RACF AND PKI SERVICES
* 81    BASE ?       RACF INITIALIZATION
* 82    NONE         CUSP
* 83    BASE ?       RACF DATA SET AUDIT
* 84    NONE         JES MONITORING FACILITY
* 85    BASE ?       OAM
* 87    BASE ?       GRS
* 88    BASE ?       SYSTEM LOGGER
* 89    FULL         REGISTERED SOFTWARE USAGE DATA
* 90    BASE ?       SYSTEM STATUS
* 92    BASE ?       OMVS FILE SYSTEM
* 94    BASE ?       AUTOMATED TAPE LIBRARY FUNCTION
* 96    NONE         INTEGRATED REASONING SHELL (TIRS)
* 97    BASE ?       WORKLOAD MANAGER
* 98    BASE ?       HFTS
* 99    NONE         SRM DECISIONS
* 110   BASE ?       CICS
* 119   BASE ?       SSH
* 124   NONE         I/O SUPERVISOR (IOS) INFORMATION
* 125   NONE         GENERIC TRACKER (USED TO BE 117)
* 126   NONE         EXTENDED HEADER SMF RECORDS
         EJECT
         MACRO
&NAME    DESC  &MSG
&NAME    DC    AL2(&NAME.L)
         DC    CL12'&NAME'
         DC    C&MSG
&NAME.L  EQU   *-&NAME
         MEND

R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15

         EJECT
REVEXSYM RSECT
REVEXSYM AMODE 31
REVEXSYM RMODE 24

*
*         INITIALIZATION
*

         USING REVEXSYM,R15
         B     @START
         DROP  R15
         DC    AL1(23),CL23'REVEXSYM 1.1.0 &SYSDATC'
@START   DC    0H
         STM   R14,R12,12(R13)
         LR    R11,R15
         LA    R9,1
         LA    R10,4095(R9,R11)
         USING REVEXSYM,R11,R10

         L     R3,=A($WORKLEN)
         LR    R0,R3
         GETMAIN RU,LV=(0),LOC=(24,64),BNDRY=PAGE
**       LR    R2,R1
**       SR    R15,R15             ZEROED PAGES WILL BE SUPPLIED
**       MVCL  R2,R14

         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         LR    R12,R1
         USING WORKAREA,R12

*
*         ACCUMULATE SYMBOL DATA FROM OBJECT DECK SYM CARDS
*

         ZAP   ITEM_NUM,=PL1'0'
         MVI   BLANK,C' '
         MVC   CARD,BLANK
         MVC   DSCTCARD,CARD
         LA    R0,SYM_DATA
         ST    R0,SYM_CSR
         MVC   INDCBW,INDCB1
         MVC   OUTDCBW,OUTDCB
         MVI   DBL,X'80'
         OPEN  (INDCBW,INPUT),MF=(E,DBL)
         MVI   DBL,X'80'
         OPEN  (OUTDCBW,OUTPUT),MF=(E,DBL)

IN_LOOP  DC    0H
         GET   INDCBW
         CLC   TWOSYM,0(R1)        SYM CARD?
         BNE   IN_LOOP             NO, SKIP IT AND READ NEXT ONE
         LA    R0,1                YES
         A     R0,SYMIN_CT         COUNT IT
         ST    R0,SYMIN_CT
         LH    R15,10(,R1)         GET SYM TEXT LENGTH
         L     R14,SYM_CSR         GET CURRENT CURSOR
         LA    R2,16(,R1)          POINT TO SYM TEXT
         LR    R3,R15              COPY SYM TEXT LENGTH
         MVCL  R14,R2              APPEND NEW SYM TEXT
         ST    R14,SYM_CSR         UPDATE CURSOR
         B     IN_LOOP

SYM_EOF  DC    0H                  END-OF-FILE REACHED
         MVI   DBL,X'80'
         CLOSE (INDCBW),MF=(E,DBL)
         MVC   CARD(14),=CL14'REVSMFZ  RSECT'
         PUT   OUTDCBW,CARD
         MVC   CARD+9(8),=CL8'AMODE 31'
         PUT   OUTDCBW,CARD
         MVC   CARD+9(9),=CL9'RMODE ANY'
         PUT   OUTDCBW,CARD
         MVC   CARD,BLANK
         MVI   CARD,C'*'
         PUT   OUTDCBW,CARD
         L     R0,SYMIN_CT
         CVD   R0,DBL
         MVC   CARD(8),ED7
         ED    CARD(8),DBL+4
         MVC   CARD+9(14),=CL14'SYM CARDS READ'
         MVI   CARD,C'*'
         PUT   OUTDCBW,CARD
         L     R0,SYM_CSR
         LA    R1,SYM_DATA
         SR    R0,R1
         CVD   R0,DBL
         MVC   CARD,BLANK
         MVC   CARD(8),ED7
         ED    CARD(8),DBL+4
         MVC   CARD+9(29),=CL29'BYTES OF SYMBOL METADATA READ'
         MVI   CARD,C'*'
         PUT   OUTDCBW,CARD
         MVC   CARD,BLANK
         MVI   CARD,C'*'
         PUT   OUTDCBW,CARD

         MVC   INDCBW,INDCB2
         MVI   DBL,X'80'
         OPEN  (INDCBW,INPUT),MF=(E,DBL)

         MVC   CARD,BLANK          CREATE SMF RECORD TYPE DESCRIPTOR
         MVC   CARD+9(L'SMF_RTD),SMF_RTD
         PUT   OUTDCBW,CARD
         MVC   CARD,BLANK          CREATE SMF RECORD TYPE ARRAY
         MVC   CARD(22),=CL22'SMF_RECS DC    256A(0)'
         PUT   OUTDCBW,CARD
         MVC   CARD,BLANK
         MVI   CARD,C'*'
         PUT   OUTDCBW,CARD
         MVC   CARD+11(5),=CL5'EQU 0'
         LARL  R3,SKPST_TB         POINT TO MISSING SUBTYPE LIST
         LA    R4,$SKPST#          GET THE ENTRY COUNT
SKPST_LP DC    0H
         MVC   CARD(10),0(R3)      LOAD LABEL
         PUT   OUTDCBW,CARD        WRITE THE EQUATE STATEMENT
         LA    R3,10(,R3)          POINT TO THE NEXT TABLE ENTRY
         BCT   R4,SKPST_LP         PROCESS ALL ENTRIES
         MVC   CARD,BLANK
         MVI   CARD,C'*'
         PUT   OUTDCBW,CARD


* _____________________________________________________________________
*
*         STRUCTURE OF SYMBOL DATA
*

ORGVALUE EQU   0                   ORGANIZATION VALUE BYTE

$DATASW  EQU   X'80'               0=NON-DATA, 1=DATA
$OTHTYPE EQU   X'70'               NON-DATA TYPE INDICATOR

* -------------------------------- NON-DATA TYPES
*        EQU   X'0.'               SPACE
*        EQU   X'1.'               CSECT - CONTROL SECTION
*        EQU   X'2.'               DSECT - DUMMY SECTION
*        EQU   X'3.'               COM - COMMON SECTION
*        EQU   X'4.'               INSTRUCTION
*        EQU   X'5.'               CCW
*        EQU   X'6.'               N/A
*        EQU   X'7.'               N/A

* -------------------------------- DATA FLAGS
$MULT    EQU   X'40'               DATA: M FIELD PRESENT FLAG
$CLUST   EQU   X'20'               DATA: CLUSTER (P OR Z TYPE)
$SCALE   EQU   X'10'               DATA: S FIELD PRESENT FLAG

* -------------------------------- NAME INDICATOR/LENGTH
$NONAME  EQU   X'08'               NAME FIELD ABSENT FLAG
$NAMELEN EQU   X'07'               LENGTH CODE OF NAME

* -------------------------------- END OF ORGANIZATION BYTE

SECTOFST EQU   1                   OFFSET WITHIN SECTION (3 BYTES)

SYMNAME  EQU   4                   SYMBOL NAME (UP TO 8 BYTES PLUS
*                                  EXTRA BYTE FOR NON-DATA SPACE TYPE)

*                                  DATA TYPE (1 BYTE)
*              X'00' = C - CHARACTER
*              X'04' = X - HEXADECIMAL OR PURE DBCS (G-TYPE)
*              X'08' = B - BINARY
*              X'10' = F - FIXED POINT, FULL
*              X'14' = H - FIXED POINT, HALF
*              X'18' = E - FLOATING POINT, SHORT
*              X'1C' = D - FLOATING POINT, LONG
*              X'20' = A - A-TYPE OR Q-TYPE DATA
*              X'24' = Y - Y-TYPE DATA
*              X'28' = S - S-TYPE DATA
*              X'2C' = V - V-TYPE DATA
*              X'30' = P - PACKED DECIMAL
*              X'34' = Z - ZONED DECIMAL
*              X'38' = L - FLOATING POINT, EXTENDED

*                                  LENGTH CODE OF DATA ITEM (2 BYTES
*                                  FOR C AND X AND B, 1 BYTE OTHERWISE)

*                                  MULTIPLICITY - M FIELD (3 BYTES)

*                                  SCALE - S FIELD
*                                  (SIGNED INTEGER - 2 BYTES)
* _____________________________________________________________________

*
*         PARSE SYMBOL DATA
*

*   FOR EACH SYMBOLIC ITEM, THE PROCESSING IS:
*   - EXTRACT THE SYMBOL NAME (IF ANY) UP TO 8 BYTES LONG
*   - FOR NON-DATA SYMBOLS:
*     - IF NOT DSECT THEN DISCARD
*     - SEARCH FOR CORRESPONDING DSECT STATEMENT PRINT LINE
*       (MATCHING BY NAME IF THE NAME WAS EXTRACTED)
*     - EXTRACT THE NAME FROM THE PRINT LINE IF LONGER THAN 8 BYTES
*     - SCAN DSECT RENAME TABLE FOR A MATCH
*       - PERFORM DSECT RENAME IF A MATCHING ENTRY IS FOUND
*       - CREATE SUBTYPE FILTER TABLE IF INDICATED BY RENAME ENTRY
*       - CALL 'SECTOPTS' TO CREATE 'RECSECT' MACRO STATEMENT
*   - FOR DATA SYMBOLS:
*     - EXTRACT DATA TYPE AND DISPLAY IN COLUMN 71
*       - TURNS OUT DATA TYPE IS NOT RELIABLY USABLE FOR FORMATTING
*     - DETERMINE THE ITEM'S SIZE, APPLYING MULTIPLICITY IF PRESENT
*     - DISCARD ITEM IF UNNAMED AND NOT AT "CURRENT" OFFSET
*     - CONVERT NAMES STARTING WITH 'SMFRCD' TO A DSECT STATEMENT
*     - CREATE 'RECITEM' MACRO STATEMENT:
*       - CONVERT 'RECITEM' TO 'ZEROFLD' IF NAME IN "VANISH" TABLE
*       - CONVERT 'RECITEM' TO 'ZEROFLD' IF TOTAL LENGTH IS ZERO
*       - FLAG 'TIME BIN' TIME FIELDS AS SUCH
*       - ASSIGN ATTRIBUTES FROM MATCHING 'ITEMFMTS' ENTRY IF FOUND
*       - IF RECORD START DETECTED WITHOUT A 'DSECT' THEN INSERT A
*         'RECSECT' STMT BEFORE THE RECORD'S FIRST 'RECITEM' STMT
*       - COMPLETE THE 'RECITEM' MACRO STATEMENT
*       - DISCARD THE STATEMENT IF THE INSTRUCTION IS REALLY 'ZEROFLD'
*       - FOR UNNAMED SYMBOLS:
*         - LOCATE CORRESPONDING PRINT LINE RECORD BY MATCHING OFFSET
*         - EXTRACT "LONG" NAME IF PRESENT
*       - FOR NAMED SYMBOLS:
*         - LOCATE CORRESPONDING PRINT LINE RECORD BY MATCHING NAME
*       - OUTPUT THE 'RECITEM' STATEMENT
*       - CALL 'GET_CMTS' TO COLLECT ITEM'S COMMENTARY
*

         LA    R8,SYM_DATA             POINT TO DATA TO PARSE
         B     SYM_NEW1                GO PROCESS FIRST ONE

SYM_ITEM DC    0H
         NI    FLAGS1,255-$ZERO-$NOGET ENABLE PUNCHOUT OUTPUT
         LA    R0,$INSRT_#             GET INSERT TABLE ENTRY COUNT
         LARL  R3,INSERTBL             POINT TO INSERT TABLE
INSRT_LP DC    0H
         CLC   0(9,R3),NAMESAVE        FOUND A MATCH?
         BE    DOINSERT                YES
         LA    R3,$INSRT_L(,R3)        NO, POINT TO NEXT ENTRY
         BCT   R0,INSRT_LP

         TM    FLAGS1,$1W2H            NEED TO INSERT A HALFWORD?
         BNO   SYM_NEW1                NO, CONTINUE PROCESSING
         NI    FLAGS1,255-$1W2H        YES, RESET FLAG
         MVC   CARD,BLANK              CLEAR BUFFER
         MVC   CARD+9(7),=C'RECITEM'
         MVC   CARD+17(5),ED7+3
         L     R1,CRNTOFST             GET HALFWORD'S OFFSET
         CVD   R1,DBL
         ED    CARD+16(6),DBL+5        FORMAT OFFSET
         LA    R1,2(,R1)               UPDATE CURRENT OFFSET
         ST    R1,CRNTOFST             SAVE IT
         MVC   CARD+22(4),=C',2,0'     SUPPLY LENGTH AND FLAGS
         PUT   OUTDCBW,CARD            WRITE ITEM DETAILS
         MVC   CARD,BLANK              BLANK OUTPUT BUFFER
         MVC   CARD+9(12),=CL12'DC    AL2(0)'
         MVC   CARD+39(11),=CL11'NO COMMENTS'
         PUT   OUTDCBW,CARD
         B     SYM_NEW1                CONTINUE PROCESSING

DOINSERT DC    0H
         MVC   CARD,BLANK              CLEAR BUFFER
         MVI   FLAGS3,0                CLEAR ITEM FLAGS
         MVC   CARD(10),10(R3)         LOAD LABEL TO BE INSERTED
         MVC   NAMESAVE,CARD           SAVE THE NEW NAME STATUS
         LH    R0,$INSRT_L-4(,R3)      LOAD INSERTED ITEM OFFSET
         LH    R5,$INSRT_L-2(,R3)      LOAD INSERTED ITEM LENGTH
         STCM  R0,7,SECTOFST(R2)       OVERLAY PROCESSED OFFSET
         CLI   CARD,C'R'               RMF ITEM?
         BNE   SCALE_OK                NO, GO COMPLETE THE INSERT
         OI    FLAGS1,$NOGET           YES, AVOID COMMENTS PROCESSING
         B     SCALE_OK                GO COMPLETE THE INSERT

SYM_NEW1 DC    0H
         LR    R2,R8                   POINT TO NEXT ITEM'S DETAILS
         MVC   CARD,BLANK              CLEAR BUFFER
         LA    R8,SYMNAME(,R2)         POINT PAST FIXED DATA PART

         TM    ORGVALUE(R2),$NONAME    ANY NAME PRESENT?
         BO    SYMNAMOK                NO
         IC    R3,ORGVALUE(,R2)        YES
         LA    R0,$NAMELEN             GET LENGTH BITS MASK
         NR    R3,R0                   EXTRACT NAME LENGTH CODE
NAMESHOW MVC   CARD(0),SYMNAME(R2)     <<< EXECUTED >>>
         EX    R3,NAMESHOW             LOAD SYMBOL NAME
         LA    R8,1(R3,R8)             POINT PAST NAME
SYMNAMOK DC    0H
         MVC   NAMESAVE,CARD           SAVE THE NEW NAME STATUS

         TM    ORGVALUE(R2),$DATASW    DATA ITEM?
         BO    DATAITEM                YES

         IC    R1,ORGVALUE(,R2)
         LA    R0,$OTHTYPE             GET LENGTH BITS MASK
         NR    R1,R0                   EXTRACT NON-DATA TYPE
         LA    R0,X'20'                GET VALUE FOR DSECT
         MVI   CRNTDSCT,C'9'           INVALIDATE DSECT NAME
         CLR   R1,R0                   IS DSECT THE NON-DATA TYPE?
         BNE   DROP_SYM                NO
         B     GETOFF1                 YES, FIND ITS LISTING LINE
GETOFF0  GET   INDCBW,PRT_LINE         GET ASSEMBLER PRINT LINE
GETOFF1  TM    FLAGS1,$EOF             END-OF-FILE REACHED?
         BO    GETOFF0X                YES, NOTHING TO EXAMINE
         CLC   =C'000000',PRT_LINE+1   LOCATED OFFSET 0 RECORD?
         BNE   GETOFF0                 NO, KEEP LOOKING
         TM    ORGVALUE(R2),$NONAME    ANY NAME PRESENT?
         BNO   GETOFF0N                YES, GO SEE IF IT MATCHES
         LA    R1,PRT_LINE+41          POINT TO LABEL
         LA    R4,PRT_LINE+41+71       POINT TO LAST SOURCE COLUMN
GOF_LP_1 DC    0H
         CLI   0(R1),C' '              PAST ITEM LABEL?
         BE    GOF_LP_2                YES
         LA    R1,1(,R1)               NO, POINT TO NEXT CHARACTER
         CR    R1,R4                   REACHED END OF LINE?
         BL    GOF_LP_1                NO, LOOK AT CHARACTER
         B     GETOFF0                 YES, TRY NEXT LISTING LINE
GOF_LP_2 DC    0H
         CLI   0(R1),C' '              FOUND STATEMENT VERB?
         BNE   GOF_VERB                YES
         LA    R1,1(,R1)               NO, POINT TO NEXT CHARACTER
         CR    R1,R4                   REACHED END OF LINE?
         BL    GOF_LP_2                NO, LOOK AT CHARACTER
         B     GETOFF0                 YES, TRY NEXT LISTING LINE
GOF_VERB DC    0H
         CLC   =CL6'DSECT ',0(R1)      IS THIS A DSECT STATEMENT?
         BNE   GETOFF0                 NO, TRY NEXT LISTING LINE
         CLI   PRT_LINE+41,C' '        UNLABELLED DSECT
         BE    GETOFF0Z                YES, THAT'S UNUSUAL
         LA    R3,PRT_LINE+41          POINT TO LABEL
         LA    R4,CARD                 POINT TO TARGET
LONGLBLP MVC   0(1,R4),0(R3)           COPY A LABEL CHARACTER
         LA    R3,1(,R3)               INCREMENT SOURCE ADDRESS
         LA    R4,1(,R4)               INCREMENT TARGET ADDRESS
         CLI   0(R3),C' '              REACHED END OF LABEL?
         BNE   LONGLBLP                NO, KEEP COPYING IT
         B     GETOFF0Z                LONG DSECT NAME NOW COPIED
SECTNMCK CLC   CARD(0),PRT_LINE+41     <<< EXECUTED >>>
GETOFF0N EX    R3,SECTNMCK             MATCHING DSECT NAME?
         BNE   GETOFF0                 NO, KEEP LOOKING
GETOFF0Z GET   INDCBW,PRT_LINE         GET PAST DSECT SOURCE STATEMENT
GETOFF0X DC    0H

         LA    R0,$D_RENCT             GET RENAME TABLE ENTRY COUNT
         LARL  R3,D_RENAME             POINT TO RENAME TABLE
D_REN_LP DC    0H
         CLC   0(9,R3),CARD            FOUND A MATCH?
         BE    DORENAME                YES
         LA    R3,$D_RENLN(,R3)        NO, POINT TO NEXT ENTRY
         BCT   R0,D_REN_LP
         B     FILTDSCT                HAVE FINAL DSECT NAME
***       NOTE THAT DSECT RENAMING MATCHES ON 9 BYTES,            ***
***       BUT CAN SET A NEW NAME UP TO 12 BYTES LONG              ***
DORENAME DC    0H
         MVC   CARD(12),10(R3)         RENAME THE DSECT

***  THE NEXT INSTRUCTION IS WHY THIS PROGRAM CAN'T BE REENTRANT  ***
         MVI   0(R3),X'FF'             DEACTIVATE THIS TABLE ENTRY

***  CHECK RENAME TABLE ENTRY FOR EXTRA SETTINGS                  ***
         CLI   $D_RENLN-4(R3),C' '     NEW BATCH OF SUBTYPES?
         BH    MORESUBT                YES, GO MAKE IT HAPPEN

***  INSERT SUBTYPE FILTER TABLE IF APPROPRIATE                   ***
FILTDSCT LARL  R7,T89_SUB1             POINT TO NAME TO CHECK FOR
         CLC   CARD(9),0(R7)           TYPE 89 SUBTYPE FILTER?
**       BE    TYP89SUB                YES, GO DO IT
**       LARL  R7,...                  POINT TO NAME TO CHECK FOR
**       CLC   CARD(9),0(R7)           TYPE ?? EXTENSIONS?
         BNE   IS_DSECT                NO, NOW READY FOR NEW DSECT

***  TYPE 89 SUBTYPE FILTERING                                    ***
TYP89SUB MVI   DSCTCARD,C' '           BLANK A BUFFER
         MVC   DSCTCARD+1(L'DSCTCARD-1),DSCTCARD
         MVC   DSCTCARD(L'SUB_T89),SUB_T89
         MVC   DSCTCARD+9(L'SUB_RTD),SUB_RTD
         MVI   DSCTCARD+9+L'SUB_RTD,C'2'
         PUT   OUTDCBW,DSCTCARD        WRITE FILTER DETAILS
         MVI   DSCTCARD,C' '           BLANK A BUFFER
         MVC   DSCTCARD+1(L'DSCTCARD-1),DSCTCARD
         MVC   DSCTCARD+9(8),=CL8'DC    A('
         MVC   DSCTCARD+24(9),=CL9'-REVSMFZ)'
         MVC   DSCTCARD+17(7),0(R7)    LOAD SECTION NAME
         PUT   OUTDCBW,DSCTCARD        WRITE SUBTYPE POINTER
         MVC   DSCTCARD+22(2),=C'T2'   LOAD SECTION NAME
         PUT   OUTDCBW,DSCTCARD        WRITE SUBTYPE POINTER
         B     IS_DSECT                NOW READY FOR NEW DSECT

***  CREATE SUBTYPE ROUTING STRUCTURE AND POINTER VECTOR          ***
MORESUBT MVI   DSCTCARD,C' '           BLANK A BUFFER
         MVC   DSCTCARD+1(L'DSCTCARD-1),DSCTCARD
         MVC   DSCTCARD(6),=CL6'SMFRCD'
         MVC   DSCTCARD+6(2),$D_RENLN-4(R3)  SET SMF RECORD TYPE
         LA    R1,DSCTCARD             POINT TO THIS NEW LABEL
         OI    FLAGS1,$CSTT            RESTRICT SUBROUTINE FUNCTION
         BAS   R14,SECTOPTS            PLUG-IN SUBTYPE FILTER TABLE
         NI    FLAGS1,255-$CSTT        RESET FLAG
         LA    R1,DSCTCARD+9           POINT TO COLUMN 10
         CLI   DSCTCARD+8,C' '         GOT A LONG LABEL?
         BE    *+8                     NO
         LA    R1,DSCTCARD+10          YES, GIVE IT SOME ROOM
         CLI   DSCTCARD+10,C' '        GOT A LONGER LABEL?
         BE    *+8                     NO
         LA    R1,DSCTCARD+11          YES, GIVE IT SOME MORE ROOM
         MVC   0(L'SUB_RTD,R1),SUB_RTD CREATE SUBTYPE TABLE
         LH    R6,$D_RENLN-2(,R3)      GET SUBTYPE COUNT
         CVD   R6,DBL
         OI    DBL+7,X'0F'             PREPARE FOR UNPACK
         UNPK  L'SUB_RTD(5,R1),DBL     SET SUBTYPE UPPER LIMIT
***       NOTE THAT SUBTYPE 0 IS NOT SUPPORTED BY THIS LOGIC      ***
***        (SMF TYPE 30 DOES NOT USE THIS LOGIC BECAUSE THE       ***
***        SAME SECTION STRUCTURE IS USED FOR ALL SUBTYPES        ***
***        AND SO TYPE 30 NEEDS NO SUBTYPE FILTER TABLE)          ***
SUBLIM0S DC    0H
         CLI   L'SUB_RTD(R1),C'0'      LEADING ZERO?
         BNE   SUBLIM0K                NO
         MVC   L'SUB_RTD(5,R1),L'SUB_RTD+1(R1)
         B     SUBLIM0S                LEADING ZERO NOW SUPPRESSED
SUBLIM0K DC    0H
         PUT   OUTDCBW,DSCTCARD        WRITE SUBTYPING SPEC
         MVI   CARDHOLD,C' '           BLANK A BUFFER
         MVC   CARDHOLD+1(L'CARDHOLD-1),CARDHOLD
         ZAP   DBL,=PL1'0'             RESET INITIAL SUBTYPE
         MVC   CARDHOLD+9(8),=CL8'DC    A('
         MVC   CARDHOLD+17(8),CARD     SET HEADER NAME BASE
SUBVECLP DC    0H
         AP    DBL,=PL1'1'             INCREMENT SUBTYPE
         OI    DBL+7,X'0F'             PREPARE FOR UNPACK
         UNPK  CARDHOLD+25(3),DBL      APPEND SUBTYPE NUMBER
         MVC   CARDHOLD+28(9),=CL9'-REVSMFZ)'
SUBVEC0S DC    0H
         CLI   CARDHOLD+25,C'0'        LEADING ZERO?
         BNE   SUBVEC0K                NO
         MVC   CARDHOLD+25(12),CARDHOLD+26
         B     SUBVEC0S                LEADING ZERO NOW SUPPRESSED
SUBVEC0K DC    0H
         PUT   OUTDCBW,CARDHOLD        WRITE SUBTYPE HEADER POINTER
         BCT   R6,SUBVECLP             POINT TO ALL SUBTYPES
IS_DSECT DC    0H
         MVI   CARD+70,C' '            ERASE DATA TYPE IF PRESENT
         MVC   CRNTDSCT,CARD           SAVE CURRENT DSECT NAME
         XC    CRNTOFST,CRNTOFST       RESET OFFSET
         LA    R1,CARD                 POINT TO STATEMENT
         BAS   R14,SECTOPTS            SET SECTION OPTIONS
         PUT   OUTDCBW,CARD            WRITE SECTION DETAILS
         CLI   CARD+71,C' '            CONTINUATION REQUIRED?
         BE    DROP_SYM                NO
         PUT   OUTDCBW,CARDCONT        YES, WRITE THE CONTINUATION
         B     DROP_SYM                SKIP COMMENT EXTRACTION

DATAITEM DC    0H
         MVI   FLAGS3,0                CLEAR ITEM FLAGS
         LA    R4,CARD+5               POINT TO INITIAL CHECK POSITION
         LA    R0,3                    GET THE NUMBER OF CHECKS
FLGCHKLP CLC   =C'FLG',0(R4)           FLAG ITEM?
         BE    FLAGITEM                YES
         BCTR  R4,0                    NO, BACK UP ONE CHARACTER
         BCT   R0,FLGCHKLP             KEEP LOOKING
         CLC   =C'SMF6',CARD
         BNE   FLAGDONE                NOT FROM SMF TYPE 6% RECORD
         CLC   =C'TYP ',CARD+5         CATALOG ENTRY TYPE?
         BE    NDECITEM                YES, CHAR OR HEX BUT NOT DEC
         CLC   =C'SYS ',CARD+5         SAME AS 'FLG' IN THE TYPE 60'S?
         BNE   FLAGDONE                NO, NOT A FLAG ITEM
FLAGITEM MVI   FLAGS3,$HEX             FORMAT FLAG IN HEXADECIMAL ONLY
         B     FLAGDONE
NDECITEM MVI   FLAGS3,$NDEC            NON-DECIMAL ITEM
FLAGDONE SR    R4,R4                   CLEAR FOR INSERT
         IC    R4,0(,R8)               LOAD DATA TYPE CODE
         SRA   R4,2                    DIVIDE CODE BY 4
         IC    R4,DC_TYPES(R4)         GET DATA TYPE CODE
         STC   R4,CARD+70              REPORT DATA TYPE
         LA    R0,1                    GET LENGTH FIELD LENGTH
         SR    R4,R4                   CLEAR ACCUMULATOR
         CLI   0(R8),X'08'             CHARACTER OR HEXADECIMAL?
         LA    R8,1(,R8)               POINT TO LENGTH FIELD
         BH    DATLENLP                NO
         LA    R0,2                    YES, ADJUST LENGTH
DATLENLP DC    0H
         SLL   R4,8                    PROMOTE PREVIOUS BITS
         IC    R4,0(,R8)               INSERT LENGTH BITS
         LA    R8,1(,R8)               POINT PAST PROCESSED BYTE
         BCT   R0,DATLENLP
         LA    R4,1(,R4)               CONVERT LENGTH CODE TO LENGTH

         LA    R5,1                    LOAD IMPLIED MULTIPLICITY
         TM    ORGVALUE(R2),$MULT      M FIELD PRESENT?
         BZ    MULT_OK                 NO, NO MULTIPLICITY
         ICM   R5,7,0(R8)              YES, LOAD IT
         LA    R8,3(,R8)               POINT PAST M FIELD
         BNZ   MULT_OK                 MULTIPLICITY IS NOT ZERO

         LA    R0,$UNZERO#             GET UNZERO TABLE ENTRY COUNT
         LA    R3,UNZEROTB             POINT TO UNZERO TABLE
UNZEROLP DC    0H
         CLC   0(9,R3),CARD            FOUND A MATCH?
         BE    DOUNZERO                YES, DO NOT ZERO ITS SIZE
         LA    R3,$UNZEROL(,R3)        NO, POINT TO NEXT ENTRY
         BCT   R0,UNZEROLP
         B     MULT_OK                 NO MATCH - PROCEED TO ZERO IT
DOUNZERO LA    R5,1                    SET MULTIPLICITY TO 1
         TM    $UNZEROL-2(R3),X'80'    VANISHING NEXT UNNAMED ITEM?
         BNO   *+8                     NO
         OI    FLAGS1,$VNUN            YES, SET FLAG
         CLI   $UNZEROL-1(R3),0        ANY LENGTH TO ASSIGN?
         BE    MULT_OK                 NO
         SR    R4,R4                   CLEAR FOR INSERT
         IC    R4,$UNZEROL-1(,R3)      OVERRIDE LENGTH AS SPECIFIED

MULT_OK  DC    0H
         MR    R4,R4                   GET TOTAL ITEM BYTE SIZE IN R5

         SR    R14,R14                 CLEAR FOR INSERT
         SR    R15,R15                 CLEAR FOR INSERT
         ICM   R14,7,1(R2)             LOAD ITEM OFFSET
ADDSPCLP DC    0H
         C     R8,SYM_CSR              IS THIS THE LAST ITEM?
         BNL   SPACE_OK                YES, NO SPACE FOLLOWS
         CLI   0(R8),X'08'             IS NAMELESS SPACE NEXT?
         BNE   SPACE_OK                NO
         LA    R0,0(R5,R14)            GET OFFSET PAST ITEM
         CLM   R0,7,1(R8)              IS THIS OFFSET OF NEW SPACE?
         BNE   SPACE_OK                NO, END OF AUTOMATIC APPEND
         IC    R15,SECTOFST+3(,R8)     YES, GET TO SIZE OF SPACE
         AR    R5,R15                  ADD IT TO ITEM'S SIZE
         LA    R8,SECTOFST+4(,R8)      POINT PAST PROCESSED SPACE
         B     ADDSPCLP                ACCUMULATE UNNAMED SPACE
SPACE_OK DC    0H

         TM    ORGVALUE(R2),$SCALE     S FIELD PRESENT?
         BZ    SCALE_OK                NO, ZERO SCALING
         LA    R8,2(,R8)               POINT PAST S FIELD
SCALE_OK DC    0H

         CLI   CARD,C' '               NAMED ITEM?
         BNE   NAMED_OK                YES
         TM    FLAGS1,$VNUN            DROPPING NEXT UNNAMED ITEM?
         BNO   UNNNAMED                NO, NOT EXPLICITLY
         NI    FLAGS1,255-$VNUN        YES, RESET FLAG
         B     DROP_SYM                MAKE IT VANISH
UNNNAMED CLC   SECTOFST(3,R2),CRNTOFST+1
         BL    DROP_SYM                DROP NON-CURRENT UNNAMED ITEM
NAMED_OK DC    0H
         CLI   CARD+8,C'_'             MODERN LABEL?
         BE    KEEPTYPE                YES, DO NOT OVERRIDE TYPE
         CLC   =CL6'SMFRCD',CARD       NEW SMF RECORD?
         BE    IS_DSECT                YES, TREAT AS NEW DSECT
KEEPTYPE DC    0H

*  SWITCH TO NEW DSECT IF APPROPRIATE

         LA    R0,$SWITCH#             GET SWITCH TABLE ENTRY COUNT
         LARL  R3,SWITCHTB             POINT TO SWITCH TABLE
D_SWI_LP DC    0H
         CLC   0($SWITCHL/2,R3),CARD   FOUND A MATCH?
         BE    DOSWITCH                YES
         LA    R3,$SWITCHL(,R3)        NO, POINT TO NEXT ENTRY
         BCT   R0,D_SWI_LP
         B     MKRECITM                NO MATCH FOUND

DOSWITCH DC    0H                      CHECK FOR PREPARATORY WORK
         LARL  R7,X14_SUB1             POINT TO RELEVANT ENTRY
         CLC   0($SWITCHL/2,R3),0(R7)  TYPE 14/15 EXTENSIONS?
         BE    TYP1415X                YES

         MVI   DSCTCARD,C' '           BLANK A BUFFER
         MVC   DSCTCARD+1(L'DSCTCARD-1),DSCTCARD
         MVC   DSCTCARD($SWITCHL/2),$SWITCHL/2(R3)
         LA    R1,DSCTCARD             POINT TO STATEMENT
         BAS   R14,SECTOPTS            SET SECTION OPTIONS
         PUT   OUTDCBW,DSCTCARD        WRITE SECTION DETAILS
         CLI   DSCTCARD+71,C' '        CONTINUATION REQUIRED?
         BE    SWITCHOK                NO
         PUT   OUTDCBW,CARDCONT        YES, WRITE THE CONTINUATION
SWITCHOK DC    0H                      CHECK FOR PREPARATORY WORK
         CLI   DSCTCARD+8,C' '         LONG DSECT NAME?
         BNE   SWITCH_X                YES
         MVC   CRNTDSCT,DSCTCARD       NO, UPDATE CURRENT SHORT NAME
SWITCH_X DC    0H

***  INSERT SUBTYPE FILTER TABLE IF APPROPRIATE                   ***
         LARL  R7,X14_SUB1             POINT TO NAME TO CHECK FOR
         CLC   DSCTCARD(9),0(R7)       TYPE 14/15 EXTENSIONS?
         BNE   MKRECITM                NO, NOW READY FOR NEW DSECT

***  TYPE 14/15 EXTENDED INFORMATION SECTION EXTRACTION           ***
TYP1415X MVI   DSCTCARD,C' '           BLANK A BUFFER
         MVC   DSCTCARD+1(L'DSCTCARD-1),DSCTCARD
         MVC   DSCTCARD(L'SUB_X14),SUB_X14
         PUT   OUTDCBW,DSCTCARD        WRITE FILTER DETAILS
         MVI   DSCTCARD,C' '           BLANK A BUFFER
         MVC   DSCTCARD+1(L'DSCTCARD-1),DSCTCARD
         MVC   DSCTCARD+9(8),=CL8'DC    A('
         MVC   DSCTCARD+25(9),=CL9'-REVSMFZ)'
         ZAP   DBL,=PL1'7'
T1415XLP MVC   DSCTCARD+17(8),0(R7)    LOAD SECTION NAME
         LA    R7,SECTSPEL(,R7)        POINT TO NEXT SECTSPEC ENTRY
         PUT   OUTDCBW,DSCTCARD        WRITE SUBTYPE POINTER
         SP    DBL,=PL1'1'             DECREMENT REMAINING SUBTYPES
         BP    T1415XLP                CONTINUE
         MVC   DSCTCARD+17(9),0(R7)    LOAD LONGER SECTION NAME
         MVC   DSCTCARD+26(9),=CL9'-REVSMFZ)'
         LA    R7,SECTSPEL(,R7)        POINT TO NEXT SECTSPEC ENTRY
         PUT   OUTDCBW,DSCTCARD        WRITE SUBTYPE POINTER
         MVC   DSCTCARD+17(12),0(R7)   LOAD LONGER SECTION NAME
         MVC   DSCTCARD+29(9),=CL9'-REVSMFZ)'
         PUT   OUTDCBW,DSCTCARD        WRITE SUBTYPE POINTER
         B     IS_DSECT                NOW READY FOR NEW DSECT

*  GENERATE A RECITEM STATEMENT

*&NAME    RECITEM &OFFSET,&LENGTH,&FLGS

MKRECITM DC    0H
         LA    R0,$VANISH#             GET VANISH TABLE ENTRY COUNT
         LA    R3,VANISHTB             POINT TO VANISH TABLE
VANISHLP DC    0H
         CLC   0(9,R3),CARD            FOUND A MATCH?
         BE    DOVANISH                YES, MAKE IT DISAPPEAR
         LA    R3,$VANISHL(,R3)        NO, POINT TO NEXT ENTRY
         BCT   R0,VANISHLP
         MVC   CARD+38(7),=C'RECITEM'  ITEM DESCRIPTOR
         LTR   R5,R5                   WAS SIZE ZERO?
         BNZ   FIELD_OK                NO
DOVANISH MVC   CARD+38(7),=C'ZEROFLD'  YES, DUMMY OUT OPERATION
         OI    FLAGS1,$ZERO            INHIBIT PUNCHOUT OUTPUT
FIELD_OK DC    0H

*  DO NOT SHOW 2-BYTE LENGTH AS A CHARACTER

         CHI   R5,2                    2-BYTE FIELD?
         BNE   CHKLENGX                NO
         LA    R4,CARD+5               POINT TO INITIAL CHECK POSITION
         LA    R0,3                    GET THE NUMBER OF CHECKS
LENCHKLP CLC   =C'LEN ',0(R4)          LENGTH FIELD?
         BE    ISLENGTH                YES
         BCTR  R4,0                    NO, BACK UP ONE CHARACTER
         BCT   R0,LENCHKLP             KEEP LOOKING
         B     CHKLENGX
ISLENGTH DC    0H
         MVI   FLAGS3,$NCHR            YES, INHIBIT CHARACTER RENDERING
CHKLENGX DC    0H

*  DO NOT SHOW RECORD TYPE AS A CHARACTER

         LA    R0,5
         CLM   R0,7,SECTOFST(R2)       ITEM AT OFFSET 5?
         BNE   CHKTYPEX                NO
         CHI   R5,1                    1-BYTE FIELD?
         BNE   CHKTYPEX                NO
         MVI   FLAGS3,$NCHR            YES, INHIBIT CHARACTER RENDERING
CHKTYPEX DC    0H

*  FLAG BINARY TIME FIELDS

         CHI   R5,4                    4-BYTE FIELD?
         BNE   BINTIMEX                NO
         CLC   =C'TME ',CARD+4         BINARY TOD?
         BE    BIN_TIME                YES
         CLC   =C'TME ',CARD+5         BINARY TOD?
         BE    BIN_TIME                YES
         CLI   CARD+3,C'0'             RECORD TYPE 0 ITEM?
         BE    BINTIMEX                YES
         CLC   =C'RST ',CARD+4         BINARY TOD?
         BE    BIN_TIME                YES
         CLC   =C'RST ',CARD+5         BINARY TOD?
         BE    BIN_TIME                YES
         CLC   =C'SIT ',CARD+4         BINARY TOD?
         BE    BIN_TIME                YES
         CLC   =C'SIT ',CARD+5         BINARY TOD?
         BE    BIN_TIME                YES
         LA    R0,6
         CLM   R0,7,SECTOFST(R2)       ITEM AT OFFSET 6?
         BNE   BINTIMEX                NO
BIN_TIME DC    0H
         MVI   FLAGS3,$BINTOD          FLAG BINARY TOD FIELD
BINTIMEX DC    0H

*  ASSIGN FORMATS TO ITEMS IN THE SMFRCD19 SECTION

         CLC   =C'SMFRCD19',CRNTDSCT   DIRECT ACCESS VOLUME?
         BNE   NOTRCD19                NO
         CHI   R5,4                    4-BYTE FIELD?
         BNE   CHKFMTTB                NO, DO NOT SET A FORMAT
         CLC   =X'000034',SECTOFST(R2) IS ITEM SMF19SPC?
         BE    BRK19TO2                YES, BREAK INTO 2 HALFWORDS
         CLC   =X'000038',SECTOFST(R2) IS ITEM SMF19LEX?
         BE    BRK19TO2                YES, BREAK INTO 2 HALFWORDS
         CLC   =X'000044',SECTOFST(R2) IS ITEM BEFORE THE STATISTICS?
         BH    CHKFMTTB                YES, DO NOT SET A FORMAT
         MVI   FLAGS3,$DEC             FLAG SHOW AS A DECIMAL NUMBER
         B     CHKFMTTB                SECTION NOW PROCESSED
BRK19TO2 LA    R5,2                    REDUCE ITEM LENGTH TO 2 BYTES
         OI    FLAGS1,$1W2H            FLAG HALFWORD INSERTION NEEDED
         B     CHKFMTTB                CONTINUE
NOTRCD19 DC    0H

*  ASSIGN FORMATS TO ITEMS IN THE SMF30CAS SECTION

         CLC   =C'SMF30CAS',CRNTDSCT   CPU ACCOUNTING SEGMENT?
         BNE   NOT30CAS                NO
         CHI   R5,4                    4-BYTE FIELD?
         BH    CHKFMTTB                NO, LONGER THAN 4 BYTES
         MVI   FLAGS3,$HEX             FLAG SHOW THE HEXADECIMAL
         BL    CHKFMTTB                SHORTER THAN 4 BYTES
         CLC   =X'000028',SECTOFST(R2) IS ITEM SMF30IDT?
         BE    CHKFMTTB                YES, THE INTERVAL START DATE
         MVI   FLAGS3,$KMS             FLAG SHOW 1.024MS ACCUMULATOR
         CLC   =X'000050',SECTOFST(R2) IS ITEM SMF30CEP?
         BE    CHKFMTTB                YES, IT IS IN 1.024MS UNITS
         CLC   =X'000070',SECTOFST(R2) IS ITEM SMF30CEPI?
         BE    CHKFMTTB                YES, IT IS IN 1.024MS UNITS
         MVI   FLAGS3,$128             FLAG SHOW 128USEC ACCUMULATOR
         CLC   =X'0000AC',SECTOFST(R2) IS ITEM SMF30_MISSED_SMF30DCT?
         BE    CHKFMTTB                YES, IT IS IN 128USEC UNITS
         MVI   FLAGS3,$JIF             SET FLAG FOR JIFFY ACCUMULATOR
         CLC   =X'000038',SECTOFST(R2) IS ITEM BEFORE SMF30CSC?
         BH    CHKFMTTB                YES, IT IS A JIFFY ACCUMULATOR
         MVI   FLAGS3,$DEC             SET FLAG FOR COUNTERS
         CLC   =X'000044',SECTOFST(R2) IS ITEM BEFORE SMF30ASR?
         BH    CHKFMTTB                YES, IT IS A COUNTER
         CLC   =X'0000A8',SECTOFST(R2) IS ITEM SMF30_MISSED_SMF30BLK?
         BE    CHKFMTTB                YES, IT IS A COUNTER
         MVI   FLAGS3,$JIF             SET FLAG FOR JIFFY ACCUMULATOR
         B     CHKFMTTB                SECTION NOW PROCESSED
NOT30CAS DC    0H

*  ASSIGN FORMATS TO ITEMS IN THE SMF70CTL SECTION

         CLC   =C'SMF70CTL',CRNTDSCT   PROCESSING SECTION SMF70CTL?
         BNE   NOT70CTL                NO
         CLC   =X'000154',SECTOFST(R2) IS ITEM SMF70CPC_TYPE?
         BNE   NOT70CTL                NO
         MVI   FLAGS3,$NDEC            YES, INHIBIT DECIMAL DISPLAY
NOT70CTL DC    0H

*  ASSIGN FORMATS TO ITEMS IN THE SMF73CHA SECTION

         CLC   =C'SMF73CHA',CRNTDSCT   CHANNEL DATA SECTION?
         BNE   NOT73CHA                NO
         CHI   R5,40                   SILLY LENGTH?
         BNL   VANISH73                YES, DROP IT
         CHI   R5,4                    4-BYTE FIELD?
         BNE   CHKFMTTB                NO, HANDLE NORMALLY
         CLC   =X'000018',SECTOFST(R2) BEFORE E-TYPE FIELDS?
         BH    CHKFMTTB                YES, HANDLE NORMALLY
         MVI   FLAGS3,$HFP             FORMAT IS SHORT HFP
         MVC   DBL,CARD                GET ITEM NAME
         MVI   DBL+5,C'?'
         CLC   =C'SMF73?UT',DBL        SMF73TUT OR SMF73PUT?
         BNE   CHKFMTTB                NO, ALL SET
         MVI   FLAGS3,$128+$HFP        SHORT HFP IN 128 USEC UNITS
         B     CHKFMTTB                SECTION NOW PROCESSED
VANISH73 MVC   CARD+38(7),=C'ZEROFLD'  YES, DUMMY OUT OPERATION
         OI    FLAGS1,$ZERO            INHIBIT PUNCHOUT OUTPUT
         B     SHOW_SYM                SECTION NOW PROCESSED
NOT73CHA DC    0H

*  CHECK FOR RMF HEADER AND PRODUCT SECTIONS - "RMF PRECHECK"

         MVC   DBL,CRNTDSCT            COPY SECTION NAME (8 BYTES)
         NI    DBL+4,X'F0'             '0'-'9' -> '0'
         CLC   DBL,=C'SMF70HDR'        RMF HEADER SECTION?
         BE    CHKFMTTB                YES, SKIP UNWANTED EDITING
         CLC   DBL,=C'SMF70PRO'        RMF PRODUCT SECTION?
         BNE   CHKHFPTB                NO, CONTINUE
         MVC   DBL,CARD                COPY ITEM NAME
         NI    DBL+4,X'F0'             '0'-'9' -> '0'
         CLC   DBL,=C'SMF70MFV'        RMF VERSION NUMBER
         BE    RMFINHEX                YES, SHOW IN HEX
         CLC   DBL,=C'SMF70SAM'        RMF INTERVAL SAMPLE COUNT?
         BE    FMTASDEC                YES, SHOW IN DECIMAL
         CLC   DBL,=C'SMF70FLA'        PRODUCT SECTION FLAGS?
         BE    RMFINHEX                YES, SHOW IN HEX
         CLC   DBL,=C'SMF70IET'        INTERVAL EXPIRATION TIME TOKEN?
         BE    RMFINHEX                YES, SHOW IN HEX
         CLC   DBL,=C'SMF70LGO'        OFFSET GMT TO LOCAL TIME?
         BE    RMFINHEX                YES, SHOW IN HEX
         CLC   DBL,=C'SMF70GIE'        PROJECT GMT INTERVAL END?
         BNE   CHKFMTTB                NO, SKIP UNWANTED EDITING
RMFINHEX MVI   FLAGS3,$HEX
         B     CHKFMTTB

*  CHECK FLOATING POINT FORMAT ASSIGNMENT BY SECTION TABLE

CHKHFPTB DC    0H
         CHI   R5,4                    4-BYTE FIELD?
         BNE   CHKFMTTB                NO
         CLI   FLAGS3,0                ANY FORMAT SET?
         BNE   CHKFMTTB                YES, DO NOT ALTER IT HERE
         LA    R0,$H4S#                GET ENTRY COUNT
         LARL  R1,HFP4SECT             POINT TO TABLE
HFPCHKLP CLC   CRNTDSCT,0(R1)          DOES THE NAME MATCH?
         BE    FMTASHFP                YES
         CLC   DSCTCARD(12),0(R1)      DOES THE NAME MATCH?
         BE    FMTASDEC                YES
         LA    R1,$H4SL(,R1)           NO, POINT TO NEXT ENTRY
         BCT   R0,HFPCHKLP             GO CHECK NEXT ENTRY
         B     CHKDECTB                CURRENT SECTION NOT IN TABLE
FMTASHFP MVI   FLAGS3,$HFP             FLAG RENDER NUMBER AS HFP
         B     CHKFMTTB

*  CHECK DECIMAL FORMAT ASSIGNMENT BY SECTION TABLE

CHKDECTB DC    0H
         CLC   =C'R7',CRNTDSCT         RMF SECTION?
         BE    FMTASDEC                YES
         CLC   =C'SMF70',DBL           RMF RECORD?
         BE    FMTASDEC                YES
         LA    R0,$D4S#                GET ENTRY COUNT
         LARL  R1,DEC4SECT             POINT TO TABLE
DECCHKLP CLC   CRNTDSCT,0(R1)          DOES THE NAME MATCH?
         BE    FMTASDEC                YES
         CLC   DSCTCARD(12),0(R1)      DOES THE NAME MATCH?
         BE    FMTASDEC                YES
         LA    R1,$D4SL(,R1)           NO, POINT TO NEXT ENTRY
         BCT   R0,DECCHKLP             GO CHECK NEXT ENTRY
         B     CHKFMTTB                CURRENT SECTION NOT IN TABLE
FMTASDEC MVI   FLAGS3,$DEC             FLAG RENDER NUMBER IN DECIMAL

*  CHECK ITEM FORMAT ASSIGNMENT TABLE

CHKFMTTB DC    0H
         LA    R0,$FMT#                GET ENTRY COUNT
         LARL  R1,ITEMFMTS             POINT TO TABLE
FMTCHKLP CLC   0(9,R1),CARD            DOES THE NAME MATCH?
         BE    ASIGNFMT                YES
         LA    R1,$FMTL(,R1)           NO, POINT TO NEXT ENTRY
         BCT   R0,FMTCHKLP             GO CHECK NEXT ENTRY

         CLI   FLAGS3,0                ANY FORMAT SET?
         BNE   FMT_OKAY                YES, USE IT

         CHI   R5,4                    ITEM LONGER THAN 4 BYTES?
         JH    LENOVER4                YES
         CLC   =C'DEV',CARD+5          DEVICE NUMBER OR TYPE FIELD?
         BNE   LENOVER4                NO
         MVI   FLAGS3,$HEX             YES, SHOW IN HEX
         CHI   R5,4                    SHORTER THAN 4 BYTES?
         BL    FMT_OKAY                YES, HEX IS GOOD
         CLC   =C'R72',CARD            MIGHT IT BE A COUNTER?
         BH    FMT_OKAY                NO
         MVI   FLAGS3,0                YES, BELAY THAT
LENOVER4 DC    0H

         CHI   R5,1                    1-BYTE FIELD?
         BNE   FMT_OKAY                NO
         MVI   FLAGS3,$HEX             YES, PROBABLY A FLAG BYTE
         CLC   =CL3'SMF89',CRNTDSCT
         BE    FMT_OKAY
         CLC   =CL2'FL',CARD+5         PROBABLE FLAG BYTE?
         BE    FMT_OKAY                YES, SHOW AS HEX
         CLC   =CL2'FL',CARD+6         PROBABLE FLAG BYTE?
         BE    FMT_OKAY                YES, SHOW AS HEX
         CLI   CARD+7,C'F'             PROBABLE FLAG BYTE?
         BE    FMT_OKAY                YES, SHOW AS HEX
         MVI   FLAGS3,0                CLEAR FORMAT ASSIGNMENT
         CLC   =CL3'SMF64',CRNTDSCT
         BNE   FMT_OKAY
         MVI   FLAGS3,$HEX
         CLI   SECTOFST+2(R2),X'FE'    SMF64STR OR SMF64BNO?
         BL    FMT_OKAY                NO, SHOW AS BIT FLAGS
         MVI   FLAGS3,$DEC             YES, SHOW AS NUMBERS
         B     FMT_OKAY

ASIGNFMT DC    0H
         MVC   FLAGS3,$FMTL-1(R1)      ASSIGN ITEM FORMAT
FMT_OKAY DC    0H

*  DO SOME THINGS TO CORRECTLY HANDLE THE START OF AN SMF RECORD
*  SUCH AS RECOGNISING NON-STANDARD DSECT NAMES (DSECTTBL) AND
*  LOGICALLY INSERTING MISSING DSECT STATEMENTS WHEN AN RDW
*  LENGTH FIELD IS ENCOUNTERED AT OFFSET ZERO.  IT IS BECAUSE
*  OF THE ABSENT DSECT STATEMENTS AT THE START OF SOME OF THE
*  OLDER SMF RECORD TYPE STRUCTURES THAT EACH SMF RECORD TYPE
*  MACRO MUST BE EXECUTED IN ITS OWN LOGICAL ASSEMBLE PROCESS
*  - OTHERWISE RECORD ITEM OFFSETS WOULD BE INCORRECT.

         ICM   R0,7,SECTOFST(R2)       IS ITEM AT OFFSET ZERO?
         BNZ   SHOW_SYM                NO, NOT A NEW STRUCTURE
         CLC   =CL3'SMF',CARD          EXPECTED PREFIX?
         BE    SMFR_CHK                YES
         LA    R0,$DSECTB#             NO
         LA    R3,DSECTTBL             LOOK AT OTHER KNOWN NAMES
DSCTCKLP DC    0H
         CLC   0(8,R3),CARD            FOUND A MATCH?
         BE    THISRECD                YES
         LA    R3,10(,R3)              NO, POINT TO NEXT ENTRY
         BCT   R0,DSCTCKLP
         B     SHOW_SYM                NO MATCH FOUND
THISRECD DC    0H
         MVC   DBL(2),8(R3)            GET RECORD TYPE NUMERICS
         B     SECT_CHK
SMFR_CHK DC    0H
         CLI   CARD+3,C'0'             EXPECTED NUMERIC?
         BL    SHOW_SYM                NO
         MVC   DBL(1),CARD+3           YES, COPY IT
         MVI   DBL+1,C' '
         CLC   =CL4'LEN ',CARD+4       SINGLE-DIGIT LENGTH FIELD?
         BE    SECT_CHK                YES
         CLC   =CL4'LEN ',CARD+5       DOUBLE-DIGIT LENGTH FIELD?
         BNE   SHOW_SYM                NO
         CLI   CARD+4,C'0'             EXPECTED NUMERIC?
         BL    SHOW_SYM                NO
         MVC   DBL+1(1),CARD+4         YES, COPY IT
         CLI   CARD+3,C'7'             RMF SMF RECORD?
         BE    SHOW_SYM                YES, ALREADY HANDLED ELSEWHERE
SECT_CHK DC    0H
         MVI   DSCTCARD,C' '           BLANK OUTPUT BUFFER
         MVC   DSCTCARD+1(L'DSCTCARD-1),DSCTCARD
         MVC   DSCTCARD(6),=CL6'SMFRCD'
         MVC   DSCTCARD+6(2),DBL
PUT_SECT DC    0H
         CLC   CRNTDSCT,DSCTCARD       CORRECT DSECT ALREADY CURRENT?
         BE    SHOW_SYM                YES, NO NEED FOR INSERTION
         LA    R1,DSCTCARD             POINT TO STATEMENT
         BAS   R14,SECTOPTS            SET SECTION OPTIONS
         PUT   OUTDCBW,DSCTCARD
         MVC   CRNTDSCT,DSCTCARD       UPDATE CURRENT DSECT NAME
         XC    CRNTOFST,CRNTOFST       RESET OFFSET
         CLI   DSCTCARD+71,C' '        CONTINUATION REQUIRED?
         BE    SHOW_SYM                NO
         PUT   OUTDCBW,CARDCONT        YES, WRITE THE CONTINUATION

SHOW_SYM DC    0H
         SR    R0,R0                   CLEAR FOR INSERT
         ICM   R0,7,SECTOFST(R2)       GET ITEM'S OFFSET
         CVD   R0,DBL
         OI    DBL+7,X'0F'             PREPARE FOR UNPACK
         UNPK  CARD+46(5),DBL          SPECIFY THE OFFSET
         MVI   CARD+51,C','
         CVD   R5,DBL
         OI    DBL+7,X'0F'             PREPARE FOR UNPACK
         UNPK  CARD+52(5),DBL          SPECIFY THE SIZE
         MVI   CARD+57,C','
         SR    R15,R15
         IC    R15,FLAGS3
         CVD   R15,DBL
         OI    DBL+7,X'0F'             PREPARE FOR UNPACK
         UNPK  CARD+58(3),DBL          SPECIFY FLAGS
         LA    R15,4                   SUPPRESS UP TO 4 LEADING ZEROES
         LA    R14,4                   SUPPRESS UP TO 4 LEADING ZEROES
         CLI   CARD+58,C'0'            LEADING ZERO?
         BNE   ZERO_LP1                NO
         MVC   CARD+58(3),CARD+59      YES, SUPPRESS IT
         CLI   CARD+58,C'0'            LEADING ZERO?
         BNE   ZERO_LP1                NO
         MVC   CARD+58(2),CARD+59      YES, SUPPRESS IT
ZERO_LP1 DC    0H
         CLI   CARD+52,C'0'            LEADING ZERO IN DECIMAL SIZE?
         BNE   ZERO_LP2                NO
         MVC   CARD+52(9),CARD+53      YES, SUPPRESS IT
         BCT   R15,ZERO_LP1
ZERO_LP2 DC    0H
         CLI   CARD+46,C'0'            LEADING ZERO IN DECIMAL OFFSET?
         BNE   ZEROS_OK                NO
         MVC   CARD+46(15),CARD+47     YES, SUPPRESS IT
         BCT   R14,ZERO_LP2
ZEROS_OK DC    0H
         AR    R0,R5                   UPDATE CURRENT OFFSET
         ST    R0,CRNTOFST             SAVE UPDATED VALUE
         TM    FLAGS1,$EOF+$NOGET      END-OF-FILE REACHED?
         BNZ   PUT_CARD                YES
         CLI   CARD,C' '               NAMED ITEM?
         BH    IS_NAMED                YES
         B     ITEMANON                NO

LOOPANON DC    0H
         GET   INDCBW,PRT_LINE         GET ASSEMBLER PRINT LINE
         TM    FLAGS1,$EOF             END-OF-FILE REACHED?
         BO    PUT_CARD                YES
ITEMANON DC    0H
         LR    R15,R2                  SAVE PRE-TRT R2
         TRT   PRT_LINE+1(6),NONHEXTB  OFFSET PRESENT IN PRINT LINE?
         LR    R2,R15                  RESTORE PRE-TRT R2
         BNZ   LOOPANON                NO, KEEP LOOKING
         TR    PRT_LINE+1(6),HEXCHRTB  CONVERT LETTERS TO NUMBERS
         PACK  DBL,PRT_LINE+1(6)       PACK THE OFFSET
         L     R14,DBL+4
         SRL   R14,4                   GET THE OFFSET
         CLM   R14,7,SECTOFST(R2)      AT THE RIGHT SPOT?
         BL    LOOPANON                NO
         BH    PUT_CARD                NO, GONE PAST IT
         CLI   PRT_LINE+41,C' '        ANY LABEL PRESENT?
         BE    IS_NAMED                NO
         CLI   PRT_LINE+41+8,C' '      DOES NAME EXTEND INTO COLUMN 9?
         BE    LOOPANON                NO, SO IT IS NOT "UNNAMED"
         LA    R0,36                   GET SUPPORTED NAME LENGTH LIMIT
         LA    R14,CARD                SET TARGET POINTER
         LA    R15,PRT_LINE+41         SET SOURCE POINTER
SET_NMLP DC    0H
         MVC   0(1,R14),0(R15)         COPY A NAME CHARACTER
         LA    R14,1(,R14)             ADJUST TARGET POINTER
         LA    R15,1(,R15)             ADJUST SOURCE POINTER
         CLI   0(R15),C' '             REACHED END OF NAME?
         BE    PUT_CARD MULT0CHK       @@@      YES
         BCT   R0,SET_NMLP
         B     PUT_CARD
MULT0CHK LA    R0,PRT_LINE+41+71       GET SCAN LIMIT
MULT0LP1 LA    R15,1(,R15)             POINT TO NEXT CHARACTER
         CR    R15,R0                  REACHED SCAN LIMIT?
         BNL   PUT_CARD                IGNORE STRANGE SYNTAX
         CLI   0(R15),C' '             ANOTHER BLANK?
         BE    MULT0LP1                YES
MULT0LP2 LA    R15,1(,R15)             POINT TO NEXT CHARACTER
         CR    R15,R0                  REACHED SCAN LIMIT?
         BNL   PUT_CARD                IGNORE STRANGE SYNTAX
         CLI   0(R15),C' '             ANOTHER NON-BLANK?
         BNE   MULT0LP2                YES, SKIP THROUGH OP NAME
MULT0LP3 LA    R15,1(,R15)             POINT TO NEXT CHARACTER
         CR    R15,R0                  REACHED SCAN LIMIT?
         BNL   PUT_CARD                IGNORE STRANGE SYNTAX
         CLI   0(R15),C' '             ANOTHER BLANK?
         BE    MULT0LP3                YES, SKIP THROUGH OP NAME
         CLI   0(R15),C'0'             ZERO MULTIPLICITY OPERAND?
         BNE   PUT_CARD                NO, GOOD
         MVI   CARD,C' '               YES, BLANK EXTRACTED LABEL
         MVC   CARD+1(35),CARD
         B     LOOPANON                TRY NEXT STATEMENT

LP_NAMED DC    0H
         GET   INDCBW,PRT_LINE         GET ASSEMBLER PRINT LINE
         TM    FLAGS1,$EOF             END-OF-FILE REACHED?
         BO    PUT_CARD                YES
IS_NAMED DC    0H
         LA    R14,CARD
         LA    R15,PRT_LINE+41
NM_CHKLP DC    0H
         OI    0(R15),X'40'            UPPER CASE LISTING CHARACTER
         CLC   0(1,R14),0(R15)         FOUND MATCHING LABEL?
         BNE   LP_NAMED                NO, KEEP LOOKING
         CLI   0(R14),C' '             PAST END OF NAME?
         BE    NM_ALIGN                YES
         LA    R14,1(,R14)
         LA    R15,1(,R15)
         B     NM_CHKLP                CHECK WHOLE NAME LABEL
NM_ALIGN CLI   CARD+38,C'Z'            IS IT A ZERO LENGTH FIELD?
         BE    DROP_SYM                YES, SUPPRESS IT
*        LTR   R5,R5                   IS IT A ZERO LENGTH FIELD?
*        BZ    DROP_SYM                YES, SUPPRESS IT
         MVC   CARD+9(22),CARD+38      NAME LENGTH < 9
         MVC   CARD+31(38),CARD+30     SO MAKE ALIGNMENT NICE
PUT_CARD DC    0H
         TM    FLAGS1,$ZERO            INHIBITING PUNCHOUT OUTPUT?
         BO    SKIPOUT1                YES
         PUT   OUTDCBW,CARD            WRITE ITEM DETAILS
SKIPOUT1 DC    0H
         BAS   R14,GET_CMTS            GO EXTRACT COMMENTS FOR ITEM
DROP_SYM DC    0H
         C     R8,SYM_CSR              REACHED END OF DATA?
         BL    SYM_ITEM                NO, GO PROCESS NEXT ITEM

         MVC   CARD,BLANK              BLANK OUTPUT BUFFER
         MVC   CARD+9(2),=CL2'DC'      STATEMENT TYPE
         MVC   CARD+15(6),=CL6'AD(-1)' END ON DOUBLEWORD BOUNDARY
         PUT   OUTDCBW,CARD            WRITE ALIGNMENT STATEMENT
         MVC   CARD+9(13),=CL13'END   REVSMFZ'
         PUT   OUTDCBW,CARD            WRITE END STATEMENT
         MVI   DBL,X'80'
         CLOSE (INDCBW),MF=(E,DBL)
         MVI   DBL,X'80'
         CLOSE (OUTDCBW),MF=(E,DBL)

         SYSSTATE ARCHLVL=3            GET BETTER INLINE CODE
WINDITUP DC    0H
         L     R13,4(,R13)
         L     R0,=A($WORKLEN)
         LR    R1,R12
         FREEMAIN RU,LV=(0),A=(1)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14


*  SECTION OPTIONS ROUTINE - GENERATE A RECSECT STATEMENT

*   R1 -> COLUMN 1 OF RECSECT STATEMENT RECORD WITH LABEL LOADED
*  R13 -> REGISTER SAVE AREA
*  R14 -> RETURN POINT
*  DBL -- USED AS A WORK AREA
*         COMMUNICATION REGISTERS ARE NOT PRESERVED
*
*&NAME    RECSECT &FLG1,&FLG2,&OO,&LO,&NO,&OM,&LM,&NM,&LVL,&NXTSECT

SECTOPTS DC    0H                      DETERMINE SECTION OPTIONS
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LA    R14,72(,R13)            POINT TO NEXT SAVE AREA
         ST    R13,4(,R14)             CHAIN THEM
         ST    R14,8(,R13)
         LR    R13,R14                 ACTIVATE NEW SAVE AREA

         TM    FLAGS1,$CSTT            CREATING SUBTYPE TABLE?
         BO    STPLUGIN                YES, JUST PLUG IT IN

*  FIRST, LOOK FOR A NAME MATCH IN 'SECTDESC' TABLE

         LARL  R2,SECTDESC             POINT TO SECTION DESCRIPTIONS
         XC    DESCSAVE,DESCSAVE       RESET FOUND ENTRY POINTER
DESCLOOP CLI   0(R2),X'FF'             END OF TABLE?
         BE    GET_SPEC                YES, NO MATCH IN TABLE
         CLC   2(12,R2),0(R1)          NAME MATCH?
         BE    GOT_DESC                YES, GOT A DESCRIPTION
         AH    R2,0(,R2)               POINT TO THE NEXT ENTRY
         B     DESCLOOP                CONTINUE THE SEARCH

GOT_DESC ST    R2,DESCSAVE             SAVE MATCHING ENTRY ADDRESS

*  SECOND, LOOK FOR A NAME MATCH IN 'SECTSPEC' TABLE

GET_SPEC LARL  R2,SECTSPEC             POINT TO KNOWN-NAME TABLE
SPECLOOP CLI   0(R2),X'FF'             END OF TABLE?
         BE    SECNAMLK                YES, NO MATCH IN TABLE
         CLC   0(12,R2),0(R1)          NAME MATCH?
         BE    GOT_SPEC                YES, GOT FULL SECTION SPECS
         LA    R2,SECTSPEL(,R2)        POINT TO THE NEXT ENTRY
         B     SPECLOOP                CONTINMUE THE SEARCH

GOT_SPEC MVC   HOLD_FG1(12),12(R2)     LOAD MOST OF THE SETTINGS
         MVC   HOLD_NXT,24(R2)         LOAD NAME OF NEXT SECTION
         B     OCL_OK                  GO MAKE 'RECSECT' STMT

*  NOT FOUND IN 'SECTSPEC' SO NOW LOOK IN 'SECNAMES' TABLE

SECNAMLK XC    @HOLDTOP($HOLDLEN),@HOLDTOP RESET FOR NEW SECTION
         MVI   HOLD_FG1,$D1LAST        FLAG LAST SECTION OF RECORD
         MVI   HOLD_NO+1,1             1 OCCURRENCE
         MVI   HOLD_LM,3               2-BYTE LENGTH IN RDW
         LARL  R2,SECNAMES             POINT TO KNOWN-NAME TABLE
         LA    R3,$SECNM#              GET TABLE ENTRY COUNT
SECNAMLP DC    0H
         CLC   0($SECNMLN-6,R1),0(R2)  NAME MATCH?
         BE    FOUNDSEC                YES
         LA    R2,$SECNMLN(,R2)        POINT TO NEXT ENTRY
         BCT   R3,SECNAMLP
         B     OCL_OK                  NOT FOUND IN 'SECNAMES' EITHER
FOUNDSEC DC    0H                      NAME FOUND IN TABLE
         MVC   HOLD_FG1,$SECNMLN-6(R2) COPY OPTION FLAGS
         MVC   HOLD_LVL,$SECNMLN-5(R2) COPY SECTION LEVEL
         MVC   HOLD_OO,$SECNMLN-2(R2)  COPY INDICATOR OFFSET
         TM    HOLD_FG1,$D1LAST        LAST SECTION OF RECORD?
         BO    SECOPTS                 YES
         MVC   HOLD_NXT,$SECNMLN(R2)   NO, COPY NEXT SECTION NAME
SECOPTS  DC    0H                      COMPLETE SECTION DETAILS

         ICM   R0,15,$SECNMLN-6(R2)    BASE SECTION OF RECORD?
         BZ    SECOPTS1                YES
         TM    HOLD_FG1,$D1LNBYT       ACTUAL VALUES SUPPLIED?
         BNO   SECOPTS2                NO
         MVI   HOLD_OM,0               ZERO OFFSET INSERT MASK
         MVI   HOLD_LM,0               ZERO LENGTH INSERT MASK
SECOPTS1 MVC   HOLD_OO,$SECNMLN-4(R2)  COPY ACTUAL OFFSET
         MVC   HOLD_LO,$SECNMLN-2(R2)  COPY ACTUAL LENGTH
         B     OCL_OK                  O-L-C PROCESSED

SECOPTS2 LH    R4,HOLD_OO              GET OFFSET LOCATOR
         LA    R4,2(,R4)               POINT PAST OFFSET
*        MVI   HOLD_OM,3               2-BYTE OFFSET
         TM    HOLD_FG1,$D1OFST4       4-BYTE OFFSET?
         BZ    OM_OK                   NO
         LA    R4,2(,R4)               POINT PAST OFFSET
         MVI   HOLD_OM,15              4-BYTE OFFSET
OM_OK    DC    0H                      OFFSET PROCESSED

         TM    HOLD_FG1,$D1OCL         IS ORDER OFFSET, COUNT, LENGTH?
         BO    DO_OCL                  YES
         TM    HOLD_FG1,$D1O4L2        DOES LENGTH FOLLOW OFFSET?
         BNO   OCL_OK                  NO
         MVI   HOLD_LM,3               YES, 2-BYTE LENGTH
         STH   R4,HOLD_LO              STORE LENGTH OFFSET
         LA    R4,2(,R4)               POINT PAST LENGTH
         TM    HOLD_FG1,$D1L2N2        DOES NUMBER FOLLOW LENGTH?
         BNO   OCL_OK                  NO
         MVI   HOLD_NM,3               YES, 2-BYTE NUMBER
         STH   R4,HOLD_NO              STORE NUMBER OFFSET
         B     OCL_OK                  O-L-C PROCESSED

DO_OCL   MVI   HOLD_NM,3               2-BYTE NUMBER (OR COUNT)
         STH   R4,HOLD_NO              STORE NUMBER OFFSET
         LA    R4,2(,R4)               POINT PAST NUMBER
         MVI   HOLD_LM,3               2-BYTE LENGTH
         STH   R4,HOLD_LO              STORE LENGTH OFFSET
OCL_OK   DC    0H                      O-C-L PROCESSED

         LARL  R15,LBL30ACS            POINT TO ACCOUNTING SECTION NAME
         CR    R15,R2                  IS THIS THE CURRENT SECTION?
         BNE   ACCT_OK                 NO
         MVI   HOLD_FG2,$D2PLUSL       EACH FIELD HAS ITS OWN LENGTH
         MVI   HOLD_LM,1               LENGTH INDICATOR IS 1 BYTE
         XC    HOLD_LO,HOLD_LO         LENGTH INDICATOR IS AT OFFSET 0
ACCT_OK  DC    0H                      O-C-L PROCESSED

         MVC   32(7,R1),=C'RECSECT'    SET STATEMENT TYPE
         LA    R15,40(,R1)             POINT TO TARGET
         SR    R0,R0                   CLEAR FOR INSERT
         IC    R0,HOLD_FG1             GET FLAG BYTE 1
         BAS   R14,N3COMMA             PRODUCE THE NUMBER
         IC    R0,HOLD_FG2             GET FLAG BYTE 2
         BAS   R14,N3COMMA             PRODUCE THE NUMBER
         LR    R6,R15                  SAVE

         CLC   =CL2'  ',14(R1)         OKAY TO MOVE VERB TO COLUMN 16?
         BNE   ALIGN_OK                NO
         LA    R15,15(,R1)             YES, POINT TO IT
         LA    R0,32-15                GET SIZE OF MOVE
         CLC   =CL2'  ',8(R1)          OKAY TO MOVE VERB TO COLUMN 10?
         BNE   DO_ALIGN                NO
         LA    R15,9(,R1)              YES, POINT TO IT
         LA    R0,32-9                 GET SIZE OF MOVE
DO_ALIGN MVC   0(38,R15),32(R1)        IMPROVE STATEMENT TEXT ALIGNMENT
         SR    R6,R0                   POINT PAST LOADED TEXT
ALIGN_OK MVI   71(R1),C'+'             INDICATE CONTINUATION FOLLOWS

         MVI   CARDCONT,C' '           BLANK A BUFFER
         MVC   CARDCONT+1(L'CARDCONT-1),CARDCONT
         LA    R15,CARDCONT+15         POINT TO TARGET
         LH    R0,HOLD_OO              GET THE VALUE
         BAS   R14,N5COMMA             PRODUCE THE NUMBER
         LH    R0,HOLD_LO              GET THE VALUE
         BAS   R14,N5COMMA             PRODUCE THE NUMBER
         LH    R0,HOLD_NO              GET THE VALUE
         BAS   R14,N5COMMA             PRODUCE THE NUMBER
         SR    R0,R0                   CLEAR FOR INSERT
         IC    R0,HOLD_OM              GET THE VALUE
         BAS   R14,N3COMMA             PRODUCE THE NUMBER
         IC    R0,HOLD_LM              GET THE VALUE
         BAS   R14,N3COMMA             PRODUCE THE NUMBER
         IC    R0,HOLD_NM              GET THE VALUE
         BAS   R14,N3COMMA             PRODUCE THE NUMBER
         IC    R0,HOLD_LVL             GET THE VALUE
         BAS   R14,N3COMMA             PRODUCE THE NUMBER
         CLI   HOLD_NXT,C' '           NEXT SECTION KNOWN?
         BH    SAY_NEXT                YES
         BCTR  R15,0                   NO, BACK UP ONE
         MVI   0(R15),C' '             ERASE TRAILING COMMA
         B     SECTFLOW

SAY_NEXT MVC   0(L'HOLD_NXT,R15),HOLD_NXT  SUPPLIED NEXT SECTION NAME
         LA    R15,L'HOLD_NXT(,R15)    POINT PAST LOADED TEXT
SECTFLOW LA    R14,CARDCONT+15         POINT TO CONTINUATION TEXT
         SR    R15,R14                 GET ITS LENGTH
         LA    R0,0(R15,R6)            POINT PAST WHERE IT WOULD BE
         LA    R7,71(,R1)              POINT TO LIMIT OF THIS
         CR    R7,R0                   WILL IT FIT ON ONE LINE?
         BL    SECTDONE                NO, USE CONTINUATION LINE
         LR    R7,R15                  YES, COPY LENGTH TO MOVE
         MVCL  R6,R14                  LOAD TEXT ON TO ONE LINE
         MVI   71(R1),C' '             DISPENSE WITH CONTINUATION

***  SINCE EVERY OBSERVED 'RECSECT' STATEMENT UP TO THIS POINT      ***
***  HAS ALWAYS FITTED IN A SINGLE RECORD, APPENDING THE SECTION    ***
***  DESCRIPTION WILL ONLY BE DONE FOR THIS CASE                    ***

         ICM   R2,15,DESCSAVE          ANY DESCRIPTION TO SUPPLY?
         BZ    SECTDONE                NO
         LA    R14,70(,R1)             POINT TO LAST TEXT COLUMN
DESC_LP1 CLI   0(R14),C' '             TRAILING BLANK?
         BNE   DESCCONT                NO
         BCT   R14,DESC_LP1            YES, BACK UP ONE AND RETEST
DESCCONT MVI   1(R14),C','             APPEND A COMMA
         MVI   71(R1),C'+'             INDICATE CONTINUATION FOLLOWS
         MVI   CARDCONT,C' '           BLANK A BUFFER
         MVC   CARDCONT+1(L'CARDCONT-1),CARDCONT
         MVC   CARDCONT+15(6),=C'DESC='''
         LA    R14,CARDCONT+15+6       POINT TO DESCRIPTION TARGET
         LH    R3,0(,R2)               GET ENTRY LENGTH
         AHI   R3,-2-12                GET DESCRIPTION LENGTH
         AHI   R2,2+12                 POINT TO THE DESCRIPTION
         LR    R15,R3                  GET TARGET LENGTH FROM SOURCE
         MVCL  R14,R2                  LOAD DESCRIPTION TEXT
         MVI   0(R14),C''''            APPEND A QUOTE

SECTDONE DC    0H                      RECSECT MACRO CALL GENERATED

         CLC   =CL6'PREMVS',0(R1)      NEW SMF RECORD?
         BE    STPLUGIN                YES
         CLC   =CL6'SMFRCD',0(R1)      NEW SMF RECORD?
         BNE   SMFRCDOK                NO
         CLI   CARD+8,C'_'             MODERN LABEL?
         BE    SMFRCDOK                YES, NOT A NEW RECORD START

***  AFTER SUBROUTINE ENTRY, LOGIC JUMPS TO THIS POINT IF THE       ***
***  PURPOSE IS TO ONLY UPDATE THE PRIMARY RECORD TYPE STRUCTURE    ***
***  ADDRESS FILTER TABLE WITH THE ADDRESS OF A SECONDARY RECORD    ***
***  SUBTYPE STRUCTURE ADDRESS FILTER TABLE, THUS REUSING SOME CODE ***
STPLUGIN DC    0H                      CONNECT 2NDRY FILTER TO PRIMARY

         MVI   CARDHOLD,C' '           BLANK A BUFFER
         MVC   CARDHOLD+1(L'CARDHOLD-1),CARDHOLD
         MVC   CARDHOLD+9(3),=CL3'ORG'
         MVC   CARDHOLD+15(12),=CL12'SMF_RECS+(4*'
         MVC   CARDHOLD+27(3),6(R1)
         LA    R14,CARDHOLD+28
RCD_LOOP DC    0H
         CLI   0(R14),C' '             UP TO BLANKS YET?
         BE    RCD_BRAK                YES
         LA    R14,1(,R14)             NO, POINT TO NEXT CHARACTER
         B     RCD_LOOP
RCD_BRAK DC    0H
         MVI   0(R14),C')'             COMPLETE THE STATEMENT
         LR    R2,R1                   POINT TO LABEL OF RECSECT STMT
         PUT   OUTDCBW,CARDHOLD        WRITE ORG STATEMENT
         MVI   CARDHOLD,C' '           BLANK A BUFFER
         MVC   CARDHOLD+1(79),CARDHOLD
         MVC   CARDHOLD+9(8),=CL8'DC    A('
         MVC   CARDHOLD+17(9),0(R2)
         LA    R14,CARDHOLD+24
ADCON_LP DC    0H
         CLI   0(R14),C' '             UP TO BLANKS YET?
         BE    RCD_ADCN                YES
         LA    R14,1(,R14)             NO, POINT TO NEXT CHARACTER
         B     ADCON_LP
RCD_ADCN DC    0H
         MVC   0(9,R14),=CL9'-REVSMFZ)'
         PUT   OUTDCBW,CARDHOLD        WRITE DC A(..) STATEMENT
         CLC   =C'14-',CARDHOLD+23     SMF TYPE 14?
         BNE   NOT_1415                NO
         PUT   OUTDCBW,CARDHOLD        YES, ALSO HOOK UP SMF TYPE 15
NOT_1415 DC    0H
         MVI   CARDHOLD,C' '           BLANK A BUFFER
         MVC   CARDHOLD+1(79),CARDHOLD
         MVC   CARDHOLD+9(3),=CL3'ORG'
         PUT   OUTDCBW,CARDHOLD        WRITE ORG STATEMENT

SMFRCDOK DC    0H
         L     R13,4(,R13)             POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         BR    R14                     RETURN TO CALLER

*  PRODUCE 'NNN,' WITH LEFT-ALIGNMENT LEADING-ZERO SUPPRESSION
*
*  ON ENTRY:     GPR0 = VALUE TO SHOW
*                GPR14->RETURN POINT
*                GPR15->OUTPUT AREA
*
*  ON EXIT:      GPR15->PAST OUTPUT PRODUCED
*                GPR0 = LENGTH OF OUTPUT PRODUCED
*                DBL  - USED AS WORK AREA
*
N3COMMA  CVD   R0,DBL                  GET THE VALUE IN DECIMAL
         OI    DBL+7,X'0F'             PREPARE FOR UNPACK
         UNPK  0(3,R15),DBL            FORMAT THE NUMBER
         MVI   3(R15),C','             SUPPLY TRAILING COMMA
         LA    R0,4                    GET OUTPUT LENGTH
         CLI   0(R15),C'0'             LEADING ZERO?
         BNE   N3COMMAX                NO, GO EXIT
         MVC   0(4,R15),1(R15)         YES, SUPPRESS IT
         BCTR  R0,0                    DECREMENT OUTPUT LENGTH
         CLI   0(R15),C'0'             LEADING ZERO?
         BNE   N3COMMAX                NO, GO EXIT
         MVC   0(3,R15),1(R15)         YES, SUPPRESS IT
         BCTR  R0,0                    DECREMENT OUTPUT LENGTH
N3COMMAX AR    R15,R0                  POINT PAST OUTPUT
         BR    R14                     RETURN TO CALLER

*  PRODUCE 'NNNNN,' WITH LEFT-ALIGNMENT LEADING-ZERO SUPPRESSION
*
*  ON ENTRY:     GPR0 = VALUE TO SHOW
*                GPR14->RETURN POINT
*                GPR15->OUTPUT AREA
*
*  ON EXIT:      GPR15->PAST OUTPUT PRODUCED
*                GPR0 = LENGTH OF OUTPUT PRODUCED
*                DBL  - USED AS WORK AREA
*
N5COMMA  CVD   R0,DBL                  GET THE VALUE IN DECIMAL
         OI    DBL+7,X'0F'             PREPARE FOR UNPACK
         UNPK  0(5,R15),DBL            FORMAT THE NUMBER
         MVI   5(R15),C','             SUPPLY TRAILING COMMA
         ST    R2,DBL                  SAVE WORK REGISTER
         LA    R2,4                    GET MAXMIMUM ZEROS TO HIDE
N5COMMLP CLI   0(R15),C'0'             LEADING ZERO?
         BNE   N5COMMAX                NO, GO EXIT
         MVC   0(6,R15),1(R15)         YES, SUPPRESS IT
         BCT   R2,N5COMMLP
N5COMMAX LA    R0,2(,R2)               GET OUTPUT LENGTH
         L     R2,DBL                  RESTORE WORK REGISTER
         AR    R15,R0                  POINT PAST OUTPUT
         BR    R14                     RETURN TO CALLER


*  EODAD ROUTINE FOR THE ASMPRTIN DD
PRT_EOF  DC    0H
         OI    FLAGS1,$EOF             FLAG END-OF-FILE REACHED
         BR    R14                     RETURN TO AFTER 'GET' MACRO


*  COMMENTS EXTRACTION ROUTINE

*  R13 -> REGISTER SAVE AREA
*  R14 -> RETURN POINT
*  DBL -- USED AS A WORK AREA
*
*  ITEM_NUM AND ITEM_CHR ARE UPDATED ONLY BY THIS ROUTINE
*
GET_CMTS DC    0H
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LA    R14,72(,R13)            POINT TO NEXT SAVE AREA
         ST    R13,4(,R14)             CHAIN THEM
         ST    R14,8(,R13)
         LR    R13,R14                 ACTIVATE NEW SAVE AREA

         MVC   CARD,BLANK              BLANK OUTPUT BUFFER
         MVC   CARD+9(12),=CL12'DC    AL2(0)'
         MVC   CARD+39(11),=CL11'NO COMMENTS'

         TM    FLAGS1,$EOF+$NOGET      END-OF-FILE REACHED?
         BNZ   DONE_CMT                YES, SKIP COMMENTS
         CLI   PRT_LINE+41,C' '        NAMED ITEM?
         BE    DONE_CMT                NO, SKIP COMMENTS
         CLI   PRT_LINE+39,C'0'        IS LINE AN ASSEMBLER STATEMENT?
         BL    DONE_CMT                NO, SKIP COMMENTS

         NI    FLAGS1,255-$QOT         NOT WITHIN QUOTED TEXT
         AP    ITEM_NUM,=PL1'1'        INCREMENT ITEM NUMBER
         UNPK  ITEM_CHR,ITEM_NUM
         OI    ITEM_CHR+7,X'F0'        ENSURE NUMERIC EBCDIC
         MVI   CARD+19,C'E'            NAME END LABEL
         MVC   CARD+20(6),ITEM_CHR+2
         MVI   CARD+26,C'-'
         MVI   CARD+27,C'S'            NAME START LABEL
         MVC   CARD+28(6),ITEM_CHR+2
         MVI   CARD+34,C')'
         MVC   CARD+39(18),=CL18'LENGTH OF COMMENTS'
         TM    FLAGS1,$ZERO            INHIBITING PUNCHOUT OUTPUT?
         BO    SKIPOUT2                YES
         PUT   OUTDCBW,CARD
SKIPOUT2 DC    0H

         MVC   CARD,BLANK              BLANK OUTPUT BUFFER
         MVI   CARD,C'S'               CONSTRUCT COMMENT START LABEL
         MVC   CARD+1(6),ITEM_CHR+2
         MVC   CARD+9(3),=CL3'EQU'
         MVI   CARD+15,C'*'
         TM    FLAGS1,$ZERO            INHIBITING PUNCHOUT OUTPUT?
         BO    SKIPOUT3                YES
         PUT   OUTDCBW,CARD            WRITE COMMENT START LABEL
SKIPOUT3 DC    0H

         NI    FLAGS1,255-$TOKCMT      RESET A FLAG
         CLC   =C'TOK',PRT_LINE+41     SYMBOL FROM ICHRUTKN?
         BNE   *+8                     NO
         OI    FLAGS1,$TOKCMT          YES

         LA    R4,PRT_LINE+41+71       POINT PAST POSSIBLE COMMENT
         LA    R5,PRT_LINE+41          POINT TO ITEM LABEL
         LR    R15,R5                  COPY THIS ADDRESS
CMT_LP_1 DC    0H
         CLI   0(R5),C' '              PAST ITEM LABEL?
         BE    CMT_LP_2                YES
         LA    R5,1(,R5)               NO, POINT TO NEXT CHARACTER
         CR    R5,R4                   REACHED END OF LINE?
         BL    CMT_LP_1                NO, LOOK AT CHARACTER
         B     CMT_ITEM                YES, SKIP ITEM COMMENTS
CMT_LP_2 DC    0H
         CLI   0(R5),C' '              FOUND STATEMENT VERB?
         BNE   CMT_LP_3                YES
         LA    R5,1(,R5)               NO, POINT TO NEXT CHARACTER
         CR    R5,R4                   REACHED END OF LINE?
         BL    CMT_LP_2                NO, LOOK AT CHARACTER
         B     CMT_ITEM                YES, SKIP ITEM COMMENTS
CMT_LP_3 DC    0H
         CLI   0(R5),C' '              PAST STATEMENT VERB?
         BE    CMT_LP_4                YES
         LA    R5,1(,R5)               NO, POINT TO NEXT CHARACTER
         CR    R5,R4                   REACHED END OF LINE?
         BL    CMT_LP_3                NO, LOOK AT CHARACTER
         B     CMT_ITEM                YES, SKIP ITEM COMMENTS
CMT_LP_4 DC    0H
         CLI   0(R5),C' '              FOUND STATEMENT OPERAND?
         BNE   CMT_LP_5                YES
         LA    R5,1(,R5)               NO, POINT TO NEXT CHARACTER
         CR    R5,R4                   REACHED END OF LINE?
         BL    CMT_LP_4                NO, LOOK AT CHARACTER
         B     CMT_ITEM                YES, SKIP ITEM COMMENTS
CMT_LP_5 DC    0H
         TM    FLAGS1,$QOT             WITHIN QUOTED TEXT?
         BO    QOT_LP_5                YES
         CLI   0(R5),C' '              PAST STATEMENT OPERAND(S)?
         BE    CMT_LP_6                YES
QOT_LP_5 DC    0H
         CLI   0(R5),C''''             IS THIS A QUOTE?
         BNE   NXT_LP_5                NO
         XI    FLAGS1,$QOT             YES, TOGGLE STATUS
NXT_LP_5 DC    0H
         LA    R5,1(,R5)               NO, POINT TO NEXT CHARACTER
         CR    R5,R4                   REACHED END OF LINE?
         BL    CMT_LP_5                NO, LOOK AT CHARACTER
         B     CMT_ITEM                YES, SKIP ITEM COMMENTS
CMT_LP_6 DC    0H
         CLI   0(R5),C' '              FOUND A COMMENT OPERAND?
         BNE   HAVE_CMT                YES
         LA    R5,1(,R5)               NO, POINT TO NEXT CHARACTER
         CR    R5,R4                   REACHED END OF LINE?
         BL    CMT_LP_6                NO, LOOK AT CHARACTER
         B     CMT_ITEM                YES, SKIP ITEM COMMENTS
HAVE_CMT DC    0H
         CLC   =C'***',0(R5)           COMMENT BLOCK START?
         BE    CMT_ITEM                YES, END OF ITEM COMMENTS
         CLI   0(R5),C'@'              MERELY A CHANGE TAG?
         BE    CMT_ITEM                YES, SKIP ITEM COMMENTS
         CLI   1(R5),C'@'              MERELY A CHANGE TAG?
         BE    CMT_ITEM                YES, SKIP ITEM COMMENTS
         CLI   2(R5),C'@'              MERELY A CHANGE TAG?
         BE    CMT_ITEM                YES, SKIP ITEM COMMENTS
         CLC   =CL2'Y0',0(R5)          MERELY A CHANGE TAG?
         BE    CMT_ITEM                YES, SKIP ITEM COMMENTS
         CLC   =C'(MDC',0(R5)          MERELY A CHANGE TAG?
         BE    CMT_ITEM                YES, SKIP ITEM COMMENTS
         CLC   =C'(ICB',0(R5)          MERELY A CHANGE TAG?
         BE    CMT_ITEM                YES, SKIP ITEM COMMENTS
         TR    PRT_LINE,DCTR_TAB       REMOVE AMPERSANDS AND QUOTES
         SR    R5,R15                  GET COMMENT START OFFSET
         CVD   R5,DBL                  GET IT IN DECIMAL
         AR    R5,R15                  RESTORE POINTER
         CP    DBL,=P'63'              IS OFFSET MORE THAN 63?
         BNH   CMTOFFOK                NO
         ZAP   DBL,=P'63'              YES, REDUCE IT TO 63
CMTOFFOK OI    DBL+7,X'0F'             PREPARE FOR UNPACK
         LR    R6,R4                   POINT TO CONTINUATION COLUMN
CMTENDLP BCTR  R6,0                    BACK UP ONE PRINT COLUMN
         CLI   0(R6),C' '              TRAILING BLANK?
         BE    CMTENDLP                YES, TRY THAT AGAIN
         LA    R6,1(,R6)               POINT PAST END OF COMMENT TEXT
         LR    R15,R6                  COPY THIS ADDRESS
CMTTAGLP BCTR  R15,0                   BACK UP ONE PRINT COLUMN
         CR    R15,R5                  BACK TO THE COMMENT START?
         BNH   CMTTAGOK                YES, END OF THIS SCAN
         CLI   0(R15),C'@'             FOUND A CHANGE TAG?
         BE    CMTATJST                YES
         CLI   1(R15),C'@'             FOUND A MULTI-CHANGE TAG?
         BE    CMTADJST                YES
         CLC   =CL2'Y0',0(R15)         FOUND A CHANGE TAG?
         BE    CMTADJST                YES
         CLC   =C'(MDC',0(R15)         FOUND A CHANGE TAG?
         BE    CMTADJST                YES
         CLC   =C'(ICB',0(R15)         FOUND A CHANGE TAG?
         BE    CMTADJST                YES
         CLC   =C'MDC',0(R15)          FOUND A CHANGE TAG?
         BE    CMTADJST                YES
         CLC   =C'ICB',0(R15)          FOUND A CHANGE TAG?
         BE    CMTADJST                YES
         CLC   =C' A4',0(R15)          FOUND A CHANGE TAG?
         BE    CMTADJST                YES
         B     CMTTAGLP                NO, KEEP LOOKING
CMTATJST CLI   3(R15),C'D'             IS THIS A LINE DELETION?
         BE    CMT_ITEM                YES
CMTADJST LR    R6,R15                  MOVE COMMENT END TO BEFORE TAG
*  PROBABLY SIMPLER TO TOLERATE TRAILING BLANKS HERE, BUT IT'S KNOWN
*  THAT: R15 > R5 AND R5->NON-BLANK => CMTENDLP CAN'T BE INFINITE LOOP
         B     CMTENDLP                REPROCESS FOR TRAILING BLANKS
CMTTAGOK SR    R6,R5                   GET THE LENGTH OF THE COMMENT
         BNP   CMT_NEXT                SHOULD NOT HAPPEN

*  NOW HAVE  R5 -> COMMENT TEXT START  AND  R6 = COMMENT BYTE COUNT
*  WITH NO COMMENT CHARACTER CODE POINT LESS THAN 64 (A BLANK).
*  THIS MEANS OUTPUT DATA POST-PROCESSORS CAN LOOK FOR CODE POINTS
*  LESS THAN 64 TO KNOW THE CARD IMAGE STARTING OFFSET OF THE
*  COMMENT LINE, ALLOWING THE ORIGINAL RELATIVE ARRANGEMENT OF
*  MULTI-LINE COMMENTS TO BE PRESERVED.  THESE UNDER-64 CODE POINTS
*  ALSO SERVE AS START-OF-LINE MARKERS.  THE TOTAL COMMENT BYTE
*  COUNT INCLUDING START-OF-LINE MARKERS IS CALCULATED BY THE
*  E######-S###### GENERATED EQUATE.

         MVC   CARD,BLANK              BLANK OUTPUT BUFFER
         MVC   CARD+9(2),=CL2'DC'      STATEMENT TYPE
         MVC   CARD+15(4),=CL4'AL1('   FIRST DATA ITEM TYPE
         UNPK  CARD+19(2),DBL          RECORD COMMENT START OFFSET
         MVC   CARD+21(4),=CL4'),C'''  SECOND DATA ITEM TYPE
         LA    R7,45                   GET LENGTH LIMIT FOR THIS LINE
         CR    R7,R6                   IS IT MORE THAN THERE IS?
         BNH   CMTLENOK                NO
         LR    R7,R6                   YES, REDUCE SIZE TO TOTAL
CMTLENOK SR    R6,R7                   REDUCE REMAINING LENGTH
         BCTR  R7,0                    DECREMENT FOR EXECUTE
         EX    R7,CMTLOAD1             LOAD START OR ALL OF COMMENT
         LA    R14,CARD+25+1(R7)       POINT PAST LOADED COMMENT
         MVI   0(R14),C''''            SUPPLY CLOSING QUOTE
         TM    FLAGS1,$ZERO            INHIBITING PUNCHOUT OUTPUT?
         BO    SKIPOUT4                YES
         PUT   OUTDCBW,CARD            WRITE COMMENT TEXT
SKIPOUT4 DC    0H
         LTR   R6,R6                   ANY UNLOADED COMMENT TEXT?
         BNP   CMT_NEXT                NO, COMMENT LOADED
         LA    R5,1(R7,R5)             POINT TO UNLOADED COMMENT PART
         MVC   CARD,BLANK              BLANK OUTPUT BUFFER
         MVC   CARD+9(2),=CL2'DC'      STATEMENT TYPE
         MVC   CARD+15(2),=CL2'C'''    DATA ITEM TYPE
         BCTR  R6,0                    DECREMENT FOR EXECUTE
         EX    R6,CMTLOAD2             LOAD REST OF COMMENT
         LA    R14,CARD+17+1(R6)       POINT PAST LOADED COMMENT
         MVI   0(R14),C''''            SUPPLY CLOSING QUOTE
         TM    FLAGS1,$ZERO            INHIBITING PUNCHOUT OUTPUT?
         BO    SKIPOUT5                YES
         PUT   OUTDCBW,CARD            WRITE COMMENT TEXT
SKIPOUT5 DC    0H

CMT_NEXT DC    0H                      COMMENT LINE COMPLETE
         SR    R4,R4                   CLEAR FOR INSERT
         IC    R4,PRT_LINE+112         LOAD CONTINUATION COLUMN DATA
         LA    R5,C' '                 GET NO-CONTINUATION VALUE
CMT_GET1 DC    0H                      ACQUIRE LISTING SOURCE LINE
         GET   INDCBW,PRT_LINE         GET ASSEMBLER PRINT LINE
         TM    FLAGS1,$EOF             END-OF-FILE REACHED?
         BO    CMT_ITEM                YES
         CLI   PRT_LINE,C'1'           PAGE HEADING LINE?
         BE    CMT_GET1                YES, GET NEXT LISTING LINE
         CLI   PRT_LINE+40,C'+'        MACRO OUTPUT LINE?
         BE    CMTMACRO                YES
         CLI   PRT_LINE+40,C'='        COPY OUTPUT LINE?
         BE    CMTMACRO                YES
         CLI   PRT_LINE+39,C'0'        IS LINE AN ASSEMBLER STATEMENT?
         BL    CMT_GET1                NO, GET NEXT LISTING LINE
         B     CMT_ITEM                YES, END OF COMMENTS FOR ITEM
CMTMACRO DC    0H
         CR    R4,R5                   CONTINUING THE COMMENT?
         BH    CMT_CONT                YES
         CLI   PRT_LINE+39,C'0'        IS LINE AN ASSEMBLER STATEMENT?
         BL    CMT_NEXT                NO, GET NEXT LISTING LINE
         CLI   PRT_LINE+41,C'*'        IS LINE A SOURCE COMMENT?
         BNE   CMT_BITS                NO, END OF COMMENTS FOR ITEM
         CLI   PRT_LINE+42,C'*'        START OF A COMMENT BLOCK?
         BE    CMT_ITEM                YES, END OF COMMENTS FOR ITEM
         TM    FLAGS1,$TOKCMT          SYMBOL FROM ICHRUTKN?
         BNO   CMT_CONT                NO
         CLI   PRT_LINE+42,C' '        START OF A BLANK COMMENT?
         BNE   CMT_CONT                NO
         CLC   PRT_LINE+43(65),PRT_LINE+42      A BLANK COMMENT?
         BNE   CMT_CONT                NO
         NI    FLAGS1,255-$TOKCMT      YES, RESET FLAG
         B     CMT_GET1                FLUSH LINE WITHOUT STATUS CHANGE
CMT_CONT DC    0H                      CONTINUE COMMENT EXTRACTION
         LA    R4,PRT_LINE+41+71       POINT PAST POSSIBLE COMMENT
         LA    R5,PRT_LINE+41+1        POINT TO POSSIBLE COMMENT
         LA    R15,PRT_LINE+41         POINT TO LINE ECHO START
         MVC   CARD,BLANK              BLANK OUTPUT BUFFER
         B     CMT_LP_6                GO EXTRACT COMMENT

CMT_BITS DC    0H                      CHECK FOR VALUE EQUATES
         LA    R4,PRT_LINE+41+71       POINT PAST POSSIBLE COMMENT
         LA    R5,PRT_LINE+41          POINT TO LABEL START COLUMN
EQU_LP_1 DC    0H
         CLI   0(R5),C' '              PAST POTENTIAL LABEL?
         BE    EQU_LP_2                YES
         LA    R5,1(,R5)               NO, POINT TO NEXT CHARACTER
         CR    R5,R4                   REACHED END OF LINE?
         BL    EQU_LP_1                NO, LOOK AT CHARACTER
         B     CMT_ITEM                YES, NOT AN EQUATE
EQU_LP_2 DC    0H
         CLI   0(R5),C' '              FOUND STATEMENT VERB?
         BNE   EQU_TEST                YES
         LA    R5,1(,R5)               NO, POINT TO NEXT CHARACTER
         CR    R5,R4                   REACHED END OF LINE?
         BL    EQU_LP_2                NO, LOOK AT CHARACTER
         B     CMT_ITEM                YES, NOT AN EQUATE
EQU_TEST DC    0H
         CLC   =CL4'EQU ',0(R5)        EQUATE STATEMENT?
         BNE   CMT_ITEM                NO, NOT AN EQUATE
         LA    R5,4(,R5)               POINT PAST STATEMENT VERB
EQU_LP_3 DC    0H
         CLI   0(R5),C' '              FOUND STATEMENT OPERAND?
         BNE   STAR_CHK                YES
         LA    R5,1(,R5)               NO, POINT TO NEXT CHARACTER
         CR    R5,R4                   REACHED END OF LINE?
         BL    EQU_LP_3                NO, LOOK AT CHARACTER
         B     CMT_ITEM                YES, NOT A USEFUL EQUATE
STAR_CHK DC    0H
         CLI   0(R5),C'*'              LOCATION-BASED EQUATE?
         BE    CMT_ITEM                YES, NOT A USEFUL EQUATE
         LA    R15,PRT_LINE+41         POINT TO LINE ECHO START
         LR    R5,R15                  COLLECT VALUE LABELS
         MVC   CARD,BLANK              BLANK OUTPUT BUFFER
         B     CMT_LP_6                GO EXTRACT EQUATE AS COMMENT

CMTLOAD1 MVC   CARD+25(0),0(R5)        <<< EXECUTED >>>
CMTLOAD2 MVC   CARD+17(0),0(R5)        <<< EXECUTED >>>

CMT_ITEM DC    0H                      COMMENTS FOR ITEM COMPLETE
         MVC   CARD,BLANK              BLANK OUTPUT BUFFER
         MVI   CARD,C'E'               CONSTRUCT COMMENT END LABEL
         MVC   CARD+1(6),ITEM_CHR+2
         MVC   CARD+9(3),=CL3'EQU'
         MVI   CARD+15,C'*'

DONE_CMT DC    0H
         TM    FLAGS1,$ZERO            INHIBITING PUNCHOUT OUTPUT?
         BO    SKIPOUT6                YES
         PUT   OUTDCBW,CARD
SKIPOUT6 DC    0H

GOT_CMTS DC    0H
         L     R13,4(,R13)             POINT TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         OI    8+3(R13),X'01'          INVALIDATE FORWARD POINTER
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN TO CALLER


         DROP

         TITLE ' CONSTANTS AND LITERALS '
         DC    0F
TWOSYM   EQU   *,4
         DC    X'02',C'SYM'

         PRINT NOGEN

INDCB1   DCB   DSORG=PS,MACRF=GL,DDNAME=OBJECTIN,EODAD=SYM_EOF
INDCB1L  EQU   *-INDCB1

INDCB2   DCB   DSORG=PS,MACRF=GM,DDNAME=ASMPRTIN,EODAD=PRT_EOF

OUTDCB   DCB   DSORG=PS,MACRF=PM,DDNAME=PUNCHOUT,RECFM=FB,LRECL=80
OUTDCBL  EQU   *-OUTDCB

         PRINT GEN

ED7      DC    XL8'4020202020202120'
HEX      DC    CL16'0123456789ABCDEF'

*              X'00' = C - CHARACTER
*              X'04' = X - HEXADECIMAL OR PURE DBCS (G-TYPE)
*              X'08' = B - BINARY
*              X'10' = F - FIXED POINT, FULL
*              X'14' = H - FIXED POINT, HALF
*              X'18' = E - FLOATING POINT, SHORT
*              X'1C' = D - FLOATING POINT, LONG
*              X'20' = A - A-TYPE OR Q-TYPE DATA
*              X'24' = Y - Y-TYPE DATA
*              X'28' = S - S-TYPE DATA
*              X'2C' = V - V-TYPE DATA
*              X'30' = P - PACKED DECIMAL
*              X'34' = Z - ZONED DECIMAL
*              X'38' = L - FLOATING POINT, EXTENDED
DC_TYPES DC    C'CXB?FHEDAYSVPZL'


DSECTTBL DC    0F

         DC    CL10'TTIRLEN 31'
         DC    CL10'TIVRLEN 34'
         DC    CL10'TLGRLEN 35'
         DC    CL10'TDDRLEN 40'

$DSECTB# EQU   (*-DSECTTBL)/10


SMF_RTD  DC    C'RECTYPE OFFSET=5,MASK=1,BASE=0,SHIFT=2,LIMIT=0'
SUB_RTD  DC    C'RECTYPE OFFSET=22,MASK=3,BASE=1,SHIFT=2,LIMIT='
DSN_CMT  DC    C'DATA SET NAME (DSNAME=)'''
MEM_CMT  DC    C'MEMBER NAME OR RELATIVE GENERATION NUMBER'''
SUB_X14  DC    C'X14TYPE  RECTYPE OFFSET=3,MASK=1,BASE=1,SHIFT=2,LIMIT=+
               9,FLAG=1'
SUB_T89  DC    C'SUB_T89'


*   VANISH TABLE - MAKE A RECORD ITEM DISAPPEAR
VANISHTB EQU   *
$VANISHL EQU   9

         DC    CL9'SMF8IODV'           0C ITEM IN COMMENT BLOCK
         DC    CL9'SMFJFCB1'           JFCB AS A SINGLE DATA ITEM
         DC    CL9'JFCBUFRQ'           REPLACE WITH JFCBUFNO
         DC    CL9'JFCRUNIT'           REPLACE WITH JFCBPQTY
         DC    CL9'JFCDSRG1'           PART OF JFCDSORG
         DC    CL9'JFCDSRG2'           PART OF JFCDSORG
         DC    CL9'JFCBAXBF'           REPLACE WITH JFCBLKSI
         DC    CL9'JFCMSVGP'           PART OF JFCBVOLS
         DC    CL9'JFCRQID '           PART OF JFCBSQTY
         DC    CL9'SMF30STI'           SHOW SMF30STI_BYTE1 & 2
         DC    CL9'SMF30RV3'           SHOW SMF30TFL_BYTE1 & 2
         DC    CL9'SMF30TFL'           SHOW SMF30TFL_BYTE1 & 2
         DC    CL9'SMF30PIA'           UNWANTED ALIAS OF SMF30PGI
         DC    CL9'SMF30POA'           UNWANTED ALIAS OF SMF30PGO
         DC    CL9'TIVTAT  '           UNWANTED ALIAS OF TIVACT
         DC    CL9'S42VSXAA'           42.5 RESPONSE ARRAY
         DC    CL9'SMF70HDC'           TYPE 70 HEADER SECTION
         DC    CL9'SMF71HDC'           TYPE 71 HEADER SECTION
         DC    CL9'SMF72HDC'           TYPE 72 HEADER SECTION
         DC    CL9'SMF73HDC'           TYPE 73 HEADER SECTION
         DC    CL9'SMF73CCM'           TYPE 73 SMF73CHA'S DATA
         DC    CL9'SMF73EDT'           TYPE 73 SMF73ECD'S DATA
         DC    CL9'SMF74HDC'           TYPE 74 HEADER SECTION
         DC    CL9'R745DCNT'           TYPE 74 R745DEV'S COUNTS
         DC    CL9'SMF75HDC'           TYPE 75 HEADER SECTION
         DC    CL9'SMF76HDC'           TYPE 76 HEADER SECTION
         DC    CL9'SMF77HDC'           TYPE 77 HEADER SECTION
         DC    CL9'SMF78HDC'           TYPE 78 HEADER SECTION

$VANISH# EQU   (*-VANISHTB)/$VANISHL


*   UNZERO TABLE - CONVERT ZERO MULTIPLICITY TO ONE
UNZEROTB DC    0F      AND OPTIONALLY VANISH NEXT UNNAMED ITEM
*                      AND OPTIONALLY ASSIGN A LENGTH < 256
$UNZEROL EQU   12
         DC    CL10'SMF4ACTF',X'00',AL1(144)   STEP ACCOUNT
         DC    CL10'SMF5JSAF',X'00',AL1(144)   JOB ACCOUNT
         DC    CL10'JFCBUFNO',X'00',AL1(0)
         DC    CL10'JFCDSORG',X'00',AL1(0)
         DC    CL10'JFCBLKSI',X'00',AL1(0)
         DC    CL10'JFCBVOLS',X'80',AL1(0)
         DC    CL10'JFCBPQTY',X'00',AL1(0)
         DC    CL10'JFCBSQTY',X'80',AL1(0)
         DC    CL10'SMF20ACT',X'00',AL1(144)   JOB ACCOUNT
         DC    CL10'SMF30ACT',X'00',AL1(144)   JOB/STEP ACCOUNT
         DC    CL10'TIVACFLD',X'00',AL1(144)   TSO ACCOUNT
         DC    CL10'TLGACFLD',X'00',AL1(144)   TSO ACCOUNT

$UNZERO# EQU   (*-UNZEROTB)/$UNZEROL


         DC    0D
         LTORG

         DC    0D

NONHEXTB DC    256X'FF'                TEST FOR VALID HEX CHARACTERS
         ORG   NONHEXTB+C'A'
         DC    XL6'00'
         ORG   NONHEXTB+C'0'
         DC    XL10'00'
         DC    XL6'00'                 HANDLE REPEATED TRANSLATION
         ORG

HEXCHRTB DC    256X'00'                HEX CHARACTERS -> NUMERICS
         ORG   HEXCHRTB+C'A'
         DC    X'FAFBFCFDFEFF'
         ORG   HEXCHRTB+C'0'
         DC    C'0123456789'
         DC    X'FAFBFCFDFEFF'         HANDLE REPEATED TRANSLATION
         ORG

DCTR_TAB DC    256AL1(*-DCTR_TAB)      DC CHARACTER DATA VALID CHARS
         ORG   DCTR_TAB+C'&&'
         DC    C'+'
         ORG   DCTR_TAB+C''''
         DC    C'`'
         ORG


SKPST_TB EQU   *                       SUBTYPES TO BE SKIPPED

         DC    CL10'SMF42HDR7 '          42.7
         DC    CL10'SMF42HDR8 '          42.8
         DC    CL10'SMF42HDR12'          42.12
         DC    CL10'SMF42HDR13'          42.13
         DC    CL10'SMF42HDR14'          42.14
         DC    CL10'SMF42HDR26'          42.26
         DC    CL10'SMF79HDR8 '          79.8
         DC    CL10'SMF79HDR10'          79.10
         DC    CL10'SMF79HDR13'          79.13

$SKPST#  EQU   (*-SKPST_TB)/10


INSERTBL DC    0F
$INSRT_L EQU   24                      ENTRY LENGTH

*                   TRIGGER          INSERT         OFST LNTH
         DC    CL10'SMF20NAF  ',CL10'SMF20ACT    ',Y(000,144)
         DC    CL10'TIVNBRAC  ',CL10'TIVACFLD    ',Y(000,144)
         DC    CL10'TLGNBRAC  ',CL10'TLGACFLD    ',Y(000,144)
         DC    CL10'R723TRDB  ',CL10'R723TR02    ',Y(004,004)
         DC    CL10'R723TR02  ',CL10'R723TR03    ',Y(008,004)
         DC    CL10'R723TR03  ',CL10'R723TR04    ',Y(012,004)
         DC    CL10'R723TR04  ',CL10'R723TR05    ',Y(016,004)
         DC    CL10'R723TR05  ',CL10'R723TR06    ',Y(020,004)
         DC    CL10'R723TR06  ',CL10'R723TR07    ',Y(024,004)
         DC    CL10'R723TR07  ',CL10'R723TR08    ',Y(028,004)
         DC    CL10'R723TR08  ',CL10'R723TR09    ',Y(032,004)
         DC    CL10'R723TR09  ',CL10'R723TR10    ',Y(036,004)
         DC    CL10'R723TR10  ',CL10'R723TR11    ',Y(040,004)
         DC    CL10'R723TR11  ',CL10'R723TR12    ',Y(044,004)
         DC    CL10'R723TR12  ',CL10'R723TR13    ',Y(048,004)
         DC    CL10'R723TR13  ',CL10'R723TR14    ',Y(052,004)

$INSRT_# EQU   (*-INSERTBL)/$INSRT_L


D_RENAME DC    0F
$D_RENLN EQU   26                      ENTRY LENGTH

         DC    CL10'TOKEN     ',CL12'TKN_4220    ',CL2'  ',Y(0)
         DC    CL10'TOKEN     ',CL12'TKN_4221    ',CL2'  ',Y(0)
         DC    CL10'TOKEN     ',CL12'TKN_4224    ',CL2'  ',Y(0)
         DC    CL10'TOKEN     ',CL12'TKN_4225    ',CL2'  ',Y(0)

         DC    CL10'SMFJFCB   ',CL12'SMFJFCB1    ',CL2'  ',Y(0)
         DC    CL10'SMF41RCD  ',CL12'SMFRCD41    ',CL2'  ',Y(0)
         DC    CL10'S42SNIO   ',CL12'S42SNIO5    ',CL2'  ',Y(0)
         DC    CL10'S42SNIO   ',CL12'S42SNIO6    ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR1   ',CL2'42',Y(27)
         DC    CL10'SMF42     ',CL12'SMF42HDR2   ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR3   ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR4   ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR5   ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR6   ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR9   ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR10  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR11  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR15  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR16  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR17  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR18  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR19  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR20  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR21  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR22  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR23  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR24  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR25  ',CL2'  ',Y(0)
         DC    CL10'SMF42     ',CL12'SMF42HDR27  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD1   ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD2   ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD3   ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD4   ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD5   ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD6   ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD9   ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD10  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD11  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD15  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD16  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD17  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD18  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD19  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD20  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD21  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD22  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD23  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD24  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD25  ',CL2'  ',Y(0)
         DC    CL10'SMF42PRD  ',CL12'SMF42PRD27  ',CL2'  ',Y(0)
         DC    CL10'SMF70HDR  ',CL12'SMF70HDR1   ',CL2'70',Y(2)
         DC    CL10'SMF70HDR  ',CL12'SMF70HDR2   ',CL2'  ',Y(0)
         DC    CL10'SMF70PRO  ',CL12'SMF70PRO1   ',CL2'  ',Y(0)
         DC    CL10'SMF70PRO  ',CL12'SMF70PRO2   ',CL2'  ',Y(0)
         DC    CL10'SMF70RHD  ',CL12'SMF70RHD1   ',CL2'  ',Y(0)
         DC    CL10'SMF70RHD  ',CL12'SMF70RHD2   ',CL2'  ',Y(0)
         DC    CL10'SMF70RBL  ',CL12'SMF70RBL1   ',CL2'  ',Y(0)
         DC    CL10'SMF70RBL  ',CL12'SMF70RBL2   ',CL2'  ',Y(0)
         DC    CL10'SMF71HDR  ',CL12'SMF71HDR1   ',CL2'71',Y(1)
         DC    CL10'SMF72HDR  ',CL12'SMF72HDR1   ',CL2'72',Y(5)
         DC    CL10'SMF72HDR  ',CL12'SMF72HDR2   ',CL2'  ',Y(0)
         DC    CL10'SMF72HDR  ',CL12'SMF72HDR3   ',CL2'  ',Y(0)
         DC    CL10'SMF72HDR  ',CL12'SMF72HDR4   ',CL2'  ',Y(0)
         DC    CL10'SMF72HDR  ',CL12'SMF72HDR5   ',CL2'  ',Y(0)
         DC    CL10'SMF72PRO  ',CL12'SMF72PRO1   ',CL2'  ',Y(0)
         DC    CL10'SMF72PRO  ',CL12'SMF72PRO2   ',CL2'  ',Y(0)
         DC    CL10'SMF72PRO  ',CL12'SMF72PRO3   ',CL2'  ',Y(0)
         DC    CL10'SMF72PRO  ',CL12'SMF72PRO4   ',CL2'  ',Y(0)
         DC    CL10'SMF72PRO  ',CL12'SMF72PRO5   ',CL2'  ',Y(0)
         DC    CL10'SMF72RHD  ',CL12'SMF72RHD1   ',CL2'  ',Y(0)
         DC    CL10'SMF72RHD  ',CL12'SMF72RHD2   ',CL2'  ',Y(0)
         DC    CL10'SMF72RHD  ',CL12'SMF72RHD3   ',CL2'  ',Y(0)
         DC    CL10'SMF72RHD  ',CL12'SMF72RHD4   ',CL2'  ',Y(0)
         DC    CL10'SMF72RHD  ',CL12'SMF72RHD5   ',CL2'  ',Y(0)
         DC    CL10'SMF72RBL  ',CL12'SMF72RBL1   ',CL2'  ',Y(0)
         DC    CL10'SMF72RBL  ',CL12'SMF72RBL2   ',CL2'  ',Y(0)
         DC    CL10'SMF72RBL  ',CL12'SMF72RBL3   ',CL2'  ',Y(0)
         DC    CL10'SMF72RBL  ',CL12'SMF72RBL4   ',CL2'  ',Y(0)
         DC    CL10'SMF72RBL  ',CL12'SMF72RBL5   ',CL2'  ',Y(0)
         DC    CL10'SMF73HDR  ',CL12'SMF73HDR1   ',CL2'73',Y(1)
         DC    CL10'SMF74HDR  ',CL12'SMF74HDR1   ',CL2'74',Y(10)
         DC    CL10'SMF74HDR  ',CL12'SMF74HDR2   ',CL2'  ',Y(0)
         DC    CL10'SMF74HDR  ',CL12'SMF74HDR3   ',CL2'  ',Y(0)
         DC    CL10'SMF74HDR  ',CL12'SMF74HDR4   ',CL2'  ',Y(0)
         DC    CL10'SMF74HDR  ',CL12'SMF74HDR5   ',CL2'  ',Y(0)
         DC    CL10'SMF74HDR  ',CL12'SMF74HDR6   ',CL2'  ',Y(0)
         DC    CL10'SMF74HDR  ',CL12'SMF74HDR7   ',CL2'  ',Y(0)
         DC    CL10'SMF74HDR  ',CL12'SMF74HDR8   ',CL2'  ',Y(0)
         DC    CL10'SMF74HDR  ',CL12'SMF74HDR9   ',CL2'  ',Y(0)
         DC    CL10'SMF74HDR  ',CL12'SMF74HDR10  ',CL2'  ',Y(0)
         DC    CL10'SMF74PRO  ',CL12'SMF74PRO1   ',CL2'  ',Y(0)
         DC    CL10'SMF74PRO  ',CL12'SMF74PRO2   ',CL2'  ',Y(0)
         DC    CL10'SMF74PRO  ',CL12'SMF74PRO3   ',CL2'  ',Y(0)
         DC    CL10'SMF74PRO  ',CL12'SMF74PRO4   ',CL2'  ',Y(0)
         DC    CL10'SMF74PRO  ',CL12'SMF74PRO5   ',CL2'  ',Y(0)
         DC    CL10'SMF74PRO  ',CL12'SMF74PRO6   ',CL2'  ',Y(0)
         DC    CL10'SMF74PRO  ',CL12'SMF74PRO7   ',CL2'  ',Y(0)
         DC    CL10'SMF74PRO  ',CL12'SMF74PRO8   ',CL2'  ',Y(0)
         DC    CL10'SMF74PRO  ',CL12'SMF74PRO9   ',CL2'  ',Y(0)
         DC    CL10'SMF74PRO  ',CL12'SMF74PRO10  ',CL2'  ',Y(0)
         DC    CL10'SMF74RHD  ',CL12'SMF74RHD1   ',CL2'  ',Y(0)
         DC    CL10'SMF74RHD  ',CL12'SMF74RHD2   ',CL2'  ',Y(0)
         DC    CL10'SMF74RHD  ',CL12'SMF74RHD3   ',CL2'  ',Y(0)
         DC    CL10'SMF74RHD  ',CL12'SMF74RHD4   ',CL2'  ',Y(0)
         DC    CL10'SMF74RHD  ',CL12'SMF74RHD5   ',CL2'  ',Y(0)
         DC    CL10'SMF74RHD  ',CL12'SMF74RHD6   ',CL2'  ',Y(0)
         DC    CL10'SMF74RHD  ',CL12'SMF74RHD7   ',CL2'  ',Y(0)
         DC    CL10'SMF74RHD  ',CL12'SMF74RHD8   ',CL2'  ',Y(0)
         DC    CL10'SMF74RHD  ',CL12'SMF74RHD9   ',CL2'  ',Y(0)
         DC    CL10'SMF74RHD  ',CL12'SMF74RHD10  ',CL2'  ',Y(0)
         DC    CL10'SMF74RBL  ',CL12'SMF74RBL1   ',CL2'  ',Y(0)
         DC    CL10'SMF74RBL  ',CL12'SMF74RBL2   ',CL2'  ',Y(0)
         DC    CL10'SMF74RBL  ',CL12'SMF74RBL3   ',CL2'  ',Y(0)
         DC    CL10'SMF74RBL  ',CL12'SMF74RBL4   ',CL2'  ',Y(0)
         DC    CL10'SMF74RBL  ',CL12'SMF74RBL5   ',CL2'  ',Y(0)
         DC    CL10'SMF74RBL  ',CL12'SMF74RBL6   ',CL2'  ',Y(0)
         DC    CL10'SMF74RBL  ',CL12'SMF74RBL7   ',CL2'  ',Y(0)
         DC    CL10'SMF74RBL  ',CL12'SMF74RBL8   ',CL2'  ',Y(0)
         DC    CL10'SMF74RBL  ',CL12'SMF74RBL9   ',CL2'  ',Y(0)
         DC    CL10'SMF74RBL  ',CL12'SMF74RBL10  ',CL2'  ',Y(0)
         DC    CL10'SMF75HDR  ',CL12'SMF75HDR1   ',CL2'75',Y(1)
         DC    CL10'SMF76HDR  ',CL12'SMF76HDR1   ',CL2'76',Y(1)
         DC    CL10'SMF77HDR  ',CL12'SMF77HDR1   ',CL2'77',Y(1)
         DC    CL10'SMF78HDR  ',CL12'SMF78HDR1   ',CL2'78',Y(3)
         DC    CL10'SMF78HDR  ',CL12'SMF78HDR2   ',CL2'  ',Y(0)
         DC    CL10'SMF78HDR  ',CL12'SMF78HDR3   ',CL2'  ',Y(0)
         DC    CL10'SMF78PRO  ',CL12'SMF78PRO1   ',CL2'  ',Y(0)
         DC    CL10'SMF78PRO  ',CL12'SMF78PRO2   ',CL2'  ',Y(0)
         DC    CL10'SMF78PRO  ',CL12'SMF78PRO3   ',CL2'  ',Y(0)
         DC    CL10'SMF78RHD  ',CL12'SMF78RHD1   ',CL2'  ',Y(0)
         DC    CL10'SMF78RHD  ',CL12'SMF78RHD2   ',CL2'  ',Y(0)
         DC    CL10'SMF78RHD  ',CL12'SMF78RHD3   ',CL2'  ',Y(0)
         DC    CL10'SMF78RBL  ',CL12'SMF78RBL1   ',CL2'  ',Y(0)
         DC    CL10'SMF78RBL  ',CL12'SMF78RBL2   ',CL2'  ',Y(0)
         DC    CL10'SMF78RBL  ',CL12'SMF78RBL3   ',CL2'  ',Y(0)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR1   ',CL2'79',Y(15)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR2   ',CL2'  ',Y(0)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR3   ',CL2'  ',Y(0)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR4   ',CL2'  ',Y(0)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR5   ',CL2'  ',Y(0)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR6   ',CL2'  ',Y(0)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR7   ',CL2'  ',Y(0)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR9   ',CL2'  ',Y(0)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR11  ',CL2'  ',Y(0)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR12  ',CL2'  ',Y(0)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR14  ',CL2'  ',Y(0)
         DC    CL10'SMF79HDR  ',CL12'SMF79HDR15  ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO1   ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO2   ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO3   ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO4   ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO5   ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO6   ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO7   ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO9   ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO11  ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO12  ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO14  ',CL2'  ',Y(0)
         DC    CL10'SMF79PRO  ',CL12'SMF79PRO15  ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD1   ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD2   ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD3   ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD4   ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD5   ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD6   ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD7   ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD9   ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD11  ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD12  ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD14  ',CL2'  ',Y(0)
         DC    CL10'SMF79RHD  ',CL12'SMF79RHD15  ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL1   ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL2   ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL3   ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL4   ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL5   ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL6   ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL7   ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL9   ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL11  ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL12  ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL14  ',CL2'  ',Y(0)
         DC    CL10'SMF79RBL  ',CL12'SMF79RBL15  ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL1     ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL2     ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL3     ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL4     ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL5     ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL6     ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL7     ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL9     ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL11    ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL12    ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL14    ',CL2'  ',Y(0)
         DC    CL10'R79CHL    ',CL12'R79CHL15    ',CL2'  ',Y(0)
         DC    CL10'CBRSMF85  ',CL12'SMFRCD85    ',CL2'  ',Y(0)
         DC    CL10'DFHSMFDS  ',CL12'SMFRCD110   ',CL2'  ',Y(0)

$D_RENCT EQU   (*-D_RENAME)/$D_RENLN


*   FORMAT TABLE - FORMAT FULLWORDS AS HFP IN RECOGNISED SECTIONS
HFP4SECT DC    0F
$H4SL    EQU   12                      SECTION NAME ENTRY LENGTH

         DC    CL12'SMF73ECD    '    73 - EXTENDED CHANNEL DATA SECTION
         DC    CL12'R745DEV     '  74.5 - CACHE DEVICE DATA SECTION

$H4S#    EQU   (*-HFP4SECT)/$H4SL


*   FORMAT TABLE - FORMAT FULLWORDS AS DECIMAL IN RECOGNISED SECTIONS
DEC4SECT DC    0F
$D4SL    EQU   12                      SECTION NAME ENTRY LENGTH

         DC    CL12'SMF4PAGE    '     4 - PAGING SECTION
         DC    CL12'SMF4PERF    '     4 - PERFORMANCE SECTION
         DC    CL12'SMF5PERF    '     5 - PERFORMANCE SECTION
         DC    CL12'SMF23SMF    '    23 - SMF STATISTICS SECTION
         DC    CL12'SMF30URA    '    30 - I/O ACTIVITY SECTION
         DC    CL12'SMF30SAP    '    30 - STORAGE AND PAGING SECTION
         DC    CL12'SMF30PRF    '    30 - PERFORMANCE SECTION
         DC    CL12'SMF30OPS    '    30 - OPERATOR SECTION
         DC    CL12'SMF30DR     '    30 - APPC/MVS RESOURCE SECTION
         DC    CL12'SMF30OP     '    30 - OPENMVS PROCESS SECTION
         DC    CL12'TIVPAGE     '    34 - PAGING SECTION
         DC    CL12'TIVPERF     '    34 - PERFORMANCE SECTION
         DC    CL12'TLGPERF     '    35 - PERFORMANCE SECTION
         DC    CL12'SMF41IOS    '  41.2 - OBJECT I/O ACTIVITY
         DC    CL12'SMF41VLF    '  41.3 - VLF STATISTICS
         DC    CL12'SMF4201A    '  42.1 - BMF TOTALS SECTION
         DC    CL12'SMF4201B    '  42.1 - STORAGE CLASS SUMMARY SECTION
         DC    CL12'SMF4202A    '  42.2 - CONTROL UNIT SUMMARY SECTION
         DC    CL12'SMF4205A    '  42.5 - STORAGE CLASS RESPONSE TIME
         DC    CL12'SMF4205C    '  42.5 - VTOC DATA COMPONENT SECTION
         DC    CL12'SMF4205D    '  42.5 - VTOC INDEX COMPONENT SECTION
         DC    CL12'SMF4205E    '  42.5 - VTOC VVDS COMPONENT SECTION
         DC    CL12'SMF4205F    '  42.5 - VOLUME METRICS SECTION
         DC    CL12'SMF4205I    '  42.5 - SYSTEM I/O STATISTICS SECTION
         DC    CL12'S42VSXAA    '  42.5 - VOLUME SYSTEM I/O HIGH RSPTM
         DC    CL12'SMF4205P    '  42.5 - VOLUME CLOUD ACTIVITY
         DC    CL12'S42SNIO5    '  42.5 - SYNCHRONOUS I/O STATISTICS
         DC    CL12'S42DSIO     '  42.6 - DATA SET I/O STATISTICS
         DC    CL12'S42DSAM     '  42.6 - ACCESS METHOD STATISTICS
         DC    CL12'S42SNIO6    '  42.6 - SYNCHRONOUS I/O STATISTICS
         DC    CL12'S42SNTW     '  42.6 - SYNCHRONOUS I/O STATISTICS 2
         DC    CL12'S42SNDW     '  42.6 - SYNCHRONOUS I/O STATISTICS 3
         DC    CL12'S42XRSSD    ' 42.11 - XRC SSID DATA
         DC    CL12'S42XRVLD    ' 42.11 - XRC VOLUME DATA
         DC    CL12'SMF420FA    ' 42.15 - STORAGE CLASS MGR SUMMARY
         DC    CL12'SMF420FB    ' 42.15 - SC/SYS/CF CLASS SUMMARY
         DC    CL12'SMF2A0FA    ' 42.15 - ABOVE BAR BUFFERS
         DC    CL12'SMF2A0FB    ' 42.15 - SC/SYS/CF CLASS SUMMARY
         DC    CL12'SMF420GA    ' 42.16 - CF DATASET RSPTM SUMMARY
         DC    CL12'SMF420GB    ' 42.16 - DATA SET/MVS SYSTEM SUMMARY
         DC    CL12'SMF2A0GA    ' 42.16 - ABOVE BAR CF DATASET RSPTM
         DC    CL12'SMF2A0GB    ' 42.16 - ABOVE BAR DATA SET/MVS SYSTEM
         DC    CL12'SMF420HA    ' 42.17 - CF LOCK STRUCTURE ACTIVITY
         DC    CL12'SMF420HB    ' 42.17 - LOCK STRUCTURE SUMMARY
         DC    CL12'SMF64STS    '    64 - DATA SET STATISTICS SECTION
         DC    CL12'SMF71PAG    '    71 - PAGING DATA SECTION
         DC    CL12'R722DATA    '  72.2 - DATA SECTION
         DC    CL12'R722SWRE    '  72.2 - SWAP REASON DATA SECTION
         DC    CL12'R724DATA    '  72.4 - DATA SECTION
         DC    CL12'R724SWRE    '  72.4 - SWAP REASON DATA SECTION
         DC    CL12'R723SCS     '    73 - SERVICE/REPORT CLASS PERIOD

$D4S#    EQU   (*-DEC4SECT)/$D4SL

         EJECT
*   FORMAT TABLE - ASSIGN KNOWN FORMATS TO RECOGNISED ITEMS
ITEMFMTS DC    0F
$FMTL    EQU   12          ENTRY LENGTH

         DC    CL11'SMF0VST ',AL1($KB)  VIRTUAL STORAGE
         DC    CL11'SMF0RST ',AL1($KB)  REAL STORAGE

         DC    CL11'SMF1SWT ',AL1($JIF) SYSTEM WAIT TIME
         DC    CL11'SMF1TEXP',AL1($BINTOD) COLLECTION END TIME
         DC    CL11'SMF1PGIN',AL1($DEC) TOTAL PAGE-INS
         DC    CL11'SMF1PGOT',AL1($DEC) TOTAL PAGE-OUTS
         DC    CL11'SMF1PGRL',AL1($DEC) TOTAL PAGES RECLAIMED
         DC    CL11'SMF1RGNS',AL1($DEC) TOTAL REGIONS SWAPPED
         DC    CL11'SMF1SPIN',AL1($DEC) SWAP PAGE-INS
         DC    CL11'SMF1SPOT',AL1($DEC) SWAP PAGE-OUTS
         DC    CL11'SMF1RGNM',AL1($DEC) REGIONS MIGRATED
         DC    CL11'SMF1PGM ',AL1($DEC) PAGES MIGRATED

         DC    CL11'SMF4SYST',AL1($KB)  PRIVATE HIGH STORAGE
         DC    CL11'SMF4H0ST',AL1($KB)  PRIVATE REGION STORAGE
         DC    CL11'SMF4RSH0',AL1($KB)  REGION SIZE REQUEST
         DC    CL11'SMF4SPK ',AL1($HEX)
         DC    CL11'SMF4AST ',AL1($BINTOD)
         DC    CL11'SMF4PPST',AL1($BINTOD)
         DC    CL11'SMF4SRBT',AL1($JIF) SRB TIME
         DC    CL11'SMF4DEVC',AL1($HEX)
         DC    CL11'SMF4UTYP',AL1($HEX)
         DC    CL11'SMF4CUAD',AL1($HEX)
         DC    CL11'SMF4EXCP',AL1($DEC) DD EXCP COUNT
         DC    CL11'SMF4SETM',AL1($JIF) TCB TIME
         DC    CL11'SMF4ACTF',AL1($CHR) STEP ACCOUNT
         DC    CL11'SMF4PGNO',AL1($DEC) PERFORMANCE GROUP
         DC    CL11'SMF4PSEC',AL1($DEC) PAGE-SECONDS

         DC    CL11'SMF5NST ',AL1($DEC) NUMBER OF STEPS
         DC    CL11'SMF5JIT ',AL1($BINTOD)
         DC    CL11'SMF5RSTT',AL1($BINTOD)
         DC    CL11'SMF5JBTI',AL1($HEX)
         DC    CL11'SMF5TRAN',AL1($JIF) TRANSACT RESIDENT TIME
         DC    CL11'SMF5JICL',AL1($NDEC) JOB INPUT CLASS
         DC    CL11'SMF5SPK ',AL1($HEX)
         DC    CL11'SMF5SRBT',AL1($JIF) SRB TIME
         DC    CL11'SMF5TJS ',AL1($DEC) SESSION SERVICE
         DC    CL11'SMF5TTAT',AL1($JIF) ACTIVE TIME
         DC    CL11'SMF5RV2 ',AL1($DEC) TRANSACTION COUNT
         DC    CL11'SMF5PGNO',AL1($DEC) PERFORMANCE GROUP
         DC    CL11'SMF5JCPU',AL1($JIF) TCB TIME
         DC    CL11'SMF5JSAF',AL1($CHR) JOB ACCOUNT

         DC    CL11'SMF6OWC ',AL1($NDEC) OUTPUT WRITER CLASS
         DC    CL11'SMF6WST ',AL1($BINTOD)
         DC    CL11'SMF6NLR ',AL1($DEC) NUMBER OF LOGICAL RECORDS
         DC    CL11'SMF6PGE ',AL1($DEC) APPROXIMATE PAGE COUNT
         DC    CL11'SMF6RTE ',AL1($HEX) OUTPUT ROUTE CODE OR ZERO
         DC    CL11'SMF6DFE ',AL1($HEX) DATA FORMAT ERROR FLAGS

         DC    CL11'SMF7NRO ',AL1($DEC) NUMBER OF RECORDS OMITTED
         DC    CL11'SMF7STM ',AL1($BINTOD)
         DC    CL11'SMF7FL1 ',AL1($HEX) FLAG BYTE
         DC    CL11'SMF7NROX',AL1($DEC) NUMBER OF RECORDS OMITTED
         DC    CL11'SMF7TBLS',AL1($DEC) TOTAL BYTES LOST IN SMF INIT

         DC    CL11'SMF8DUT ',AL1($HEX)
         DC    CL11'SMF8CHA ',AL1($HEX)

         DC    CL11'SMF9DUT ',AL1($HEX)
         DC    CL11'SMF9CUA ',AL1($HEX)

         DC    CL11'SMF10DUT',AL1($HEX)
         DC    CL11'SMF10CUA',AL1($HEX)

         DC    CL11'SMF11DUT',AL1($HEX)
         DC    CL11'SMF11CUA',AL1($HEX)

         DC    CL11'SMF14OPE',AL1($BINTOD)
         DC    CL11'SMFTIOE2',AL1($HEX)
         DC    CL11'SMFTIOE4',AL1($HEX)
         DC    CL11'SMFTIOE6',AL1($HEX)
         DC    CL11'SMFTIOE7',AL1($HEX)
         DC    CL11'JFCBUFNO',AL1($DEC)
         DC    CL11'JFCDSORG',AL1($DSO)
         DC    CL11'JFCRECFM',AL1($RFM)
         DC    CL11'JFCBLKSI',AL1($DEC) BLOCK SIZE
         DC    CL11'JFCLRECL',AL1($DEC) LOGICAL RECORD LENGTH
         DC    CL11'JFCBPQTY',AL1($DEC) PRIMARY QUANTITY
         DC    CL11'JFCBSQTY',AL1($DEC) SECONDARY QUANTITY
         DC    CL11'JFCBDQTY',AL1($DEC) DIRECTORY BLOCK QUANTITY
         DC    CL11'SMFDCBOR',AL1($DSO)
         DC    CL11'SMFDCBRF',AL1($RFM)
         DC    CL11'SMFDCBMF',AL1($HEX)
         DC    CL11'SMFDCBFL',AL1($HEX)
         DC    CL11'SMFDCBOP',AL1($HEX)
         DC    CL11'SMF14RV2',AL1($HEX)
         DC    CL11'SMFDEBFL',AL1($HEX)
         DC    CL11'SMF14TDA',AL1($HEX)
         DC    CL11'SMF14NTR',AL1($DEC)
         DC    CL11'SMF14NER',AL1($DEC)
         DC    CL11'SMF14EDI',AL1($HEX)
         DC    CL11'SMF14FG1',AL1($HEX)
         DC    CL11'SMFUCBCH',AL1($HEX)
         DC    CL11'SMFUCBUA',AL1($HEX)
         DC    CL11'SMFEXCP ',AL1($DEC) DATA SET EXCP COUNT
         DC    CL11'SMF14NTA',AL1($DEC) ALLOCATED TRACK COUNT
         DC    CL11'SMFIOREQ',AL1($DEC) HIPERBATCH I/O REQUESTS
         DC    CL11'SMFCHITS',AL1($DEC) HIPERBATCH CACHE HITS
         DC    CL11'SMFNMWTS',AL1($DEC) HIPERBATCH WAITS
         DC    CL11'SMFPHIOS',AL1($DEC) HIPERBATCH PHYSICAL IO REQUESTS
         DC    CL11'SMFCIOS ',AL1($DEC) HIPERBATCH CACHED IO REQUESTS
         DC    CL11'SMF14CIS',AL1($DEC) COMPRESSED DATA SET BLOCK SIZE
         DC    CL11'SMF14KET',AL1($BINTOD)

         DC    CL11'SMF19DEV',AL1($HEX)
         DC    CL11'SMF19VTC',AL1($HEX)
         DC    CL11'SMF19VTI',AL1($HEX)
         DC    CL11'SMF19NDS',AL1($NCHR)
         DC    CL11'SMF19DSR',AL1($NCHR)
         DC    CL11'SMF19NAT',AL1($NCHR)
         DC    CL11'SMF19SPC',AL1($NCHR)
         DC    CL11'SMF19LEX',AL1($NCHR)
         DC    CL11'SMF19NUE',AL1($NCHR)
         DC    CL11'SMF19CUU',AL1($HEX)

         DC    CL11'SMF20ACT',AL1($CHR) JOB ACCOUNT

         DC    CL11'SMF21DEV',AL1($HEX)
         DC    CL11'SMF21DEN',AL1($HEX)

         DC    CL11'SMF23SFG',AL1($HEX) STATISTICS SECTION FLAGS

         DC    CL11'SMF26IND',AL1($HEX)    INDICATORS
         DC    CL11'SMF26MSG',AL1($NDEC)   MESSAGE CLASS
         DC    CL11'SMF26CLS',AL1($NDEC)   JOB CLASS
         DC    CL11'SMF26LOC',AL1($HEX)    INPUT ROUTE CODE OR ZERO
         DC    CL11'SMF26XTM',AL1($DEC) ESTIMATED EXECUTION TIME (SEC)
         DC    CL11'SMF26ELN',AL1($DEC) ESTIMATED OUTPUT LINES
         DC    CL11'SMF26EPU',AL1($DEC) ESTIMATED OUTPUT PUNCHED CARDS
         DC    CL11'SMF26PRR',AL1($HEX)    DEFAULT PRINT DESTINATION
         DC    CL11'SMF26PUR',AL1($HEX)    DEFAULT PUNCH DESTINATION
         DC    CL11'SMF26DTM',AL1($BINTOD)
         DC    CL11'SMF26RPT',AL1($BINTOD)
         DC    CL11'SMF26CST',AL1($BINTOD)
         DC    CL11'SMF26CPT',AL1($BINTOD)
         DC    CL11'SMF26XST',AL1($BINTOD)
         DC    CL11'SMF26XPT',AL1($BINTOD)
         DC    CL11'SMF26OST',AL1($BINTOD)
         DC    CL11'SMF26OPT',AL1($BINTOD)
         DC    CL11'SMF26ICD',AL1($DEC) INPUT CARDS (JCL AND DATA)
         DC    CL11'SMF26XLN',AL1($DEC) OUTPUT LINES
         DC    CL11'SMF26XPU',AL1($DEC) OUTPUT PUNCH CARDS
         DC    CL11'SMF26EBT',AL1($DEC) ESTIMATED BYTE COUNT
         DC    CL11'SMF26XBT',AL1($DEC) ACTUAL BYTE COUNT
         DC    CL11'SMF26EPG',AL1($DEC) ESTIMATED PAGE COUNT
         DC    CL11'SMF26XPG',AL1($DEC) ACTUAL PAGE COUNT
         DC    CL11'SMF26WIN',AL1($HEX)    INDICATORS
         DC    CL11'SMF26BYU',AL1($DEC) TOTAL JOB UNCOMPRESSED BYTE CT
         DC    CL11'SMF26BYC',AL1($DEC) TOTAL JOB COMPRESSED BYTE COUNT
         DC    CL11'SMF26CCT',AL1($DEC) COMPRESSED DATA SET COUNT
         DC    CL11'SMF26ECT',AL1($DEC) ENCRYPTED DATA SET COUNT

         DC    CL11'SMF30CLS',AL1($NDEC)   JOB CLASS
         DC    CL11'SMF30AST',AL1($BINTOD)
         DC    CL11'SMF30PPS',AL1($BINTOD)
         DC    CL11'SMF30SIT',AL1($BINTOD)
         DC    CL11'SMF30RET',AL1($BINTOD)
         DC    CL11'SMF30TCN',AL1($128) TOTAL DEVICE CONNECT TIME
         DC    CL11'SMF30AIC',AL1($128) JOB DASD I/O CONNECT TIME
         DC    CL11'SMF30AID',AL1($128) JOB DASD I/O DISCONNECT TIME
         DC    CL11'SMF30AIW',AL1($128) JOB DASD I/O PENDING TIME
         DC    CL11'SMF30EIC',AL1($128) ENC DASD I/O CONNECT TIME
         DC    CL11'SMF30EID',AL1($128) ENC DASD I/O DISCONNECT TIME
         DC    CL11'SMF30EIW',AL1($128) ENC DASD I/O PENDING TIME
         DC    CL11'SMF30IST',AL1($BINTOD) INTERVAL START TIME
         DC    CL11'SMF30DEV',AL1($HEX)
         DC    CL11'SMF30UTP',AL1($HEX)
         DC    CL11'SMF30CUA',AL1($HEX)
         DC    CL11'SMF30SPK',AL1($HEX)
         DC    CL11'SMF30BLK',AL1($DEC) DD EXCP COUNT
         DC    CL11'SMF30BSZ',AL1($DEC) BLOCK SIZE (2 BYTES)
         DC    CL11'SMF30DCT',AL1($128) DEVICE CONNECT TIME
         DC    CL11'SMF30XBS',AL1($DEC) BLOCK SIZE (8 BYTES)
         DC    CL11'SMF30UCT',AL1($JIF) PRODUCT CPU TIME
         DC    CL11'SMF30UCS',AL1($JIF) PRODUCT SRB TIME

         DC    CL11'SMF32RET',AL1($BINTOD)

         DC    CL11'TIVSIT  ',AL1($BINTOD)
         DC    CL11'TIVOUTCT',AL1($DEC)  TSO SESSION TPUT COUNT
         DC    CL11'TIVINCT ',AL1($DEC)  TSO SESSION TGET COUNT
         DC    CL11'TIVSYST ',AL1($KB)   PRIVATE HIGH STORAGE
         DC    CL11'TIVMCRE ',AL1($KB)   PRIVATE REGION STORAGE
         DC    CL11'TIVEFRGN',AL1($KB)   EFFECTIVE REGIONS SIZE
         DC    CL11'TIVSPK  ',AL1($HEX)
         DC    CL11'TIVSTI  ',AL1($HEX)
         DC    CL11'TIVAST  ',AL1($BINTOD)
         DC    CL11'TIVPPST ',AL1($BINTOD)
         DC    CL11'TIVSRBT ',AL1($JIF)  SRB TIME
         DC    CL11'TIVDEVC ',AL1($HEX)
         DC    CL11'TIVUTYP ',AL1($HEX)
         DC    CL11'TIVCUAD ',AL1($HEX)
         DC    CL11'TIVNEXCP',AL1($DEC)  DD EXCP COUNT
         DC    CL11'TIVCPUTM',AL1($JIF)  TCB TIME
         DC    CL11'TIVACFLD',AL1($CHR)  TSO STEP ACCOUNT
         DC    CL11'TIVPGNO ',AL1($DEC)  PERFORMANCE GROUP
         DC    CL11'TIVPGSEC',AL1($DEC)  PAGE-SECONDS

         DC    CL11'TLGONTME',AL1($BINTOD)
         DC    CL11'TLGSTPCT',AL1($DEC)  NUMBER OF STEPS
         DC    CL11'TLGCRTME',AL1($BINTOD)
         DC    CL11'TLGOUTCT',AL1($DEC)  TSO SESSION TPUT COUNT
         DC    CL11'TLGINCT ',AL1($DEC)  TSO SESSION TGET COUNT
         DC    CL11'TLGNQTME',AL1($BINTOD)
         DC    CL11'TLGTRANT',AL1($JIF)  TRANSACT RESIDENT TIME
         DC    CL11'TLGSPK  ',AL1($HEX)
         DC    CL11'TLGSRBT ',AL1($JIF)  SRB TIME
         DC    CL11'TLGTJS  ',AL1($DEC)  SESSION SERVICE
         DC    CL11'TLGTTAT ',AL1($JIF)  ACTIVE TIME
         DC    CL11'TLGNTSN ',AL1($DEC)  TRANSACTION COUNT
         DC    CL11'TLGPGNO ',AL1($DEC)  PERFORMANCE GROUP
         DC    CL11'TLGCPUTM',AL1($JIF)  TCB TIME
         DC    CL11'TLGACFLD',AL1($CHR)  TSO USER ACCOUNT

         DC    CL11'TDDONTME',AL1($BINTOD)
         DC    CL11'TDDINVSQ',AL1($DEC)  1-BYTE STEP NUMBER
         DC    CL11'TDDDEVC ',AL1($HEX)
         DC    CL11'TDDUTYP ',AL1($HEX)
         DC    CL11'TDDCUAD ',AL1($HEX)
         DC    CL11'TDDNEXCP',AL1($DEC)  DD EXCP COUNT

         DC    CL11'SMF42RCL',AL1($NCHR) RECORD LENGTH              42

         DC    CL11'SMF41AZA',AL1($DEC)  OBJECT SIZE IN BLOCKS    42.1
         DC    CL11'SMF41UZU',AL1($DEC)  OBJECT SIZE IN BLOCKS    42.2

         DC    CL11'SMF42TMT',AL1($HEX)  INTERVAL DURATION        42.1

         DC    CL11'S42SCRNN',AL1($CHR)  STORAGE CLASS NAME       42.5
         DC    CL11'S42SCIOR',AL1($128)  AVERAGE RESPONSE TIME    42.5
         DC    CL11'S42SCIOC',AL1($128)  AVERAGE I/O CONNECT TIME 42.5
         DC    CL11'S42SCIOP',AL1($128)  AVERAGE I/O PENDING TIME 42.5
         DC    CL11'S42SCIOD',AL1($128)  AVG I/O DISCONNECT TIME  42.5
         DC    CL11'S42SCSNO',AL1($HEX)  SYNC_I/O OFFSET          42.5
         DC    CL11'S42VTADR',AL1($HEX)  DEVICE ADDRESS           42.5
         DC    CL11'S42VDIOR',AL1($128)  AVERAGE RESPONSE TIME    42.5
         DC    CL11'S42VDIOC',AL1($128)  AVERAGE I/O CONNECT TIME 42.5
         DC    CL11'S42VDIOP',AL1($128)  AVERAGE I/O PENDING TIME 42.5
         DC    CL11'S42VDIOD',AL1($128)  AVG I/O DISCONNECT TIME  42.5
         DC    CL11'S42VDIOQ',AL1($128)  AVERAGE C.U. QUEUE TIME  42.5
         DC    CL11'S42VXIOR',AL1($128)  AVERAGE RESPONSE TIME    42.5
         DC    CL11'S42VXIOC',AL1($128)  AVERAGE I/O CONNECT TIME 42.5
         DC    CL11'S42VXIOP',AL1($128)  AVERAGE I/O PENDING TIME 42.5
         DC    CL11'S42VXIOD',AL1($128)  AVG I/O DISCONNECT TIME  42.5
         DC    CL11'S42VXIOQ',AL1($128)  AVERAGE C.U. QUEUE TIME  42.5
         DC    CL11'S42VVIOR',AL1($128)  AVERAGE RESPONSE TIME    42.5
         DC    CL11'S42VVIOC',AL1($128)  AVERAGE I/O CONNECT TIME 42.5
         DC    CL11'S42VVIOP',AL1($128)  AVERAGE I/O PENDING TIME 42.5
         DC    CL11'S42VVIOD',AL1($128)  AVG I/O DISCONNECT TIME  42.5
         DC    CL11'S42VVIOQ',AL1($128)  AVERAGE C.U. QUEUE TIME  42.5
         DC    CL11'S42VSXDV',AL1($HEX)  I/O DRIVER ID            42.5
         DC    CL11'S42VSXOP',AL1($HEX)  FIRST CCW OPCODE         42.5

         DC    CL11'S42DSBSZ',AL1($DEC)  BLOCK SIZE               42.6
         DC    CL11'S42DSIOR',AL1($128)  AVERAGE RESPONSE TIME    42.6
         DC    CL11'S42DSIOC',AL1($128)  AVERAGE I/O CONNECT TIME 42.6
         DC    CL11'S42DSIOP',AL1($128)  AVERAGE I/O PENDING TIME 42.6
         DC    CL11'S42DSIOD',AL1($128)  AVG I/O DISCONNECT TIME  42.6
         DC    CL11'S42DSIOQ',AL1($128)  AVERAGE C.U. QUEUE TIME  42.6
         DC    CL11'S42DSDA0',AL1($128)  AVG I/O DEV-ONLY-ACTV TM 42.6
         DC    CL11'S42DSMXR',AL1($128)  MAX D.S I.O RESPONSE TM  42.6
         DC    CL11'S42DSMXS',AL1($128)  ASSOC. I/O SERVICE TIME  42.6
         DC    CL11'S42DSRDD',AL1($128)  AVG READ DISCONNECT TIME 42.6

         DC    CL11'S42DSORG',AL1($DSO)  DATA SET ORGANIZATION    42.9
         DC    CL11'S42TNTRK',AL1($DEC)  TOTAL TRACKS ALLOCATED   42.9
         DC    CL11'S42ASSAT',AL1($DEC)  SECONDARY SPACE QTY      42.9
         DC    CL11'S42ADRLH',AL1($DEC)  AVERAGE BLOCK LENGTH     42.9

         DC    CL11'S42XRSNX',AL1($HEX)  OFFSET TO NEXT          42.11
         DC    CL11'S42XRVLX',AL1($HEX)  OFFSET TO NEXT          42.11

         DC    CL11'DS1DSORG',AL1($DSO)  DATA SET ORGANIZATION   42.27
         DC    CL11'DS1RECFM',AL1($RFM)  RECORD FORMAT           42.27
         DC    CL11'O_1DSORG',AL1($DSO)  DATA SET ORGANIZATION   42.27
         DC    CL11'O_1RECFM',AL1($RFM)  RECORD FORMAT           42.27
         DC    CL11'N_1DSORG',AL1($DSO)  DATA SET ORGANIZATION   42.27
         DC    CL11'N_1RECFM',AL1($RFM)  RECORD FORMAT           42.27

         DC    CL11'SMF48CPD',AL1($BINTOD)

         DC    CL11'SMF60FNC',AL1($NDEC) FUNCTION INDICATOR

         DC    CL11'SMF61FNC',AL1($NDEC) FUNCTION INDICATOR

         DC    CL11'SMF62IND',AL1($HEX)    OPEN STATUS INDICATOR
         DC    CL11'SMF62VCT',AL1($DEC)    VOLUME COUNT
         DC    CL11'SMF62TIM',AL1($BINTOD) DATA SET OPEN TIME

         DC    CL11'SMF64CUU',AL1($HEX)    DEVICE NUMBER
         DC    CL11'SMF64TIM',AL1($BINTOD) DATA SET OPEN TIME
         DC    CL11'SMF64DT ',AL1($HEX)    DATA SET OPEN DATE

         DC    CL11'SMF65FNC',AL1($NDEC) FUNCTION INDICATOR

         DC    CL11'SMF66FNC',AL1($NDEC) FUNCTION INDICATOR

         DC    CL11'SMF70MOD',AL1($HEX)  CPU PROCESSOR FAMILY
         DC    CL11'SMF70BNP',AL1($DEC)  PHYSICAL ENGINE COUNT
         DC    CL11'SMF70POM',AL1($NDEC) PLANT OF MANUFACTURE
         DC    CL11'SMF70CAI',AL1($DEC)  CAPACITY ADJUSTMENT INDICATION
         DC    CL11'SMF70CCR',AL1($DEC)  CAPACITY CHANGE REASON
         DC    CL11'SMF70CCR',AL1($DEC)  CAPACITY CHANGE REASON
         DC    CL11'SMF70TCB',AL1($DEC)  TCB DISPATCH COUNT
         DC    CL11'SMF70SRB',AL1($DEC)  SRB DISPATCH COUNT
         DC    CL11'SMF70NIO',AL1($DEC)  I/O COUNT
         DC    CL11'SMF70SIG',AL1($DEC)  SIGP COUNT
         DC    CL11'SMF70WTD',AL1($DEC)  WAIT COUNT

         DC    CL11'SMF70SPN',AL1($CHR)  LPAR CLUSTER NAME
         DC    CL11'SMF70STN',AL1($CHR)  OPERATING SYSTEM INSTANCE NAME
         DC    CL11'SMF70GNM',AL1($CHR)  LPAR'S CAPACITY GROUP NAME

         DC    CL11'R723MDSP',AL1($CHR)  SERVICE POLICY DESCRIPTION
         DC    CL11'R723MCDE',AL1($CHR)  SERVICE/REPT CLASS DESCRIPTION

         DC    CL11'SMF73BSY',AL1($DEC)  INTERVAL CHPID BUSY SAMPLES
         DC    CL11'SMF73PBY',AL1($KMS)  LPAR INTERVAL CHPID BUST TIME
         DC    CL11'SMF73PTI',AL1($KMS)  CHANNEL PATH MSRMNT INTVL TIME
         DC    CL11'SMF73ACR',AL1($CHR)  CHANNEL PATH ACRONYM

         DC    CL11'SMF74NUM',AL1($HEX)  DEVICE NUMBER
         DC    CL11'SMF74LCU',AL1($HEX)  LOGICAL CONTROL UNIT NUMBER
         DC    CL11'SMF74TYP',AL1($HEX)  UNIT TYPE
         DC    CL11'SMF74CMR',AL1($128)
         DC    CL11'SMF74IDT',AL1($128)
         DC    CL11'SMF74NM2',AL1($HEX)  DEVICE NUMBER
         DC    CL11'R7410CRTC',AL1($128)
         DC    CL11'R7410CRT',AL1($128)
         DC    CL11'R7410CIQC',AL1($128)

         DC    CL11'R783CBT ',AL1($128)
         DC    CL11'R783CMR ',AL1($128)
         DC    CL11'R783DCTM',AL1($128)
         DC    CL11'R783DDTM',AL1($128)
         DC    CL11'R783CSST',AL1($128)

         DC    CL11'SMF89IST',AL1($BINTOD)
         DC    CL11'SMF89IET',AL1($BINTOD)
         DC    CL11'SMF89UST',AL1($BINTOD)
         DC    CL11'SMF89UET',AL1($BINTOD)
         DC    CL11'SMF89CMN',AL1($HEX) CPU MODEL NUMBER (PACKED)
         DC    CL11'SMF89SER',AL1($HEX) CPU SERIAL NUMBER (PACKED)

$FMT#    EQU   (*-ITEMFMTS)/$FMTL

         EJECT
SWITCHTB DC    0F                      SWITCH-TO-NEW-DSECT TABLE
$SWITCHL EQU   24                      ENTRY LENGTH

         DC    CL12'SMF4DEVC    ',CL12'SMF4DDIO    '  EX TYPE 4
         DC    CL12'SMF4LNTH    ',CL12'SMF4ACHD    '  EX TYPE 4
         DC    CL12'SMF4ACTF    ',CL12'SMF4ACCT    '  EX TYPE 4
         DC    CL12'SMF4PGIN    ',CL12'SMF4PAGE    '  EX TYPE 4
         DC    CL12'SMF4SST     ',CL12'SMF4PERF    '  EX TYPE 4
         DC    CL12'SMF5JSAF    ',CL12'SMF5ACCT    '  EX TYPE 5
         DC    CL12'SMF5CPUS    ',CL12'SMF5PERF    '  EX TYPE 5
         DC    CL12'SMF6RTE     ',CL12'SMF6J2S     '  EX TYPE 6
         DC    CL12'SMF6DFE     ',CL12'SMF6J3S     '  EX TYPE 6
         DC    CL12'SMF6LN2     ',CL12'SMF6X1ST    '  EX TYPE 6
         DC    CL12'SMF6LN3     ',CL12'SMF6XCMN    '  EX TYPE 6
         DC    CL12'SMF6LN5     ',CL12'SMF6ENHS    '  EX TYPE 6
         DC    CL12'SMF6LN4     ',CL12'SMF6X2ND    '  EX TYPE 6
         DC    CL12'SMF6BNLN    ',CL12'SMF6MBHD    '  EX TYPE 6
         DC    CL12'SMF6BNNO    ',CL12'SMF6MBCT    '  EX TYPE 6
         DC    CL12'SMF6LN6     ',CL12'SMF6FXFR    '  EX TYPE 6
         DC    CL12'SMF8DUT     ',CL12'SMF8IODV    '  EX TYPE 8
         DC    CL12'SMFDCBOR    ',CL12'SMFDCBDE    '  EX TYPE 14
         DC    CL12'SMFUCBDV    ',CL12'SMF14UCB    '  EX TYPE 14
         DC    CL12'SMFIOREQ    ',CL12'SMFHBTCH    '  EX TYPE 14
         DC    CL12'SMF14RV6    ',CL12'SMFISAMX    '  EX TYPE 14
         DC    CL12'SMF14SXS    ',CL12'SMF14XIS    '  EX TYPE 14
         DC    CL12'SMF14ESL    ',CL12'SMF14XIC    '  EX TYPE 14
         DC    CL12'SMF14XF1    ',CL12'SMF14CSB    '  EX TYPE 14
         DC    CL12'SMF14MCN    ',CL12'SMF14SCI    '  EX TYPE 14
         DC    CL12'SMF14SPN    ',CL12'SMF14SPI    '  EX TYPE 14
         DC    CL12'SMF14CFG    ',CL12'SMF14A4I    '  EX TYPE 14
         DC    CL12'SMF14BFG    ',CL12'SMF14ADI    '  EX TYPE 14
         DC    CL12'SMF14DRD    ',CL12'SMF14PSI    '  EX TYPE 14
         DC    CL12'SMF14KL1    ',CL12'SMF14ENC    '  EX TYPE 14
         DC    CL12'SMF14RFG    ',CL12'SMF14RASI   '  EX TYPE 14
         DC    CL12'SMF14DEF    ',CL12'SMF14ENCDASD'  EX TYPE 14
         DC    CL12'SMF20ACT    ',CL12'SMF20JAC    '  EX TYPE 20
         DC    CL12'SMF20RLS    ',CL12'SMF20RLA    '  EX TYPE 20
         DC    CL12'SMF26LN1    ',CL12'SMF26DESC   '  EX TYPE 26
         DC    CL12'SMF26FRM    ',CL12'SMF26J2D    '  EX TYPE 26
         DC    CL12'SMF26DTY    ',CL12'SMF26J3D    '  EX TYPE 26
         DC    CL12'SMF26LN2    ',CL12'SMF26EVNT   '  EX TYPE 26
         DC    CL12'SMF26LN3    ',CL12'SMF26ACTL   '  EX TYPE 26
         DC    CL12'SMF26LN4    ',CL12'SMF26NTWK   '  EX TYPE 26
         DC    CL12'SMF26LN5    ',CL12'SMF26ROUT   '  EX TYPE 26
         DC    CL12'SMF26LN6    ',CL12'SMF26PRNT   '  EX TYPE 26
         DC    CL12'SMF26LN7    ',CL12'SMF26TRIP   '  EX TYPE 26
         DC    CL12'TIVDEVC     ',CL12'TIVDDIO     '  EX TYPE 34
         DC    CL12'TIVVARA     ',CL12'TIVACHD     '  EX TYPE 34
         DC    CL12'TIVACFLD    ',CL12'TIVACCT     '  EX TYPE 34
         DC    CL12'TIVPGIN     ',CL12'TIVPAGE     '  EX TYPE 34
         DC    CL12'TIVSST      ',CL12'TIVPERF     '  EX TYPE 34
         DC    CL12'TLGACFLD    ',CL12'TLGACCT     '  EX TYPE 35
         DC    CL12'TLGCPUS     ',CL12'TLGPERF     '  EX TYPE 35
         DC    CL12'TDDDEVC     ',CL12'TDDEXCP     '  EX TYPE 40
         DC    CL12'S42VSXJN    ',CL12'S42VSXAA    '  EX TYPE 42.5
         DC    CL12'SMF62VSR    ',CL12'SMF62VLT    '  EX TYPE 62
         DC    CL12'SMF62MGT    ',CL12'SMF62DSD    '  EX TYPE 62
         DC    CL12'SMF64FCC    ',CL12'SMF64FEX    '  EX TYPE 64
         DC    CL12'SMF64SLN    ',CL12'SMF64STS    '  EX TYPE 64

$SWITCH# EQU   (*-SWITCHTB)/$SWITCHL


SECTSPEC DC    0F                      SECTION SPECIFICATION TABLE
SECTSPEL EQU   36                      ENTRY LENGTH
*
*  FLAG BYTE 1:
$D1LAST  EQU   X'80'       LAST SECTION ENTRY FOR RECORD
$D1CHAIN EQU   X'40'       INSTANCES OF THIS SECTION ARE CHAINED
$D1LNBYT EQU   X'20'       ACTUAL SECTION LENGTH BYTE COUNT FOLLOWS
$D1IDXO  EQU   X'10'       OFFSET BASED ON INDEX SECTION, NOT RECORD
$D1OCL   EQU   X'08'       TRIPLET ORDER IS OFFSET, COUNT, LENGTH
$D1OFST4 EQU   X'04'       SECTION OFFSET IS 4 BYTES IN SIZE
$D1O4L2  EQU   X'02'       2-BYTE SECTION LENGTH FOLLOWS 4-BYTE OFFSET
$D1L2N2  EQU   X'01'       2-BYTE SECTION COUNT FOLLOWS 2-BYTE LENGTH
*
*  FLAG BYTE 2:
$D2HDROF EQU   X'80'       OFFSET IS FROM RECORD HEADER, NOT RDW
$D2CALC# EQU   X'40'       NUMBER=LENGTH/"NUMBER" & LENGTH="NUMBER"
$D2PLUSL EQU   X'20'       NEED TO ADD LENGTH OF LENGTH INDICATOR
$D2LSELF EQU   X'10'       SECTION HAS ITS OWN LENGTH INDICATOR
$D2RECOF EQU   X'08'       OFFSET IS FROM START OF RECORD
$D2SECTX EQU   X'04'       NEXT SECTION EXTENDS THIS SECTION
$D27     EQU   X'02'       .
$D28     EQU   X'01'       .

         EJECT
*  SMF 4 STRUCTURE
*
*  1. BASE OR HEADER SECTION BEGINS AS A FIXED STRUCTURE UP TO
*     THE EXCP SECTION WHICH STARTS AT A FIXED OFFSET.
*
*  2. THE NUMBER OF EXCP SECTIONS HAS TO BE CALCULATED AT DISPLAY
*     TIME BY TAKING THE TOTAL LENGTH AND DIVIDING BY THE SECTION
*     LENGTH OF 8.
*
*  3. THE ACCOUNTING SECTION FOLLOWS THE VARIABLE-LENGTH EXCP SECTION.
*     IT IS TREATED AS A FIXED LENGTH HEADER AND AS A NUMBER OF
*     VARIABLE-LENGTH OCCURRENCES OF ACTUAL ACCOUNTING DATA, WITH THE
*     LEADING BYTE BEING THE LENGTH INDICATOR WHICH DOES NOT INCLUDE
*     ITSELF IN THE LENGTH, WHICH IS WHY THE '$D2PLUSL' FLAG IS SET.
*
*  4. THE RELOCATED SECTION IS BROKEN UP INTO THE PAGING SECTION AND
*     THE PERFORMANCE SECTION FOR DISPLAY PURPOSES.  THE PAGING SECTION
*     OFFSET FROM THE "HEADER SECTION" (OR AFTER THE RDW) IS SUPPLIED.
*     THE PAGING SECTION HAS A FIXED SIZE AS DOES THE PERFORMANCE
*     SECTION.

         DC    CL12'SMFRCD4     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(108)                LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4DDIO    '

         DC    CL12'SMF4DDIO    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2CALC#)           FLAG BYTE 2 -> NUMBER LOCATOR
         DC    AL2(108)                OFFSET LOCATOR
         DC    AL2(106)                LENGTH LOCATOR - SMF4LENN
         DC    AL2(8)                  NUMBER LOCATOR - SECTION SIZE
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4ACHD    '

         DC    CL12'SMF4ACHD    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2HDROF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(5)                  LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4ACCT    '

         DC    CL12'SMF4ACCT    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2PLUSL+$D2LSELF)  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(4)                  NUMBER LOCATOR - SMF4NAF
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(1)                  LENGTH ICM MASK
         DC    AL1(1)                  NUMBER ICM MASK
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4PAGE    '

         DC    CL12'SMF4PAGE    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2HDROF)           FLAG BYTE 2
         DC    AL2(104)                OFFSET LOCATOR - SMF4RLCT
         DC    AL2(28)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(3)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4PERF    '

         DC    CL12'SMF4PERF    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2HDROF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(74)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 5 STRUCTURE
*
*  1. BASE OR HEADER SECTION BEGINS AS A FIXED STRUCTURE UP TO
*     THE ACCOUNTING SECTION WHICH HAS A VARIABLE LENGTH.
*
*  2. THE ACCOUNTING SECTION IS TREATED AS A NUMBER OF VARIABLE-LENGTH
*     OCCURRENCES OF ACTUAL ACCOUNTING DATA, WITH THE LEADING BYTE
*     BEING A LENGTH INDICATOR WHICH DOES NOT INCLUDE ITSELF IN THE
*     LENGTH, WHICH IS WHY THE '$D2PLUSL' FLAG IS SET.
*
*  3. THE RELOCATED SECTION AT THE END OF THE RECORD HAS A FIXED SIZE.
*     THIS SECTION DOES NOT EXIST IN THE MVS 3.8 TYPE 5 SMF RECORD.

         DC    CL12'SMFRCD5     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(121)                LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF5ACCT    '

         DC    CL12'SMF5ACCT    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2PLUSL+$D2LSELF)  FLAG BYTE 2
         DC    AL2(121)                OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(120)                NUMBER LOCATOR - SMF5ACTF
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(1)                  LENGTH ICM MASK
         DC    AL1(1)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF5PERF    '

         DC    CL12'SMF5PERF    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(24)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 6 STRUCTURE
*
*  1. BASE OR HEADER SECTION BEGINS AS A FIXED STRUCTURE UP TO
*     THE JES2-ONLY OR JES3-ONLY SECTION.
*
*  2. OTHER SECTIONS MAY EXIST AS FLAGGED.

         DC    CL12'SMFRCD6     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(92)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF6J2S     '

         DC    CL12'SMF6J2S     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(92)                 OFFSET LOCATOR
         DC    AL2(2)                  LENGTH LOCATOR
         DC    AL2(63)                 NUMBER LOCATOR - SMF6SBS+1
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(128+2)              NUMBER ICM MASK - TM JES2-ID
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF6J3S     '

         DC    CL12'SMF6J3S     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(92)                 OFFSET LOCATOR
         DC    AL2(24)                 LENGTH LOCATOR
         DC    AL2(63)                 NUMBER LOCATOR - SMF6SBS+1
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(128+5)              NUMBER ICM MASK - TM JES3-ID
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF6X1ST    '

         DC    CL12'SMF6X1ST    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(61)                 NUMBER LOCATOR - SMF6PAD1
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(2)                  LENGTH ICM MASK
         DC    AL1(128)                NUMBER ICM MASK - TM SMF6FEXT
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF6XCMN    '

         DC    CL12'SMF6XCMN    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(61)                 NUMBER LOCATOR - SMF6PAD1
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(2)                  LENGTH ICM MASK
         DC    AL1(128+64)             NUMBER ICM MASK - TM SMF6REXT
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF6ENHS    '

         DC    CL12'SMF6ENHS    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(61)                 NUMBER LOCATOR - SMF6PAD1
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(2)                  LENGTH ICM MASK
         DC    AL1(128+16)             NUMBER ICM MASK - TM SMF6ESS1
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF6X2ND    '

         DC    CL12'SMF6X2ND    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(61)                 NUMBER LOCATOR - SMF6PAD1
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(2)                  LENGTH ICM MASK
         DC    AL1(128+32)             NUMBER ICM MASK - TM SMF6SEXT
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF6MBHD    '

         DC    CL12'SMF6MBHD    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(2)                  OFFSET LOCATOR - SMF6BNOF
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(3)                  OFFSET ICM MASK
         DC    AL1(2)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF6MBCT    '

         DC    CL12'SMF6MBCT    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2CALC#)           FLAG BYTE 2 -> NUMBER LOCATOR
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(8)                  NUMBER LOCATOR - SECTION SIZE
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(2)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF6FXFR    '

         DC    CL12'SMF6FXFR    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(61)                 NUMBER LOCATOR - SMF6PAD1
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(2)                  LENGTH ICM MASK
         DC    AL1(128+8)              NUMBER ICM MASK - TM SMF6FTFR
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 8 STRUCTURE
*
*  1. BASE OR HEADER SECTION BEGINS AS A FIXED STRUCTURE UP TO
*     THE DEVICE DATA SECTION WHICH STARTS AT A FIXED OFFSET
*     AND HAS A VARIABLE LENGTH.
*
*  2. THE NUMBER OF DEVICE DATA SECTIONS HAS TO BE CALCULATED AT
*     DISPLAY TIME BY TAKING THE TOTAL LENGTH AND DIVIDING BY THE
*     SECTION LENGTH OF 4.

         DC    CL12'SMFRCD8     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(20)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF8IODV    '


         DC    CL12'SMF8IODV    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2CALC#)           FLAG BYTE 2 -> NUMBER LOCATOR
         DC    AL2(20)                 OFFSET LOCATOR
         DC    AL2(18)                 LENGTH LOCATOR - SMF8LENN
         DC    AL2(4)                  NUMBER LOCATOR - SECTION SIZE
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 14/15 STRUCTURE
*
*  1. SMF 14/15 RECORD STRUCTURE NOW HAS "MANY" MORE SECTIONS
*     THAN IT DID ORIGINALLY, BUT 'IFGSMF14 DSECT=YES' GIVES
*     TOO MANY UNHELPFUL DSECTS, SO 'IFASMFR 14' IS USED.
*
*  2. THE JFCB IS CONTAINED IN THE SINGLE ITEM NAMED 'SMFJFCB1'
*     BUT IT WOULD BE MORE USEFUL TO SHOW JFCB ITEMS SO THAT
*     ITEMS LIKE THE DATA SET NAME ARE RENDERED AS CHARACTERS
*     AND NOT AS HEX, SO 'IEFJFCBN' IS ALSO USED AFTER THE
*     SMF 14 RECORD EXPANSION TO GAIN ACCESS TO JFCB ITEMS.
*
*  3. IT WOULD BE GOOD TO SHOW THE JFCB ITEMS AFTER THE ITEMS
*     WHICH IT FOLLOWS AND BEFORE THE ITEMS WHICH FOLLOW IT,
*     SO THE JFCB DSECT IS NAMED AS THE NEXT SECTION AFTER THE
*     BASE OR HEADER SECTION, AND THE JFCB SECTION NAMES THE
*     DCB/DEB SECTION AS THE NEXT SECTION, WHICH CAUSES THE
*     SECTION DISPLAY ORDER TO BE DIFFERENT FROM THE ORDER IN
*     WHICH THE SECTIONS ARE DESCRIBED WITHIN THE OUTPUT
*     STRUCTURE MODULE.
*
*  4. THE INPUT JFCB DSECT CANNOT BE NAMED 'SMFJFCB1' BECAUSE
*     THE INPUT ASSEMBLE WOULD FAIL WITH A DUPLICATE LABEL NAME,
*     SO IT IS NAMED 'SMFJFCB' AND RENAMED TO 'SMFJFCB1' BY THIS
*     PROGRAM TO MATCH THE PUBLISHED NAME.  THE 'SMFJFCB1' ITEM IN
*     THE INPUT RECORD DATA IS MADE TO "VANISH" BY THIS PROGRAM.
*
*  5. A DCB/DEB SECTION DSECT MUST BE MANUFACTURED HERE SO THAT
*     IT CAN BE NAMED AS THE NEXT SECTION BY THE JFCB SECTION.
*     THIS IS ACHIEVED BY HAVING A DSECT SWITCH 'SWITCHTB' ENTRY.
*     THE NON-ZERO ORIGIN OF THIS SECTION'S ELEMENTS IS HANDLED
*     BY POST-PROCESSOR'S DISPLAY LOGIC CALCULATING AN ADJUSTMENT
*     OFFSET VALUE BY LOOKING AT THE FIRST ITEM'S OFFSET AND
*     SUBTRACTING THIS VALUE FOR ALL OF THE SECTION'S ITEMS.

         DC    CL12'SMFRCD14    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(68)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMFJFCB1    '

         DC    CL12'SMFJFCB1    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(68)                 OFFSET LOCATOR
         DC    AL2(176)                LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMFDCBDE    '

         DC    CL12'SMFDCBDE    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(244)                OFFSET LOCATOR
         DC    AL2(44)                 LENGTH LOCATOR - SMF14SDC
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(1)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14UCB    '

         DC    CL12'SMF14UCB    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(272)                OFFSET LOCATOR
         DC    AL2(46)                 LENGTH LOCATOR - SMF14SUC
         DC    AL2(45)                 NUMBER LOCATOR - SMF14NUC
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(1)                  LENGTH ICM MASK
         DC    AL1(1)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMFHBTCH    '

         DC    CL12'SMFHBTCH    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(20)                 LENGTH LOCATOR
         DC    AL2(43)                 NUMBER LOCATOR - SMF14RIN+1
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(128+8)              NUMBER ICM MASK - TM SMF14HBT
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMFISAMX    '

         DC    CL12'SMFISAMX    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(28)                 LENGTH LOCATOR
         DC    AL2(42)                 NUMBER LOCATOR - SMF14RIN
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(128+4)              NUMBER ICM MASK - TM SMF14IS
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14XIS    '

         DC    CL12'SMF14XIS    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(2)                  LENGTH LOCATOR
         DC    AL2(43)                 NUMBER LOCATOR - SMF14RIN+1
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(128+4)              NUMBER ICM MASK - TM SMF14XSG
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14XIC    '

         DC    CL12'SMF14XIC    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(4)                  LENGTH LOCATOR
         DC    AL2(43)                 NUMBER LOCATOR - SMF14RIN+1
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(128+4)              NUMBER ICM MASK - TM SMF14XSG
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'X14TYPE     '

X14_SUB1 DC    CL12'SMF14CSB    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR - SMF14ESL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14XIC    '

         DC    CL12'SMF14SCI    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR - SMF14ESL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14XIC    '

         DC    CL12'SMF14SPI    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR - SMF14ESL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14XIC    '

         DC    CL12'SMF14A4I    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR - SMF14ESL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14XIC    '

         DC    CL12'SMF14ADI    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR - SMF14ESL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14XIC    '

         DC    CL12'SMF14PSI    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR - SMF14ESL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14XIC    '

         DC    CL12'SMF14ENC    '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR - SMF14ESL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14XIC    '

         DC    CL12'SMF14RASI   '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR - SMF14ESL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14XIC    '

         DC    CL12'SMF14ENCDASD'
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR - SMF14ESL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF14XIC    '

         EJECT
*  SMF 20 STRUCTURE
*
*  SMF 20 HAS A FIXED STRUCTURE UP TO THE ACCOUNTING SECTION
*  WHICH STARTS AT A FIXED OFFSET.  UNFORTUNATELY, UNLIKE
*  OTHER SMF RECORD TYPES, THE LENGTH OF ANY ACCOUNTING DATA
*  SUCH AS THE ACCOUNT DATA ITSELF OR THE WHOLE ACCOUNTING
*  SECTION IS NOT GIVEN.  FOR THIS REASON THE $D2PLUSL FLAG
*  IS USED TO PROMPT THE POST-PROCESSOR TO APPLY SPECIAL
*  TYPE 20 KNOWLEDGE TO DETERMINE THE JOB ACCOUNT DATA LENGTH.
*
*  THE RECORD CONCLUDES WITH A RELOCATED SECTION WITH A FIXED
*  STRUCTURE FOR WHICH A "HEADER" OFFSET IS PROVIDED.

         DC    CL12'SMFRCD20    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(65)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF20JAC    '

         DC    CL12'SMF20JAC    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2PLUSL)           FLAG BYTE 2
         DC    AL2(65)                 OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(64)                 NUMBER LOCATOR - SMF20NAF
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(1)                  LENGTH ICM MASK
         DC    AL1(1)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF20RLA    '

         DC    CL12'SMF20RLA    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2HDROF+$D2LSELF)  FLAG BYTE 2
         DC    AL2(42)                 OFFSET LOCATOR - SMF20RLO
         DC    AL2(0)                  LENGTH LOCATOR - SMF20RLS
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(3)                  OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 23 STRUCTURE
*
*  RECORD STRUCTURE IS OF THE TYPE-30 TRIPLET TYPE
*  BUT WITHOUT SUBTYPES.

         DC    CL12'SMFRCD23    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(20)                 LENGTH LOCATOR - SMF23POF
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(15)                 LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF23PRS    '

         DC    CL12'SMF23PRS    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(20)                 OFFSET LOCATOR - SMF23POF
         DC    AL2(24)                 LENGTH LOCATOR - SMF23PLN
         DC    AL2(26)                 NUMBER LOCATOR - SMF23PON
         DC    AL1(4)                  OFFSET ICM MASK
         DC    AL1(2)                  LENGTH ICM MASK
         DC    AL1(2)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF23SDS    '

         DC    CL12'SMF23SDS    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(28)                 OFFSET LOCATOR - SMF23SOF
         DC    AL2(32)                 LENGTH LOCATOR - SMF23SLN
         DC    AL2(34)                 NUMBER LOCATOR - SMF23SON
         DC    AL1(4)                  OFFSET ICM MASK
         DC    AL1(2)                  LENGTH ICM MASK
         DC    AL1(2)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF23SMF    '

         DC    CL12'SMF23SMF    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(36)                 OFFSET LOCATOR - SMF23ROF
         DC    AL2(40)                 LENGTH LOCATOR - SMF23RLN
         DC    AL2(42)                 NUMBER LOCATOR - SMF23RON
         DC    AL1(4)                  OFFSET ICM MASK
         DC    AL1(2)                  LENGTH ICM MASK
         DC    AL1(2)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF23LGS    '

         DC    CL12'SMF23LGS    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(44)                 OFFSET LOCATOR - SMF23LOF
         DC    AL2(48)                 LENGTH LOCATOR - SMF23LLN
         DC    AL2(50)                 NUMBER LOCATOR - SMF23LON
         DC    AL1(4)                  OFFSET ICM MASK
         DC    AL1(2)                  LENGTH ICM MASK
         DC    AL1(2)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 26 STRUCTURE
*
*  1. BASE OR HEADER SECTION BEGINS AS A FIXED STRUCTURE UP TO
*     THE JES2-ONLY OR JES3-ONLY SECTION.
*
*  2. OTHER SECTIONS MAY EXIST AS FLAGGED.

         DC    CL12'SMFRCD26    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(50)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF26DESC   '

         DC    CL12'SMF26DESC   '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(50)                 OFFSET LOCATOR
         DC    AL2(74)                 LENGTH LOCATOR
         DC    AL2(48)                 NUMBER LOCATOR - SMF26IND
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(128)                NUMBER ICM MASK - TM SMF26DES
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF26J2D    '

         DC    CL12'SMF26J2D    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(124)                OFFSET LOCATOR
         DC    AL2(20)                 LENGTH LOCATOR
         DC    AL2(47)                 NUMBER LOCATOR - SMF26SBS+1
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(128+2)              NUMBER ICM MASK - TM JES2-ID
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF26J3D    '

         DC    CL12'SMF26J3D    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(124)                OFFSET LOCATOR
         DC    AL2(60)                 LENGTH LOCATOR
         DC    AL2(47)                 NUMBER LOCATOR - SMF26SBS+1
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(128+5)              NUMBER ICM MASK - TM JES3-ID
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF26EVNT   '

         DC    CL12'SMF26EVNT   '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(48)                 NUMBER LOCATOR - SMF26IND
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(128+64)             NUMBER ICM MASK - TM SMF26EVT
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF26ACTL   '

         DC    CL12'SMF26ACTL   '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(48)                 NUMBER LOCATOR - SMF26IND
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(128+32)             NUMBER ICM MASK - TM SMF26ATU
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF26NTWK   '

         DC    CL12'SMF26NTWK   '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(48)                 NUMBER LOCATOR - SMF26IND
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(128+16)             NUMBER ICM MASK - TM SMF26NTW
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF26ROUT   '

         DC    CL12'SMF26ROUT   '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(48)                 NUMBER LOCATOR - SMF26IND
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(128+8)              NUMBER ICM MASK - TM SMF26J2R
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF26PRNT   '

         DC    CL12'SMF26PRNT   '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(48)                 NUMBER LOCATOR - SMF26IND
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(128+4)              NUMBER ICM MASK - TM SMF26JXP
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF26TRIP   '

         DC    CL12'SMF26TRIP   '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2LSELF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(48)                 NUMBER LOCATOR - SMF26IND
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(128+1)              NUMBER ICM MASK - TM SMF26ACP
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 34 STRUCTURE
*
*  1. BASE OR HEADER SECTION BEGINS AS A FIXED STRUCTURE UP TO
*     THE EXCP SECTION WHICH STARTS AT A FIXED OFFSET.
*
*  2. THE NUMBER OF EXCP SECTIONS HAS TO BE CALCULATED AT DISPLAY
*     TIME BY TAKING THE TOTAL LENGTH AND DIVIDING BY THE SECTION
*     LENGTH OF 8.
*
*  3. THE ACCOUNTING SECTION FOLLOWS THE VARIABLE-LENGTH EXCP SECTION.
*     IT IS TREATED AS A FIXED LENGTH HEADER AND AS A NUMBER OF
*     VARIABLE-LENGTH OCCURRENCES OF ACTUAL ACCOUNTING DATA, WITH THE
*     LEADING BYTE BEING THE LENGTH INDICATOR WHICH DOES NOT INCLUDE
*     ITSELF IN THE LENGTH, WHICH IS WHY THE '$D2PLUSL' FLAG IS SET.
*
*  4. THE RELOCATED SECTION IS BROKEN UP INTO THE PAGING SECTION AND
*     THE PERFORMANCE SECTION FOR DISPLAY PURPOSES.  THE PAGING SECTION
*     OFFSET FROM THE "HEADER SECTION" (OR AFTER THE RDW) IS SUPPLIED.
*     THE PAGING SECTION HAS A FIXED SIZE AS DOES THE PERFORMANCE
*     SECTION.
*
*  THE TYPE 34 RECORD STRUCTURE MATCHES THE TYPE 4 RECORD STRUCTURE.

         DC    CL12'SMFRCD34    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(104)                LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'TIVDDIO     '

         DC    CL12'TIVDDIO     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2CALC#)           FLAG BYTE 2 -> NUMBER LOCATOR
         DC    AL2(108)                OFFSET LOCATOR
         DC    AL2(106)                LENGTH LOCATOR - TIVVAR
         DC    AL2(8)                  NUMBER LOCATOR - SECTION SIZE
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'TIVACHD     '

         DC    CL12'TIVACHD     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2HDROF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(5)                  LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'TIVACCT     '

         DC    CL12'TIVACCT     '
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2PLUSL+$D2LSELF)  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(4)                  NUMBER LOCATOR - TIVNBRAC
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(1)                  LENGTH ICM MASK
         DC    AL1(1)                  NUMBER ICM MASK
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'TIVPAGE     '

         DC    CL12'TIVPAGE     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2HDROF)           FLAG BYTE 2
         DC    AL2(104)                OFFSET LOCATOR - TIVRLCT
         DC    AL2(28)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(3)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'TIVPERF     '

         DC    CL12'TIVPERF     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2HDROF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(74)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 35 STRUCTURE
*
*  1. BASE OR HEADER SECTION BEGINS AS A FIXED STRUCTURE UP TO
*     THE ACCOUNTING SECTION WHICH HAS A VARIABLE LENGTH.
*
*  2. THE ACCOUNTING SECTION IS TREATED AS A NUMBER OF VARIABLE-LENGTH
*     OCCURRENCES OF ACTUAL ACCOUNTING DATA, WITH THE LEADING BYTE
*     BEING A LENGTH INDICATOR WHICH DOES NOT INCLUDE ITSELF IN THE
*     LENGTH, WHICH IS WHY THE '$D2PLUSL' FLAG IS SET.
*
*  3. THE RELOCATED SECTION AT THE END OF THE RECORD HAS A FIXED SIZE.
*     THIS SECTION DOES NOT EXIST IN THE MVS 3.8 TYPE 35 SMF RECORD.
*
*  THE TYPE 35 RECORD STRUCTURE MATCHES THE TYPE 5 RECORD STRUCTURE.

         DC    CL12'SMFRCD35    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(121)                LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'TLGACCT     '

         DC    CL12'TLGACCT     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2PLUSL+$D2LSELF)  FLAG BYTE 2
         DC    AL2(121)                OFFSET LOCATOR
         DC    AL2(0)                  LENGTH LOCATOR
         DC    AL2(120)                NUMBER LOCATOR - SMF5ACTF
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(1)                  LENGTH ICM MASK
         DC    AL1(1)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'TLGPERF     '

         DC    CL12'TLGPERF     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(24)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 40 STRUCTURE
*
*  1. BASE OR HEADER SECTION BEGINS AS A FIXED STRUCTURE UP TO
*     THE EXCP SECTION WHICH STARTS AT A FIXED OFFSET.
*
*  2. THE NUMBER OF EXCP SECTIONS HAS TO BE CALCULATED AT DISPLAY
*     TIME BY TAKE THE TOTAL LENGTH AND DIVIDING BY THE SECTION
*     LENGTH OF 8.

         DC    CL12'SMFRCD40    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(66)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'TDDEXCP     '

         DC    CL12'TDDEXCP     '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2CALC#)           FLAG BYTE 2 -> NUMBER LOCATOR
         DC    AL2(66)                 OFFSET LOCATOR
         DC    AL2(64)                 LENGTH LOCATOR - TDDVAR
         DC    AL2(8)                  NUMBER LOCATOR - SECTION SIZE
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 42 SUBTYPE 2
*
*  THE BASE/HEADER SECTION (INCLUDING THE PRODUCT SECTION TRIPLET)
*  IS FOLLOWED BY THE SUBTYPE 2 TRIPLET SECTION CONTAINING 2 TRIPLETS.
*  THE 3 TRIPLETS POINT TO THE PRODUCT SECTION, THE CONTROL UNIT
*  CACHE SECTION AND THE VOLUME SECTION.
*
*  THE ONLY REASON THAT A SECNAMES ENTRY CAN'T BE USED FOR THIS
*  SUBTYPE IS BECAUSE 'SMF42VLL' CONTAINS THE TOTAL LENGTH OF ALL
*  VOLUME SECTIONS AND NOT THE LENGTH OF EACH ONE.

         DC    CL12'SMF42HDR2   '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(36)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF42S2     '

         DC    CL12'SMF42S2     '      TRIPLETS FOR SUBTYPE 2
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(36)                 OFFSET LOCATOR
         DC    AL2(16)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF42PRD2   '

         DC    CL12'SMF42PRD2   '      PRODUCT SECTION
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(28)                 OFFSET LOCATOR - SMF42OPS
         DC    AL2(32)                 LENGTH LOCATOR - SMF42LPS
         DC    AL2(34)                 NUMBER LOCATOR - SMF42NPS
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4202A    '

         DC    CL12'SMF4202A    '      CONTROL UNIT SUMMARY
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(36)                 OFFSET LOCATOR - SMF42CUO
         DC    AL2(40)                 LENGTH LOCATOR - SMF42CUL
         DC    AL2(42)                 NUMBER LOCATOR - SMF42CUN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4202B    '

         DC    CL12'SMF4202B    '      VOLUME HEADER
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(44)                 OFFSET LOCATOR - SMF42VLO
         DC    AL2(16)                 LENGTH LOCATOR
         DC    AL2(50)                 NUMBER LOCATOR - SMF42VLN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 42 SUBTYPE 5
*
*  THE BASE/HEADER SECTION (INCLUDING THE PRODUCT SECTION TRIPLET)
*  IS FOLLOWED BY THE SUBTYPE 5 TRIPLET SECTION CONTAINING 2 TRIPLETS.
*  THE 3 TRIPLETS POINT TO THE PRODUCT SECTION, THE STORAGE CLASS
*  RESPONSE TIME SECTION, AND THE VOLUME HEADER SECTION.
*  THE SYNC_IO SECTION IS ANCHORED BY A DOUBLET IN THE STORAGE CLASS
*  RESPONSE TIME SECTION.  THE VOLUME HEADER SECTION HAS A CHAINING
*  OFFSET POINTER, AND ANCHORS SECTIONS FOR THE VTOC DATA COMPONENT,
*  THE VTOC INDEX COMPONENT, THE VVDS COMPONENT, VOLUME METRICS, THE
*  SYSTEM I/O HEADER, AND THE VOLUME BACKGROUND ACTIVITY HEADER.
*  THE SYSTEM I/O HEADER ANCHORS SECTIONS FOR SYSTEM I/O STATISTICS
*  AND SYSTEM I/O HIGH RESPONSE TIME.  THE VOLUME BACKGROUND ACTIVITY
*  HEADER ANCHORS A SECTION FOR ASYNCHRONOUS DATA.
*
*  IN FACT, THE SYNC_IO SECTION IS APPENDED TO THE END OF THE STORAGE
*  CLASS RESPONSE TIME SECTION, AND SO THE LENGTH OF THE LATTER IS
*  EFFECTIVELY THE SUM OF BOTH SECTIONS' LENGTHS WHICH IS TO BE USED
*  WHEN PROGRESSING TO THE NEXT INSTANCE OF THE STORAGE CLASS RESPONSE
*  TIME SECTION WHICH OCCURS THE VALUE OF SMF42SRN TIMES.  THE CASE
*  WHERE A STORAGE CLASS RESPONSE TIME SECTION HAS NO ASSOCIATED
*  SYNC_IO SECTION (INDICATED BY A ZERO OFFSET AND LENGTH) MUST ALSO
*  BE HANDLED EVEN THOUGH THE COUNT OF 1 IS HARD-CODED BELOW.

         DC    CL12'SMF42HDR5   '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(36)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF42S5     '

         DC    CL12'SMF42S5     '      TRIPLETS FOR SUBTYPE 5
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(36)                 OFFSET LOCATOR
         DC    AL2(16)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF42PRD5   '

         DC    CL12'SMF42PRD5   '      PRODUCT SECTION
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(28)                 OFFSET LOCATOR - SMF42OPS
         DC    AL2(32)                 LENGTH LOCATOR - SMF42LPS
         DC    AL2(34)                 NUMBER LOCATOR - SMF42NPS
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205A    '

         DC    CL12'SMF4205A    '      STORCLAS RESPONSE TIME
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2SECTX)           FLAG BYTE 2
         DC    AL2(36)                 OFFSET LOCATOR - SMF42SRO
         DC    AL2(40)                 LENGTH LOCATOR - SMF42SRL
         DC    AL2(42)                 NUMBER LOCATOR - SMF42SRN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'S42SNIO5    '

         DC    CL12'S42SNIO5    '      SYNCHRONOUS I/O STATISTICS
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(140)                OFFSET LOCATOR - S42SCSNO
         DC    AL2(144)                LENGTH LOCATOR - S42SCSNL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205B    '

         DC    CL12'SMF4205B    '      VOLUME HEADER
         DC    AL1($D1CHAIN)           FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(44)                 OFFSET LOCATOR - SMF42VHO
         DC    AL2(48)                 LENGTH LOCATOR - SMF42VHL
         DC    AL2(50)                 NUMBER LOCATOR - SMF42VHN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205C    '

         DC    CL12'SMF4205C    '      VTOC DATA COMPONENT
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(24)                 OFFSET LOCATOR - S42VTVDO
         DC    AL2(28)                 LENGTH LOCATOR - S42VTVDL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205D    '

         DC    CL12'SMF4205D    '      VTOC INDEX COMPONENT
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(32)                 OFFSET LOCATOR - S42VTVXO
         DC    AL2(36)                 LENGTH LOCATOR - S42VTVXL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205E    '

         DC    CL12'SMF4205E    '      VVDS COMPONENT
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(40)                 OFFSET LOCATOR - S42VTVVO
         DC    AL2(44)                 LENGTH LOCATOR - S42VTVVL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205F    '

         DC    CL12'SMF4205F    '      VOLUME METRICS
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(48)                 OFFSET LOCATOR - S42VTMCO
         DC    AL2(52)                 LENGTH LOCATOR - S42VTMCL
         DC    AL2(54)                 NUMBER LOCATOR - S42VTMCN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205H    '

         DC    CL12'SMF4205H    '      VOLUME SYSTEM I/O DESPATCH
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(56)                 OFFSET LOCATOR - S42VTSYO
         DC    AL2(60)                 LENGTH LOCATOR - S42VTSYL
         DC    AL2(62)                 NUMBER LOCATOR - S42VTSYN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205I    '

         DC    CL12'SMF4205I    '      VOLUME SYSTEM I/O STATISTICS
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR - S42VSYO1
         DC    AL2(4)                  LENGTH LOCATOR - S42VSYL1
         DC    AL2(6)                  NUMBER LOCATOR - S42VSYN1
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205J    '

         DC    CL12'SMF4205J    '      SYSTEM I/O HIGH RESPONSE
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(8)                  OFFSET LOCATOR - S42VSYO2
         DC    AL2(12)                 LENGTH LOCATOR - S42VSYL2
         DC    AL2(14)                 NUMBER LOCATOR - S42VSYN2
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'S42VSXAA    '

         DC    CL12'S42VSXAA    '      SYSTEM I/O HIGH RESPONSE
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(32)                 LENGTH LOCATOR
         DC    AL2(0)                  NUMBER LOCATOR - S42VSXNJ
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(4)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205O    '

         DC    CL12'SMF4205O    '      VOLUME BACKGROUND ACTIVITY
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(64)                 OFFSET LOCATOR - S42VTBGO
         DC    AL2(68)                 LENGTH LOCATOR - S42VTBGL
         DC    AL2(70)                 NUMBER LOCATOR - S42VTBGN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205P    '

         DC    CL12'SMF4205P    '      VOLUME CLOUD ACTIVITY
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR - S42VBGO1
         DC    AL2(4)                  LENGTH LOCATOR - S42VBGL1
         DC    AL2(6)                  NUMBER LOCATOR - S42VBGN1
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4205B    '

         EJECT
*  SMF 42 SUBTYPE 6
*
*  THE BASE/HEADER SECTION (INCLUDING THE PRODUCT SECTION TRIPLET)
*  IS FOLLOWED THE SUBTYPE 6 TRIPLET SECTION, THE PRODUCT SECTION,
*  THE JOB HEADER SECTION (DESCRIBED BY THE SUBTYPE 6 TRIPLET),
*  THE DATA SET HEADER SECTION, THE DATA SET I/O STATISTICS SECTION,
*  THE DATA SET ACCESS METHOD STATISTICS SECTION, AND THE
*  SYNCHRONOUS I/O SECTION.

         DC    CL12'SMF42HDR6   '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(36)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF42S6     '

         DC    CL12'SMF42S6     '      TRIPLET FOR SUBTYPE 6
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(36)                 OFFSET LOCATOR
         DC    AL2(8)                  LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF42PRD6   '

         DC    CL12'SMF42PRD6   '      PRODUCT SECTION
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(28)                 OFFSET LOCATOR - SMF42OPS
         DC    AL2(32)                 LENGTH LOCATOR - SMF42LPS
         DC    AL2(34)                 NUMBER LOCATOR - SMF42NPS
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF4206A    '

         DC    CL12'SMF4206A    '      JOB HEADER
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(36)                 OFFSET LOCATOR - SMF42JHO
         DC    AL2(40)                 LENGTH LOCATOR - SMF42JHL
         DC    AL2(42)                 NUMBER LOCATOR - SMF42JHN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'S42DSH      '

         DC    CL12'S42DSH      '      DATA SET HEADER
         DC    AL1($D1CHAIN+$D1IDXO)   FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(24)                 OFFSET LOCATOR - S42JDDSO
         DC    AL2(28)                 LENGTH LOCATOR - S42JDDSL
         DC    AL2(1)                  NUMBER LOCATOR
*        DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(2)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'S42DSIO     '

         DC    CL12'S42DSIO     '      DATA SET I/O STATISTICS
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(52)                 OFFSET LOCATOR - S42DSIOO
         DC    AL2(152)                LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'S42DSAM     '

         DC    CL12'S42DSAM     '      ACCESS METHOD STATISTICS
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(56)                 OFFSET LOCATOR - S42DSAMO
         DC    AL2(88)                 LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'S42SNIO6    '

         DC    CL12'S42SNIO6    '      SYNCHRONOUS I/O STATISTICS
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(88)                 OFFSET LOCATOR - S42DSSNO
         DC    AL2(92)                 LENGTH LOCATOR - S42DSSNL
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'S42SNTW     '

         DC    CL12'S42SNTW     '      SYNCHRONOUS I/O STATISTICS 2
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(96)                 OFFSET LOCATOR - S42DSS2O
         DC    AL2(100)                LENGTH LOCATOR - S42DSS2L
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'S42SNDW     '

         DC    CL12'S42SNDW     '      SYNCHRONOUS I/O STATISTICS 3
         DC    AL1($D1IDXO)            FLAG BYTE 1
         DC    AL1($D2RECOF)           FLAG BYTE 2
         DC    AL2(104)                OFFSET LOCATOR - S42DSS3O
         DC    AL2(108)                LENGTH LOCATOR - S42DSS3L
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(3)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'S42DSH      '      LOOP BACK TO CHAINED HEADER

         EJECT
*  SMF 62 STRUCTURE
*
*  THE BASE/HEADER SECTION IS FOLLOWED BY AN VOLUME LIST TABLE
*  WHICH IS FOLLOWED VARIOUS DATA SET DETAIL SECTIONS, EACH
*  WITH A FIXED STRUCTURE.

         DC    CL12'SMFRCD62    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(142)                LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF62VLT    '

         DC    CL12'SMF62VLT    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(142)                OFFSET LOCATOR
         DC    AL2(10)                 LENGTH LOCATOR
         DC    AL2(140)                NUMBER LOCATOR - SMF62VCT
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF62DSD    '

         DC    CL12'SMF62DSD    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(118)                LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 64 STRUCTURE
*
*  THE BASE/HEADER SECTION IS FOLLOWED BY AN EXTENT TABLE PER
*  VOLUME, WHICH IS FOLLOWED BY A STATISTICS SECTION.

         DC    CL12'SMFRCD64    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(140)                LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF64FEX    '

         DC    CL12'SMF64FEX    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1($D2CALC#)           FLAG BYTE 2 -> NUMBER LOCATOR
         DC    AL2(140)                OFFSET LOCATOR
         DC    AL2(138)                LENGTH LOCATOR - SMF64ESL
         DC    AL2(26)                 NUMBER LOCATOR - SECTION SIZE
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF64STS    '

         DC    CL12'SMF64STS    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(320)                LENGTH LOCATOR
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1($CRNT)              OFFSET ICM MASK
         DC    AL1(0)                  LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD

         EJECT
*  SMF 89 STRUCTURE
*
*  THE TYPE 89 USES TRIPLETS LIKE TYPE 30 AND RMF RECORDS, BUT
*  UNLIKE TYPE 30 THE SAME TRIPLET POINTS TO DIFFERENT SECTIONS
*  DEPENDING ON THE SUBTYPE, AND UNLIKE RMF RECORDS THERE IS NO
*  WAY OF EXTRACTING A STRUCTURE ASSEMBLEY OF EACH SUBTYPE.
*  CONSEQUENTLY, EACH SECTION WILL BE DEFINED HERE ONCE WITH
*  THE LAST COMMON SECTION POINTING TO A SECTION FILTER.
*
*  THE PRODUCT SECTION IS EXPECTED TO ALWAYS BE THE FIRST SECTION
*  FOLLOWING THE HEADER AND SELF-DEFINING SECTIONS, SO THE OFFSET
*  OF THE PRODUCT SECTION IS USED TO DEFINE THE LENGTH OF THE
*  BASE SECTION, MEANING IT WILL SELF-ADJUST IF MORE TRIPLETS
*  OR OTHER ITEMS ARE ADDED TO THE BASE SECTION.

         DC    CL12'SMFRCD89    '
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(0)                  OFFSET LOCATOR
         DC    AL2(28)                 LENGTH LOCATOR - SMF89PRO
         DC    AL2(1)                  NUMBER LOCATOR
         DC    AL1(0)                  OFFSET ICM MASK
         DC    AL1(15)                 LENGTH ICM MASK
         DC    AL1(0)                  NUMBER ICM MASK
         DC    AL1(0)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF89PR     '

         DC    CL12'SMF89PR     '      PRODUCT SECTION
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(28)                 OFFSET LOCATOR - SMF89PRO
         DC    AL2(32)                 LENGTH LOCATOR - SMF89PRL
         DC    AL2(34)                 NUMBER LOCATOR - SMF89PRN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF89SI     '

         DC    CL12'SMF89SI     '      SYSTEM ID SECTION
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(36)                 OFFSET LOCATOR - SMF89SIO
         DC    AL2(40)                 LENGTH LOCATOR - SMF89SIL
         DC    AL2(42)                 NUMBER LOCATOR - SMF89SIN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SUB_T89     '

T89_SUB1 DC    CL12'SMF89UD     '      USAGE DATA SECTION
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(44)                 OFFSET LOCATOR - SMF89UDO
         DC    AL2(48)                 LENGTH LOCATOR - SMF89UDL
         DC    AL2(50)                 NUMBER LOCATOR - SMF89UDN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF89CN     '

         DC    CL12'SMF89CN     '      PRODUCT INTERSECTION DATA
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(56)                 OFFSET LOCATOR - SMF89CNO
         DC    AL2(60)                 LENGTH LOCATOR - SMF89CNL
         DC    AL2(62)                 NUMBER LOCATOR - SMF89CNN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF89TRG    '

         DC    CL12'SMF89TRG    '      TENANT RESOURCE GROUPS DATA
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(64)                 OFFSET LOCATOR - SMF89TRO
         DC    AL2(68)                 LENGTH LOCATOR - SMF89TRL
         DC    AL2(70)                 NUMBER LOCATOR - SMF89TRN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF89TC     '

         DC    CL12'SMF89TC     '      PRODUCT INTERSECTION TIME TRG
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(72)                 OFFSET LOCATOR - SMF89TCO
         DC    AL2(76)                 LENGTH LOCATOR - SMF89TCL
         DC    AL2(78)                 NUMBER LOCATOR - SMF89TCN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD (89.1)

         DC    CL12'SMF89T2     '      PRODUCT ENABLE/DISABLE SECTION
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(44)                 OFFSET LOCATOR - SMF89UDO
         DC    AL2(48)                 LENGTH LOCATOR - SMF89UDL
         DC    AL2(50)                 NUMBER LOCATOR - SMF89UDN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'SMF89T2TRG  '

         DC    CL12'SMF89T2TRG  '      PRODUCT ENABLE/DISABLE TRG
         DC    AL1(0)                  FLAG BYTE 1
         DC    AL1(0)                  FLAG BYTE 2
         DC    AL2(64)                 OFFSET LOCATOR - SMF89TRO
         DC    AL2(68)                 LENGTH LOCATOR - SMF89TRL
         DC    AL2(70)                 NUMBER LOCATOR - SMF89TRN
         DC    AL1(15)                 OFFSET ICM MASK
         DC    AL1(3)                  LENGTH ICM MASK
         DC    AL1(3)                  NUMBER ICM MASK
         DC    AL1(1)                  STRUCTURE HIERARCHY LEVEL
         DC    CL12'            '      LAST SECTION OF RECORD (89.2)


         DC    F'-1'                   END OF TABLE



*   WHEN DESIGNING RECORD SUBTYPE MANAGEMENT AND RECORD SECTION
*   MANAGEMENT, IT WAS CONSIDERED "OLD" RECORDS WOULD BE EASY
*   WHILE "NEW" RECORDS SUCH AS TYPE 30 AND RMF RECORDS WOULD
*   BE A BIT TRICKY.  IT TURNS OUT THAT TYPE 30 AND RMF RECORDS
*   ARE ACTUALLY "WELL BEHAVED" WHEN COMPARED TO AD HOC EXTENSIONS
*   BOLTED ON TO "OLD" RECORDS.
*
*   THE 'SECNAMES' TABLE IS USED TO ENABLE THE VARIOUS SECTIONS
*   OF RECORDS TO BE NAVIGATED WHEN EACH RECORD OF THE RELEVANT
*   TYPE (AND SUBTYPE) IS PROCESSED.  HOWEVER, FOR RECORDS WHICH
*   ARE LESS "WELL BEHAVED", THE 'SECTSPEC' TABLE ABOVE IS USED
*   BECAUSE IT SUPPLIES THE ALL THE 'RECSECT' INFORMATION AND NOT
*   JUST THE CLUES TO BUILD A 'RECSECT' ENTRY AS 'SECNAMES' DOES.
*
*   IF ALL THE 'SECNAMES' ENTRIES WERE CONVERTED TO 'SECTSPEC'
*   ENTRIES, A WHOLE LOT OF LOGIC COULD BE DELETED FROM THE
*   'SECTOPTS' ROUTINE, AND THE 2 SECTION FLAG BYTES COULD BE
*   DISPENSED WITH ALTOGETHER.  THE FLAG BYTES ARE USED BY
*   'SECTOPTS' TO WORK OUT THE MISSING INFORMATION FOR THE
*   'RECSECT' MACRO INPUT, AND ARE NOT NEEDED BY 'REVIEW'
*   LOGIC WHEN DISPLAYING THE RECORD CONTENTS.  UNFORTUNATELY,
*   'SECNAMES' WAS CODED BEFORE 'SECTSPEC' WAS DEVISED.
*
*   ACTUALLY, SOME SECTION FLAGS ARE STILL USED FOR 'SECTSPEC'
*   ENTRIES.  'SECTSPEC' IS INSPECTED FIRST AND SO IT OVERRIDES
*   MATCHING ENTRIES IN 'SECNAMES' SUCH AS 'SMF42HDR5'.


*   SECNAMES FLAG BYTE BIT ASSIGNMENTS:
*          1... ....  - LAST SECTION ENTRY FOR RECORD
*          .1.. ....  - INSTANCES OF THIS SECTION ARE CHAINED
*          ..1. ....  - ACTUAL SECTION LENGTH BYTE COUNT FOLLOWS
*          ...1 ....  - OFFSET BASED ON INDEX SECTION, NOT RECORD
*          .... 1...  - TRIPLET ORDER IS OFFSET, COUNT, LENGTH
*          .... .1..  - SECTION OFFSET IS 4 BYTES IN SIZE
*          .... ..1.  - 2-BYTE SECTION LENGTH FOLLOWS 4-BYTE OFFSET
*          .... ...1  - 2-BYTE SECTION COUNT FOLLOWS 2-BYTE LENGTH
*          .... 01.0  - NON-ZERO OFFSET INDICATES SECTION EXISTENCE
*
*   THE NEXT BYTE CONTAINS THE LEVEL OF THIS SECTION, WHICH IS THE
*   LEVEL OF THE SECTION WHICH CONTAINS THIS SECTION'S DESCRIPTOR
*   INCREMENTED BY ONE.  IF A SECTION IS NOT PRESENT, THE NEXT
*   SECTION TO LOOK AT IS THE NEXT SECTION AT THE SAME (OR LOWER)
*   LEVEL OF THE ABSENT SECTION.
*
*   A COUNT BACK VALUE OF ZERO MEANS THAT THE 2-BYTE OFFSET IS AT
*   THE RECORD OFFSET CONTAINED IN THE LAST 2 BYTES OF THE ENTRY.
*   IF THE LAST 2 ENTRY BYTES ARE ALSO ZERO, THE RDW IS INDICATED.
*
*   LAST 2 BYTES OF ENTRY ARE SECTION OFFSET OF 2-BYTE LENGTH
*   - ZERO ENTRY => LENGTH IN FIRST 2 BYTES OF RDW
*   - TRIPLET TYPE => OFFSET REFERS TO BASE SECTION
SECNAMES DC    0F
$SECNMLN EQU   18             OFFSET,LENGTH
*  =  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 30 - ALL SUBTYPES
 DC CL12'SMFRCD30    ',X'0000',Y(000,026)  SMF30SOF+2
 DC CL12'SMF30PSS    ',X'0701',Y(000,024)  SMF30SOF SUBSYS
 DC CL12'SMF30ID     ',X'0701',Y(000,032)  SMF30IOF ID
 DC CL12'SMF30URA    ',X'0701',Y(000,040)  SMF30UOF I/O ACTIVITY
 DC CL12'SMF30CMP    ',X'0701',Y(000,048)  SMF30TOF COMPLETION
 DC CL12'SMF30CAS    ',X'0701',Y(000,056)  SMF30COF CPU ACCOUNTING
 DC CL12'SMF30SAP    ',X'0701',Y(000,072)  SMF30ROF STORAGE
 DC CL12'SMF30PRF    ',X'0701',Y(000,080)  SMF30POF PERFORMANCE
 DC CL12'SMF30OPS    ',X'0701',Y(000,088)  SMF30OOF OPERATOR
LBL30ACS EQU   *
 DC CL12'SMF30ACS    ',X'0701',Y(000,064)  SMF30AOF ACCOUNTING
 DC CL12'SMF30EXP    ',X'0701',Y(000,096)  SMF30EOF EXCP
 DC CL12'SMF30AR     ',X'0701',Y(000,120)  SMF30ARO APPC/MVS CUM
 DC CL12'SMF30DR     ',X'0701',Y(000,112)  SMF30DRO APPC/MVS
 DC CL12'SMF30OP     ',X'0701',Y(000,128)  SMF30OPO OMVS PROCESS
 DC CL12'SMF30RM     ',X'0701',Y(000,152)  SMF30RMO AUTO RESTART
 DC CL12'SMF30UD     ',X'0701',Y(000,140)  SMF30UDO PRODUCT USAGE
 DC CL12'SMF30MSE    ',X'0701',Y(000,164)  SMF30MOF MULTISYS ENCLAVE
 DC CL12'SMF30CDS    ',X'0701',Y(000,176)  SMF30CDO COUNTER
 DC CL12'SMF30USS    ',X'8701',Y(000,184)  SMF30USO ZEDC USAGE
*  =  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 41 - ALL SUBTYPES
 DC CL12'SMFRCD41    ',X'0000',Y(000,030)  SMF41OPD+2
 DC CL12'SMF41PS     ',X'0701',Y(000,028)  SMF41OPD PRODUCT
 DC CL12'SMF41ADS    ',X'0701',Y(000,036)  SMF41OD1 OBJECT ACCESS
 DC CL12'SMF41UDS    ',X'0701',Y(000,044)  SMF41OD2 OBJECT UNACCESS
 DC CL12'SMF41IOS    ',X'0701',Y(000,052)  SMF41OD3 OBJECT I/O ACTIVITY
 DC CL12'SMF41VLF    ',X'0701',Y(000,060)  SMF41OD4 VLF STATISTICS
*  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 42 - SUBTYPE 1
 DC CL12'SMF42HDR1   ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42S1     ',X'2000',Y(036,016)  16 BYTES BMF STATS
 DC CL12'SMF42PRD1   ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF4201A    ',X'0701',Y(000,036)  SMF42BMO BMF TOTALS
 DC CL12'SMF4201B    ',X'8701',Y(000,044)  SMF42SCO STORCLAS SMRY
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 2
 DC CL12'SMF42HDR2   ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42S2     ',X'2000',Y(036,016)  16 BYTES CACHE SMRY
 DC CL12'SMF42PRD2   ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF4202A    ',X'0701',Y(000,036)  SMF42CUO CU CACHE
 DC CL12'SMF4202B    ',X'8701',Y(000,044)  SMF42VLO VOLUME
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 3
 DC CL12'SMF42HDR3   ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42S3     ',X'2000',Y(036,008)  08 BYTES CONFIG. AUDIT
 DC CL12'SMF42PRD3   ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF4203A    ',X'8701',Y(000,036)  SMF42EAO EVENT AUDIT
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 4
 DC CL12'SMF42HDR4   ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42S4     ',X'2000',Y(036,024)  24 BYTES DATA MOVER
 DC CL12'SMF42PRD4   ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF4204C    ',X'0701',Y(000,036)  SMF42CCO CC STATS
 DC CL12'S42CSIDH    ',X'1F02',Y(000,048)  S42CCSSO CC SSID HDR
 DC CL12'S42CVL      ',X'1F03',Y(000,012)  S42CSVLO CC VOLUME
 DC CL12'SMF4204E    ',X'0701',Y(000,044)  SMF42EXO VOLUME
 DC CL12'SMF4204V    ',X'0701',Y(000,052)  SMF42VCO EAV/VCC STATS
 DC CL12'S42VSIDH    ',X'1F02',Y(000,072)  S42VCSSO SSID HEADER
 DC CL12'S42VVL      ',X'1F03',Y(000,020)  S42VSVLO EAV CC VOLUME
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 5
 DC CL12'SMF42HDR5   ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42S5     ',X'2000',Y(036,016)  16 BYTES STOCLS RSP TM
 DC CL12'SMF42PRD5   ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF4205A    ',X'0701',Y(000,036)  SMF42SRO S.C. RESP TIME
 DC CL12'SMF4205B    ',X'0701',Y(000,044)  SMF42VHO VOLUME HEADER
 DC CL12'SMF4205C    ',X'1602',Y(000,024)  S42VTVDO VTOC DATA
 DC CL12'SMF4205D    ',X'1602',Y(000,032)  S42VTVXO VTOC INDEX
 DC CL12'SMF4205E    ',X'1602',Y(000,040)  S42VTVVO VVDS
 DC CL12'SMF4205F    ',X'1702',Y(000,048)  S42VTMCO VOLUME METRICS
 DC CL12'SMF4205H    ',X'1702',Y(000,056)  S42VTSYO SYSTEM I/O
 DC CL12'SMF4205I    ',X'1703',Y(000,000)  S42VSYO1 SYSTEM I/O
 DC CL12'SMF4205J    ',X'1703',Y(000,008)  S42VSYO2 SYS I/O HI RESP
 DC CL12'SMF4205O    ',X'0701',Y(000,064)  S42VTBGO VOLUME BKGND
 DC CL12'SMF4205P    ',X'0701',Y(000,000)  S42VBGO1 BKGD STATS ACT
 DC CL12'S42SNIO5    ',X'9603',Y(000,140)  S42SCSNO SYNC I/O
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 6
 DC CL12'SMF42HDR6   ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42S6     ',X'2000',Y(036,008)  08 BYTES JOB/DSET STATS
 DC CL12'SMF42PRD6   ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF4206A    ',X'0701',Y(000,036)  SMF42JHO JOB HEADER
 DC CL12'S42DSH      ',X'5602',Y(000,024)  S42JDDSO DATA SET HEADER
 DC CL12'S42DSIO     ',X'1403',Y(000,052)  S42DSIOO DATA SET I/O
 DC CL12'S42DSAM     ',X'1403',Y(000,056)  S42DSAMO ACCESS METHOD
 DC CL12'S42SNIO6    ',X'1603',Y(000,088)  S42DSSNO SYNC I/O
 DC CL12'S42SNTW     ',X'1603',Y(000,096)  S42DSS2O SYNC I/O 2
 DC CL12'S42SNDW     ',X'1603',Y(000,104)  S42DSS3O SYNC I/O 3
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 20
 DC CL12'SMF42HDR20  ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42SK     ',X'2000',Y(036,016)  16 BYTES STOW INITIALIZE
 DC CL12'SMF42PRD20  ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF420KA    ',X'0701',Y(000,036)  SMF42KN1 JOB/DSET INFO
*DC CL12'SMF420KB    ',X'8701',Y(000,044)  SMF42KN4 ADDITIONAL INFO
 DC CL12'TKN_4220    ',X'8701',Y(000,044)  SMF42KN4 ADDITIONAL INFO
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 21
 DC CL12'SMF42HDR21  ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42SL     ',X'2000',Y(036,024)  24 BYTES MEMBER DELETE
 DC CL12'SMF42PRD21  ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF420LA    ',X'0701',Y(000,036)  SMF42LN1 JOB/DSET INFO
 DC CL12'SMF420LB    ',X'0701',Y(000,044)  SMF42LN4 ALIAS NAMES
*DC CL12'SMF420LC    ',X'8701',Y(000,052)  SMF42LN7 ADDITIONAL INFO
 DC CL12'TKN_4221    ',X'8701',Y(000,052)  SMF42LN7 ADDITIONAL INFO
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 22
 DC CL12'SMF42HDR22  ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42SM     ',X'2000',Y(036,016)  16 BYTES RMM AUDIT
 DC CL12'SMF42PRD22  ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF420MA    ',X'8701',Y(000,036)  SMF4222AUD
*DC CL12'???         ',X'8701',Y(000,044)  SMF4222REC
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 23
 DC CL12'SMF42HDR23  ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42SN     ',X'2000',Y(036,008)  08 BYTES RMM SECURITY
 DC CL12'SMF42PRD23  ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF420NA    ',X'8701',Y(000,036)  SMF4223SEC
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 24
 DC CL12'SMF42HDR24  ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42SP     ',X'2000',Y(036,024)  24 BYTES MEMBER REPLACE
 DC CL12'SMF42PRD24  ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF421PA    ',X'0701',Y(000,036)  SMF42PN1 JOB/DSET INFO
 DC CL12'SMF42PA0    ',X'0701',Y(000,044)  SMF42PN4 ALIAS NAMES
*DC CL12'SMF420PC    ',X'8701',Y(000,052)  SMF42PN7 ADDITIONAL INFO
 DC CL12'TKN_4224    ',X'8701',Y(000,052)  SMF42PN7 ADDITIONAL INFO
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 25
 DC CL12'SMF42HDR25  ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42SQ     ',X'2000',Y(036,024)  24 BYTES MEMBER RENAME
 DC CL12'SMF42PRD25  ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF420QA    ',X'0701',Y(000,036)  SMF42QN1 JOB/DSET INFO
 DC CL12'SMF420QB    ',X'0701',Y(000,044)  SMF42QN4 OLD MEMBER NAME
*DC CL12'SMF420QC    ',X'8701',Y(000,052)  SMF42QN7 ADDITIONAL INFO
 DC CL12'TKN_4225    ',X'8701',Y(000,052)  SMF42QN7 ADDITIONAL INFO
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 42 - SUBTYPE 27
 DC CL12'SMF42HDR27  ',X'2000',Y(000,036)  36 BYTES
 DC CL12'SMF42S27    ',X'2000',Y(036,024)  24 BYTES VTOC AUDIT
 DC CL12'SMF42PRD27  ',X'0701',Y(000,028)  SMF42OPS PRODUCT
 DC CL12'SMF420RA    ',X'0701',Y(000,036)  SMF4227R1 AUDIT DATA
 DC CL12'S420RB_N    ',X'0701',Y(000,044)  SMF4227R4 OLD DSCB
 DC CL12'S420RB_O    ',X'8701',Y(000,052)  SMF4227R7 NEW DSCB
*  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 70 - SUBTYPE 1
 DC CL12'SMF70HDR1   ',X'0000',Y(000,030)  SMF70PRS+2
 DC CL12'SMF70PRO1   ',X'0701',Y(000,028)  SMF70PRS PRODUCT
 DC CL12'SMF70RHD1   ',X'1702',Y(000,068)  SMF70RAO REASSEMBLY HDR
 DC CL12'SMF70RBL1   ',X'1703',Y(000,004)  SMF70RIO REASSEMBLY INFO
 DC CL12'SMF70CTL    ',X'0701',Y(000,036)  SMF70CCS CPU CONTROL
 DC CL12'SMF70CPU    ',X'0701',Y(000,044)  SMF70CPS CPU DATA
 DC CL12'SMF70AID    ',X'0701',Y(000,052)  SMF70ASS ASID DATA
 DC CL12'SMF70BCT    ',X'0701',Y(000,060)  SMF70BCS PR/SM PARTITION
 DC CL12'SMF70BPD    ',X'0701',Y(000,068)  SMF70BVS PR/SM PROCESSOR
 DC CL12'SMF70CIS    ',X'0701',Y(000,076)  SMF70CNS CPU-ID NAME
 DC CL12'SMF70LCS    ',X'0701',Y(000,084)  SMF70COS LOGICAL CORE
 DC CL12'SMF70TNT    ',X'8701',Y(000,092)  SMF70TNS TENANT RESOURCE
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 70 - SUBTYPE 2
 DC CL12'SMF70HDR2   ',X'0000',Y(000,030)  SMF70PRS+2
 DC CL12'SMF70PRO2   ',X'0701',Y(000,028)  SMF70PRS PRODUCT
 DC CL12'SMF70RHD2   ',X'1702',Y(000,068)  SMF70RAO REASSEMBLY HDR
 DC CL12'SMF70RBL2   ',X'1703',Y(000,004)  SMF70RIO REASSEMBLY INFO
 DC CL12'R702TYP3    ',X'0701',Y(000,036)  SMF7023S CCA COPROCESSOR
 DC CL12'R702TYP4    ',X'0701',Y(000,044)  SMF7024S ACCELERATOR
 DC CL12'R702CCF     ',X'0701',Y(000,052)  SMF702CS ICSF
 DC CL12'R702TYP5    ',X'8701',Y(000,060)  SMF7025S PKCS11 COPROC.
*  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 71 - SUBTYPE 1
 DC CL12'SMF71HDR1   ',X'0000',Y(000,030)  SMF71PRS+2
 DC CL12'SMF71PRO    ',X'0701',Y(000,028)  SMF71PRS PRODUCT
 DC CL12'SMF71RHD    ',X'1702',Y(000,068)  SMF71RAO REASSEMBLY HDR
 DC CL12'SMF71RBL    ',X'1703',Y(000,004)  SMF71RIO REASSEMBLY INFO
 DC CL12'SMF71PAG    ',X'0701',Y(000,036)  SMF71PDS PAGING DATA
 DC CL12'SMF71SWP    ',X'8701',Y(000,044)  SMF71SWS SWAP PLACEMENT
*  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 72 - SUBTYPE 1
 DC CL12'SMF72HDR1   ',X'0000',Y(000,030)  SMF72PRS+2
 DC CL12'SMF72PRO1   ',X'0701',Y(000,028)  SMF72PRS PRODUCT
 DC CL12'SMF72RHD1   ',X'1702',Y(000,068)  SMF72RAO REASSEMBLY HDR
 DC CL12'SMF72RBL1   ',X'1703',Y(000,004)  SMF72RIO REASSEMBLY INFO
 DC CL12'SMF72CTL    ',X'0701',Y(000,036)  SMF72WLS WRKLD CONTROL
 DC CL12'SMF72WKL    ',X'8701',Y(000,044)  SMF72PGS PERF GRP PERIOD
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 72 - SUBTYPE 2
 DC CL12'SMF72HDR2   ',X'0000',Y(000,030)  SMF72PRS+2
 DC CL12'SMF72PRO2   ',X'0701',Y(000,028)  SMF72PRS PRODUCT
 DC CL12'SMF72RHD2   ',X'1702',Y(000,068)  SMF72RAO REASSEMBLY HDR
 DC CL12'SMF72RBL2   ',X'1703',Y(000,004)  SMF72RIO REASSEMBLY INFO
 DC CL12'R722WKL     ',X'0701',Y(000,036)  SMF72WLS WRKLD CONTROL
 DC CL12'R722DATA    ',X'0701',Y(000,044)  SMF72PGS WORKLD DATA
 DC CL12'R722SWRE    ',X'8701',Y(000,052)  SMF70SWS SWAP REASONS
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 72 - SUBTYPE 3
 DC CL12'SMF72HDR3   ',X'0000',Y(000,030)  SMF72PRS+2
 DC CL12'SMF72PRO3   ',X'0701',Y(000,028)  SMF72PRS PRODUCT
 DC CL12'SMF72RHD3   ',X'1702',Y(000,068)  SMF72RAO REASSEMBLY HDR
 DC CL12'SMF72RBL3   ',X'1703',Y(000,004)  SMF72RIO REASSEMBLY INFO
 DC CL12'R723WMS     ',X'0701',Y(000,036)  SMF72WMS WRKLD CONTROL
 DC CL12'R723SSS     ',X'0701',Y(000,044)  SMF72SSS SERVICE CLASSES
 DC CL12'R723RGS     ',X'0701',Y(000,052)  SMF72RGS RESOURCE GROUPS
 DC CL12'R723SCS     ',X'0701',Y(000,060)  SMF72SCS PERIOD DATA
 DC CL12'R723RTS     ',X'0701',Y(000,068)  SMF72RTS RESPONSE TIME
 DC CL12'R723WRS     ',X'0701',Y(000,076)  SMF72WRS WORK/RESOURCE
 DC CL12'R723DNS     ',X'8701',Y(000,084)  SMF72DNS RESPONSE DELAY
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 72 - SUBTYPE 4
 DC CL12'SMF72HDR4   ',X'0000',Y(000,030)  SMF72PRS+2
 DC CL12'SMF72PRO4   ',X'0701',Y(000,028)  SMF72PRS PRODUCT
 DC CL12'SMF72RHD4   ',X'1702',Y(000,068)  SMF72RAO REASSEMBLY HDR
 DC CL12'SMF72RBL4   ',X'1703',Y(000,004)  SMF72RIO REASSEMBLY INFO
 DC CL12'R724DATA    ',X'0701',Y(000,036)  SMF72WMS WRKLD CONTROL
 DC CL12'R724SWRE    ',X'8701',Y(000,044)  SMF72SSS SERVICE CLASSES
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 72 - SUBTYPE 5
 DC CL12'SMF72HDR5   ',X'0000',Y(000,030)  SMF72PRS+2
 DC CL12'SMF72PRO5   ',X'0701',Y(000,028)  SMF72PRS PRODUCT
 DC CL12'SMF72RHD5   ',X'1702',Y(000,068)  SMF72RAO REASSEMBLY HDR
 DC CL12'SMF72RBL5   ',X'1703',Y(000,004)  SMF72RIO REASSEMBLY INFO
 DC CL12'R725SCTL    ',X'0701',Y(000,036)  SMF72SES SERIALIZATION
 DC CL12'R725CMSD    ',X'0701',Y(000,044)  SMF72CMS CMS LOCK DATA
 DC CL12'R725CMSD    ',X'0701',Y(000,052)  SMF72EDS CMS ENQ/DEQ
 DC CL12'R725CMSD    ',X'0701',Y(000,060)  SMF72LAS CMS LATCH LOCK
 DC CL12'R725CMSD    ',X'0701',Y(000,068)  SMF72SMS CMS SMF LOCK
 DC CL12'R725LOTD    ',X'0701',Y(000,076)  SMF72LOS LOCAL LOCK DATA
 DC CL12'R725CLOD    ',X'0701',Y(000,084)  SMF72COS CML LOCK OWNER
 DC CL12'R725CLRD    ',X'0701',Y(000,092)  SMF72CRS CML LOCK REQSTR
 DC CL12'R725LATD    ',X'0701',Y(000,100)  SMF72LCS GRS LATCH SET
 DC CL12'R725LATD    ',X'0701',Y(000,108)  SMF72LRS GRS LATCH REQST
 DC CL12'R725ENTD    ',X'0701',Y(000,116)  SMF72TDS GRS ENQ STEP
 DC CL12'R725ENTD    ',X'0701',Y(000,124)  SMF72YDS GRS ENQ SYSTEM
 DC CL12'R725ENTD    ',X'0701',Y(000,132)  SMF72SDS GRS ENQ SYSTEMS
 DC CL12'R725QSAD    ',X'8701',Y(000,140)  SMF72QSS GRS QSCAN DATA
*  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 73 - SUBTYPE 1
 DC CL12'SMF73HDR1   ',X'0000',Y(000,030)  SMF73PRS+2
 DC CL12'SMF73PRO    ',X'0701',Y(000,028)  SMF73PRS PRODUCT
 DC CL12'SMF73RHD    ',X'1702',Y(000,068)  SMF73RAO REASSEMBLY HDR
 DC CL12'SMF73RBL    ',X'1703',Y(000,004)  SMF73RIO REASSEMBLY INFO
 DC CL12'SMF73CTL    ',X'0701',Y(000,036)  SMF73HIS CHANNEL CONTROL
 DC CL12'SMF73CHA    ',X'0701',Y(000,044)  SMF73HPS CHANNEL DATA
 DC CL12'SMF73ECD    ',X'8701',Y(000,052)  SMF73HES EXTENDED DATA
*  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 74 - SUBTYPE 1
 DC CL12'SMF74HDR1   ',X'0000',Y(000,030)  SMF74PRS+2
 DC CL12'SMF74PRO1   ',X'0701',Y(000,028)  SMF74PRS PRODUCT
 DC CL12'SMF74RHD1   ',X'1702',Y(000,068)  SMF74RAO REASSEMBLY HDR
 DC CL12'SMF74RBL1   ',X'1703',Y(000,004)  SMF74RIO REASSEMBLY INFO
 DC CL12'SMF74A      ',X'0701',Y(000,036)  SMF74DCS DEVICE CONTROL
 DC CL12'SMF74B      ',X'8701',Y(000,044)  SMF74DDS DEVICE DATA
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 74 - SUBTYPE 2
 DC CL12'SMF74HDR2   ',X'0000',Y(000,030)  SMF74PRS+2
 DC CL12'SMF74PRO2   ',X'0701',Y(000,028)  SMF74PRS PRODUCT
 DC CL12'SMF74RHD2   ',X'1702',Y(000,068)  SMF74RAO REASSEMBLY HDR
 DC CL12'SMF74RBL2   ',X'1703',Y(000,004)  SMF74RIO REASSEMBLY INFO
 DC CL12'R742CNTL    ',X'0701',Y(000,036)  SMF742CO CONTROL DATA
 DC CL12'R742SYS     ',X'0701',Y(000,044)  SMF742SO SYSTEM DATA
 DC CL12'R742PTH     ',X'0701',Y(000,036)  SMF742PO PATH DATA
 DC CL12'R742MBR     ',X'8701',Y(000,044)  SMF742MO MEMBER DATA
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 74 - SUBTYPE 3
 DC CL12'SMF74HDR3   ',X'0000',Y(000,030)  SMF74PRS+2
 DC CL12'SMF74PRO3   ',X'0701',Y(000,028)  SMF74PRS PRODUCT
 DC CL12'SMF74RHD3   ',X'1702',Y(000,068)  SMF74RAO REASSEMBLY HDR
 DC CL12'SMF74RBL3   ',X'1703',Y(000,004)  SMF74RIO REASSEMBLY INFO
 DC CL12'R743DATA    ',X'8701',Y(000,036)  SMF743PO DATA
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 74 - SUBTYPE 4
 DC CL12'SMF74HDR4   ',X'0000',Y(000,030)  SMF74PRS+2
 DC CL12'SMF74PRO4   ',X'0701',Y(000,028)  SMF74PRS PRODUCT
 DC CL12'SMF74RHD4   ',X'1702',Y(000,068)  SMF74RAO REASSEMBLY HDR
 DC CL12'SMF74RBL4   ',X'1703',Y(000,004)  SMF74RIO REASSEMBLY INFO
 DC CL12'R744FLCF    ',X'0701',Y(000,036)  SMF744FO LOCAL CF DATA
 DC CL12'R744XCON    ',X'0701',Y(000,044)  SMF744XO CONN. CF DATA
 DC CL12'R744GSRG    ',X'0701',Y(000,052)  SMF744GO STOR. CF DATA
 DC CL12'R744QSDS    ',X'0701',Y(000,060)  SMF744QO STRUCT. CF DATA
 DC CL12'R744SREQ    ',X'0701',Y(000,068)  SMF744SO REQUEST CF DATA
 DC CL12'R744PROC    ',X'0701',Y(000,076)  SMF744PO PROCES. CF DATA
 DC CL12'R744CACH    ',X'0701',Y(000,084)  SMF744CO CF CACHE DATA
 DC CL12'R744CFRF    ',X'0701',Y(000,092)  SMF744RO CF REMOTE FACIL
 DC CL12'R744CHPA    ',X'0701',Y(000,100)  SMF744HO CF CHPID DATA
 DC CL12'R744MSCM    ',X'0701',Y(000,108)  SMF744MO CF SCM DATA
 DC CL12'R744ADUP    ',X'8701',Y(000,116)  SMF744AO ASYNC CF DUPLEX
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 74 - SUBTYPE 5
 DC CL12'SMF74HDR5   ',X'0000',Y(000,030)  SMF74PRS+2
 DC CL12'SMF74PRO5   ',X'0701',Y(000,028)  SMF74PRS PRODUCT
 DC CL12'SMF74RHD5   ',X'1702',Y(000,068)  SMF74RAO REASSEMBLY HDR
 DC CL12'SMF74RBL5   ',X'1703',Y(000,004)  SMF74RIO REASSEMBLY INFO
 DC CL12'R745CNTL    ',X'0701',Y(000,036)  SMF745CO CONTROL DATA
 DC CL12'R745DEV     ',X'0701',Y(000,044)  SMF745DO CACHE DEV DATA
 DC CL12'R745XDEV    ',X'0701',Y(000,052)  SMF745XO CACHE DEV EXTN
 DC CL12'R7451DEV    ',X'0701',Y(000,060)  SMF745SO CACHE STAT. DATA
 DC CL12'R745STAT    ',X'8701',Y(000,068)  SMF7451O RAID RANK DATA
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 74 - SUBTYPE 6
 DC CL12'SMF74HDR6   ',X'0000',Y(000,030)  SMF74PRS+2
 DC CL12'SMF74PRO6   ',X'0701',Y(000,028)  SMF74PRS PRODUCT
 DC CL12'SMF74RHD6   ',X'1702',Y(000,068)  SMF74RAO REASSEMBLY HDR
 DC CL12'SMF74RBL6   ',X'1703',Y(000,004)  SMF74RIO REASSEMBLY INFO
 DC CL12'R746GDAT    ',X'0701',Y(000,036)  SMF746DO GLOBAL DATA
 DC CL12'R746GBUF    ',X'0701',Y(000,044)  SMF746BO GLOBAL BUFFER
 DC CL12'R746FSYS    ',X'8701',Y(000,052)  SMF746FO FILE SYSTEM
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 74 - SUBTYPE 7
 DC CL12'SMF74HDR7   ',X'0000',Y(000,030)  SMF74PRS+2
 DC CL12'SMF74PRO7   ',X'0701',Y(000,028)  SMF74PRS PRODUCT
 DC CL12'SMF74RHD7   ',X'1702',Y(000,068)  SMF74RAO REASSEMBLY HDR
 DC CL12'SMF74RBL7   ',X'1703',Y(000,004)  SMF74RIO REASSEMBLY INFO
 DC CL12'R747GDAT    ',X'0701',Y(000,036)  SMF747GO GLOBAL DATA
 DC CL12'R747SDAT    ',X'0701',Y(000,044)  SMF747SO SWITCH DATA
 DC CL12'R747PDAT    ',X'0701',Y(000,052)  SMF747PO PORT DATA
 DC CL12'R747CDAT    ',X'8701',Y(000,060)  SMF747CO CONNECTOR DATA
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 74 - SUBTYPE 8
 DC CL12'SMF74HDR8   ',X'0000',Y(000,030)  SMF74PRS+2
 DC CL12'SMF74PRO8   ',X'0701',Y(000,028)  SMF74PRS PRODUCT
 DC CL12'SMF74RHD8   ',X'1702',Y(000,068)  SMF74RAO REASSEMBLY HDR
 DC CL12'SMF74RBL8   ',X'1703',Y(000,004)  SMF74RIO REASSEMBLY INFO
 DC CL12'R748CNTL    ',X'0701',Y(000,036)  SMF748CO LINK STATS CNTL
 DC CL12'R748LSS     ',X'0701',Y(000,044)  SMF748LO LINK STATS DATA
 DC CL12'R748EXTP    ',X'0701',Y(000,052)  SMF748XO EXTENT POOL DATA
 DC CL12'R748RANK    ',X'0701',Y(000,060)  SMF748RO RANK STATS DATA
 DC CL12'R748RANK    ',X'0701',Y(000,068)  SMF748AO RANK ARRAY DATA
 DC CL12'R748SIOL    ',X'8701',Y(000,076)  SMF748SO SYNC I/O LINK
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 74 - SUBTYPE 9
 DC CL12'SMF74HDR9   ',X'0000',Y(000,030)  SMF74PRS+2
 DC CL12'SMF74PRO9   ',X'0701',Y(000,028)  SMF74PRS PRODUCT
 DC CL12'SMF74RHD9   ',X'1702',Y(000,068)  SMF74RAO REASSEMBLY HDR
 DC CL12'SMF74RBL9   ',X'1703',Y(000,004)  SMF74RIO REASSEMBLY INFO
 DC CL12'R749PF      ',X'0701',Y(000,036)  SMF749PO PCIE FUNC. DATA
 DC CL12'R749DMA     ',X'0701',Y(000,044)  SMF749DO PCIE FUNC. TYPE
 DC CL12'R749HWA     ',X'0701',Y(000,052)  SMF749FO HW ACCELERATOR
 DC CL12'R749HWA1    ',X'0701',Y(000,060)  SMF7491O HWA COMPRESSION
 DC CL12'R749SYNC    ',X'0701',Y(000,068)  SMF749SO SYNCH I/O LINK
 DC CL12'R749SRTD    ',X'8701',Y(000,076)  SMF749RO SYNCH I/O RTD
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 74 - SUBTYPE 10
 DC CL12'SMF74HDR10  ',X'0000',Y(000,030)  SMF74PRS+2
 DC CL12'SMF74PRO10  ',X'0701',Y(000,028)  SMF74PRS PRODUCT
 DC CL12'SMF74RHD10  ',X'1702',Y(000,068)  SMF74RAO REASSEMBLY HDR
 DC CL12'SMF74RBL10  ',X'1703',Y(000,004)  SMF74RIO REASSEMBLY INFO
 DC CL12'R7410CM     ',X'0701',Y(000,036)  SMF74DCS DEVICE CONTROL
 DC CL12'R7410DI     ',X'8701',Y(000,044)  SMF74DDS DEVICE DATA
*  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 75 - SUBTYPE 1
 DC CL12'SMF75HDR1   ',X'0000',Y(000,030)  SMF75PRS+2
 DC CL12'SMF75PRO    ',X'0701',Y(000,028)  SMF75PRS PRODUCT
 DC CL12'SMF75RHD    ',X'1702',Y(000,068)  SMF75RAO REASSEMBLY HDR
 DC CL12'SMF75RBL    ',X'1703',Y(000,004)  SMF75RIO REASSEMBLY INFO
 DC CL12'SMF75PSD    ',X'8701',Y(000,036)  SMF75PSS PAGE DATA
*  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 76 - SUBTYPE 1
 DC CL12'SMF76HDR1   ',X'0000',Y(000,030)  SMF76PRS+2
 DC CL12'SMF76PRO    ',X'0701',Y(000,028)  SMF76PRS PRODUCT
 DC CL12'SMF76RHD    ',X'1702',Y(000,068)  SMF76RAO REASSEMBLY HDR
 DC CL12'SMF76RBL    ',X'1703',Y(000,004)  SMF76RIO REASSEMBLY INFO
 DC CL12'SMF76A      ',X'0701',Y(000,036)  SMF76TCS TRACE CONTROL
 DC CL12'SMF76B      ',X'0701',Y(000,044)  SMF76TDS TRACE DATA ENTRY
 DC CL12'SMF76C      ',X'8701',Y(000,052)  SMF76VFS VAR. FORMAT SET
*  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 77 - SUBTYPE 1
 DC CL12'SMF77HDR    ',X'0000',Y(000,030)  SMF77PRS+2
 DC CL12'SMF77PRO    ',X'0701',Y(000,028)  SMF77PRS PRODUCT
 DC CL12'SMF77RHD    ',X'1702',Y(000,068)  SMF77RAO REASSEMBLY HDR
 DC CL12'SMF77RBL    ',X'1703',Y(000,004)  SMF77RIO REASSEMBLY INFO
 DC CL12'SMF77CTL    ',X'0701',Y(000,036)  SMF77EQS ENQUEUE CONTROL
 DC CL12'SMF77ENQ    ',X'8701',Y(000,044)  SMF77EDS ENQUEUE DATA
*  =  =  =  =  =  =  =  =  =  =  =  =  =  TYPE 78 - SUBTYPE 1
 DC CL12'SMF78HDR1   ',X'0000',Y(000,030)  SMF78PRS+2
 DC CL12'SMF78PRO1   ',X'0701',Y(000,028)  SMF78PRS PRODUCT
 DC CL12'SMF78RHD1   ',X'1702',Y(000,068)  SMF78RAO REASSEMBLY HDR
 DC CL12'SMF78RBL1   ',X'1703',Y(000,004)  SMF78RIO REASSEMBLY INFO
 DC CL12'R781CS      ',X'0701',Y(000,036)  SMF78DCS IOQ CONFIG CNTL
 DC CL12'R781CPD     ',X'1703',Y(000,004)  R781CPDS IOQ CONFIG DATA
 DC CL12'R781DS      ',X'8701',Y(000,044)  SMF78ASS IO QUEUING DATA
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 78 - SUBTYPE 2
 DC CL12'SMF78HDR2   ',X'0000',Y(000,030)  SMF78PRS+2
 DC CL12'SMF78PRO2   ',X'0701',Y(000,028)  SMF78PRS PRODUCT
 DC CL12'SMF78RHD2   ',X'1702',Y(000,068)  SMF78RAO REASSEMBLY HDR
 DC CL12'SMF78RBL2   ',X'1703',Y(000,004)  SMF78RIO REASSEMBLY INFO
 DC CL12'R782COMN    ',X'0701',Y(000,036)  SMF78DCS IOQ CONFIG CNTL
 DC CL12'R782PVT     ',X'0701',Y(000,044)  SMF78ASS IOQ CONFIG DATA
 DC CL12'R782PVSP    ',X'8701',Y(000,052)  SMF78SPS IO QUEUING DATA
*  -  -  -  -  -  -  -  -  -  -  -  -  -  TYPE 78 - SUBTYPE 3
 DC CL12'SMF78HDR3   ',X'0000',Y(000,030)  SMF78PRS+2
 DC CL12'SMF78PRO3   ',X'0701',Y(000,028)  SMF78PRS PRODUCT
 DC CL12'SMF78RHD3   ',X'1702',Y(000,068)  SMF78RAO REASSEMBLY HDR
 DC CL12'SMF78RBL3   ',X'1703',Y(000,004)  SMF78RIO REASSEMBLY INFO
 DC CL12'R783CS      ',X'1702',Y(000,036)  SMF78DCS QUEUING CNTL
 DC CL12'R783CPD     ',X'1703',Y(000,004)  R783CPDS IOQ CONFIG DATA
 DC CL12'R783DS      ',X'0701',Y(000,044)  SMF78ASS QUEUING DATA
 DC CL12'R783GD      ',X'1702',Y(000,052)  SMF78QDS IOQ GLOBAL
 DC CL12'R783IQD     ',X'1703',Y(000,004)  R783GIDS IOP INIT Q & UTL
 DC CL12'R783HPAV    ',X'8701',Y(000,060)  SMF78HPS HYPER/SUPERPAV
*  =  =  =  =  =  =  =  =  =  =  =  =  =  =  =  =  =  =  =  =  =  =  =
$SECNM#  EQU   (*-SECNAMES)/$SECNMLN

*   LIST OF SECTIONS WITH  BRIEF DESCRIPTION
SECTDESC DC    0F

SMFRCD0    DESC ' - IPL'

SMFRCD2    DESC ' - SMF DUMP HEADER'

SMFRCD3    DESC ' - SMF DUMP TRAILER'

SMFRCD4    DESC ' - STEP TERMINATION'
SMF4DDIO   DESC ' - EXCP SECTION'
SMF4ACHD   DESC ' - STEP ACCOUNTING HEADER SECTION'
SMF4ACCT   DESC ' - STEP ACCOUNTING SECTION'
SMF4PAGE   DESC ' - PAGING SECTION'
SMF4PERF   DESC ' - PERFORMANCE SECTION'

SMFRCD5    DESC ' - JOB TERMINATION'
SMF5ACCT   DESC ' - JOB ACCOUNTING SECTION'
SMF5PERF   DESC ' - PERFORMANCE SECTION'

SMFRCD6    DESC ' - OUTPUT WRITER'
SMF6J2S    DESC ' - JES2 SECTION'
SMF6J3S    DESC ' - JES3 SECTION'
SMF6X1ST   DESC ' - FIRST EXTENSION SECTION'
SMF6XCMN   DESC ' - COMMON EXTENSION SECTION'
SMF6ENHS   DESC ' - ENHANCED SYSOUT SECTION'
SMF6X2ND   DESC ' - SECOND EXTENSION'
SMF6MBHD   DESC ' - MULTI-BINS HEADER SECTION'
SMF6MBCT   DESC ' - MULTI-BINS COUNTER SECTION'
SMF6FXFR   DESC ' - FILE TRANSFER SECTION'

SMFRCD7    DESC ' - SMF DATA LOST'

SMFRCD8    DESC ' - I/O CONFIGURATION'
SMF8IODV   DESC ' - DEVICE DATA SECTION'

SMFRCD9    DESC ' - VARY DEVICE ONLINE'

SMFRCD10   DESC ' - ALLOCATION RECOVERY'

SMFRCD11   DESC ' - VARY DEVICE OFFLINE'

SMFRCD14   DESC ' - NON-VSAM DATA SET CLOSE/EOV'
SMFJFCB1   DESC ' - JOB FILE CONTROL BLOCK'
SMFDCBDE   DESC ' - DCB/DEB SECTION'
SMF14UCB   DESC ' - UCB SECTION'
SMFHBTCH   DESC ' - HIPERBATCH INFORMATION'
SMFISAMX   DESC ' - ISAM EXTENSION SEG.(FOR DCBDSORG = IS)'
SMF14XIS   DESC ' - EXTENDED INFORMATION SECTION'
SMF14XIC   DESC ' - EXTENDED INFORMATION SECTION CONTROL DATA'
SMF14CSB   DESC ' - COMPRESSED FORMAT DATA SET SECTION'
SMF14SCI   DESC ' - SMS CLASS INFORMATION SECTION'
SMF14SPI   DESC ' - STEP INFORMATION SECTION'
SMF14A4I   DESC ' - ANSI VERSION 4 CCSID INFORMATION SECTION'
SMF14ADI   DESC ' - ADDITIONAL D/S CHARACTERISTICS SECTION'
SMF14PSI   DESC ' - PDSE STATISTIC SECTION'
SMF14ENC   DESC ' - TAPE ENCRYPTION DATA SECTION'
SMF14RASI  DESC ' - RAS INFORMATION SECTION'
SMF14ENCDASD DESC ' - ENCRYPTED DASD DATA SET SECTION'

SMFRCD17   DESC ' - DATA SET SCRATCH'

SMFRCD18   DESC ' - DATA SET RENAME'

SMFRCD19   DESC ' - DIRECT ACCESS VOLUME'

SMFRCD20   DESC ' - JOB INITIATION'
SMF20JAC   DESC ' - JOB ACCOUNTING SECTION'
SMF20RLA   DESC ' - RELOCATE SECTION'

SMFRCD22   DESC ' - CONFIGURATION'

SMFRCD23   DESC ' - SMF STATUS'
SMF23PRS   DESC ' - PRODUCT SECTION'
SMF23SDS   DESC ' - SYSTEM DEFINITION SECTION'
SMF23SMF   DESC ' - SMF STATISTICS SECTION'
SMF23SPN   DESC ' - SPIN LOCK INSTRUMENTATION SECTION'
SMF23BND   DESC ' - BIND BREAK INSTRUMENTATION SECTION'
SMF23LGS   DESC ' - LOGSTREAM SECTION'

SMFRCD24   DESC ' - JES2 SPOOL OFFLOAD'

SMFRCD25   DESC ' - JES3 DEVICE ALLOCATION'

SMFRCD26   DESC ' - JOB PURGE'
SMF26DESC  DESC ' - DESCRIPTIVE SECTION'
SMF26J2D   DESC ' - JES2 ONLY DESCRIPTIVE SECTION'
SMF26J3D   DESC ' - JES3 ONLY DESCRIPTIVE SECTION'
SMF26EVNT  DESC ' - EVENT SECTION'
SMF26ACTL  DESC ' - ACTUALS SECTION'
SMF26NTWK  DESC ' - JES2 NETWORK SECTION'
SMF26ROUT  DESC ' - JES2 ROUTING SECTION'
SMF26PRNT  DESC ' - JES PRINTER SECTION'
SMF26TRIP  DESC ' - TRIPLET SECTION'

SMFRCD30   DESC ' - COMMON ADDRESS SPACE WORK'
SMF30PSS   DESC ' - PRODUCT OR SUBSYSTEM SECTION'
SMF30ID    DESC ' - IDENTIFICATION SECTION'
SMF30URA   DESC ' - I/O ACTIVITY SECTION'
SMF30CMP   DESC ' - COMPLETION SECTION'
SMF30CAS   DESC ' - CPU ACCOUNTING SECTION'
SMF30SAP   DESC ' - STORAGE AND PAGING SECTION'
SMF30PRF   DESC ' - PERFORMANCE SECTION'
SMF30OPS   DESC ' - OPERATOR SECTION'
SMF30ACS   DESC ' - ACCOUNTING SECTION'
SMF30EXP   DESC ' - EXCP SECTION'
SMF30AR    DESC ' - APPC/MVS CUMULATIVE RESOURCE SECTION'
SMF30DR    DESC ' - APPC/MVS RESOURCE SECTION'
SMF30OP    DESC ' - OMVS PROCESS SECTION'
SMF30RM    DESC ' - AUTOMATIC RESTART MANAGEMENT SECTION'
SMF30UD    DESC ' - PRODUCT USAGE SECTION'
SMF30MSE   DESC ' - MULTISYSTEM ENCLAVE REMOTE SYSTEM DATA SECTION'
SMF30CDS   DESC ' - COUNTER DATA SECTION'
SMF30USS   DESC ' - ZEDC USAGE STATISTICS SECTION'

SMFRCD31   DESC ' - TIOC INITIALIZATION'

SMFRCD32   DESC ' - TSO USER WORK ACCOUNTING'

SMFRCD33   DESC ' - APPC/MVS TP ACCOUNTING'

SMFRCD34   DESC ' - TSO STEP TERMINATION'
TIVDDIO    DESC ' - EXCP SECTION'
TIVACHD    DESC ' - STEP ACCOUNTING HEADER SECTION'
TIVACCT    DESC ' - STEP ACCOUNTING SECTION'
TIVPAGE    DESC ' - PAGING SECTION'
TIVPERF    DESC ' - PERFORMANCE SECTION'

SMFRCD35   DESC ' - TSO LOGOFF'
TLGACCT    DESC ' - JOB ACCOUNTING SECTION'
TLGPERF    DESC ' - PERFORMANCE SECTION'

SMFRCD40   DESC ' - DYNAMIC DD'
TDDEXCP    DESC ' - EXCP SECTION'

SMF42HDR1  DESC ' - BUFFER MANAGER FACILITY (BMF) STATISTICS'
SMF42S1    DESC ' - SUBTYPE 1 HEADER SECTION'
SMF42PRD1  DESC ' - PRODUCT SECTION'
SMF4201A   DESC ' - BMF TOTALS SECTION'
SMF4201B   DESC ' - STORAGE CLASS SUMMARY SECTION'

SMF42HDR2  DESC ' - CONTROL UNIT STATISTICS'
SMF42S2    DESC ' - SUBTYPE 2 HEADER SECTION'
SMF42PRD2  DESC ' - PRODUCT SECTION'
SMF4202A   DESC ' - CONTROL UNIT CACHE SUMMARY SECTION'
SMF4202B   DESC ' - VOLUME STATUS SECTION'

SMF42HDR3  DESC ' - DFSMS CONFIGURATION CHANGE AUDIT'
SMF42S3    DESC ' - SUBTYPE 3 HEADER SECTION'
SMF42PRD3  DESC ' - PRODUCT SECTION'
SMF4203A   DESC ' - EVENT AUDIT SECTION'

SMF42HDR4  DESC ' - SYSTEM DATA MOVER (SDM) STATISTICS'
SMF42S4    DESC ' - SUBTYPE 4 HEADER SECTION'
SMF42PRD4  DESC ' - PRODUCT SECTION'
SMF4204C   DESC ' - CONCURRENT COPY (CC) SDM SESSION STATISTICS'
S42CSIDH   DESC ' - SDM CC SSID HEADER SECTION'
S42CVL     DESC ' - SDM CC VOLUME SECTION'
SMF4204E   DESC ' - EXTENDED SEQUENTIAL DATA SET STATISTICS'
SMF4204V   DESC ' - EAV CC SESSION STATISTICS SECTION'
S42VSIDH   DESC ' - EAV CC VOLUME SECTION'

SMF42HDR5  DESC ' - STORAGE CLASS RESPONSE TIME STATISTICS'
SMF42S5    DESC ' - SUBTYPE 5 HEADER SECTION'
SMF42PRD5  DESC ' - PRODUCT SECTION'
SMF4205A   DESC ' - STORAGE CLASS RESPONSE TIME SECTION'
SMF4205B   DESC ' - VOLUME STATISTICS HEADER SECTION'
SMF4205C   DESC ' - VTOC DATA COMPONENT SECTION'
SMF4205D   DESC ' - VTOC INDEX COMPONENT SECTION'
SMF4205E   DESC ' - VTOC VVDS COMPONENT SECTION'
SMF4205F   DESC ' - VOLUME METRICS SECTION'
SMF4205H   DESC ' - VOLUME SYSTEM I/O COMPONENT DISPATCH HEADER'
SMF4205I   DESC ' - SYSTEM I/O STATISTICS SECTION (MICROSECONDS)'
SMF4205J   DESC ' - VOLUME SYSTEM I/O HIGH RESPONSE TIME SECTION'
S42VSXAA   DESC ' - SECTION SMF4205J DATA (TIMES IN MICROSECONDS)'
SMF4205O   DESC ' - VOLUME BACKGROUND ACTIVITY DISPATCH HEADER'
SMF4205P   DESC ' - VOLUME CLOUD ACTIVITY SECTION'
S42SNIO5   DESC ' - SYNC_IO SECTION'

SMF42HDR6  DESC ' - DFSMS STATISTICS AND CONFIGURATION'
SMF42S6    DESC ' - SUBTYPE 6 HEADER SECTION'
SMF42PRD6  DESC ' - PRODUCT SECTION'
SMF4206A   DESC ' - JOB HEADER SECTION - DATA SET STATISTICS'
S42DSH     DESC ' - DATA SET HEADER SECTION'
S42DSIO    DESC ' - DATA SET I/O STATISTICS SECTION'
S42DSAM    DESC ' - ACCESS METHOD STATISTICS SECTION'
S42SNIO6   DESC ' - SYNC_IO SECTION'
S42SNTW    DESC ' - SYNC_IO SECTION 2'
S42SNDW    DESC ' - SYNC_IO SECTION 3'

SMF42HDR9  DESC ' - B37/D37/E37 ABEND EVENT'
SMF42S9    DESC ' - SUBTYPE 9 HEADER SECTION'
SMF42PRD9  DESC ' - PRODUCT SECTION'
SMF4209A   DESC ' - X37 ABEND - JOB AND DATA SET SECTION'
SMF4209B   DESC ' - X37 ABEND - SMS SECTION'

SMF42HDR10 DESC ' - VOLUME SELECTION FAILURE EVENT'
SMF42SA    DESC ' - SUBTYPE 10 HEADER SECTION'
SMF42PRD10 DESC ' - PRODUCT SECTION'
SMF420AA   DESC ' - VOLUME SELECTION FAILURE DATA SECTION'

SMF42HDR11 DESC ' - EXTENDED REMOTE COPY (XRC) SESSION STATISTICS'
SMF42SB    DESC ' - SUBTYPE 11 HEADER SECTION'
SMF42PRD11 DESC ' - PRODUCT SECTION'
SMF420BA   DESC ' - XRC SESSION STATISTICS HEADER SECTION'
S42XRSSD   DESC ' - XRC SSID DATA SECTION'
S42XRVLD   DESC ' - XRC VOLUME DATA SECTION'

SMF42HDR15 DESC ' - VSAM RLS STORAGE CLASS RESPONSE TIME SUMMARY'
SMF42SF    DESC ' - SUBTYPE 15 HEADER SECTION'
SMF42PRD15 DESC ' - PRODUCT SECTION'
SMF420FA   DESC ' - STORAGE CLASS MGR SUMMARY SECTION'
SMF420FB   DESC ' - SC/SYS/CF CLASS SUMMARY SECTION'
SMF2A0FA   DESC ' - ABOVE BAR BUFFERS SECTION'
SMF2A0FB   DESC ' - SC/SYS/CF CLASS SUMMARY SECTION'

SMF42HDR16 DESC ' - VSAM RLS DATA SET RESPONSE TIME SUMMARY'
SMF42SG    DESC ' - SUBTYPE 16 HEADER SECTION'
SMF42PRD16 DESC ' - PRODUCT SECTION'
SMF420GA   DESC ' - CF DATASET RESPONSE TIME SUMMARY SECTION'
SMF420GB   DESC ' - DATA SET/MVS SYSTEM SUMMARY SECTION'
SMF2A0GA   DESC ' - ABOVE BAR CF DATASET RSPTM SUMMARY SECTION'
SMF2A0GB   DESC ' - ABOVE BAR DATA SET/MVS SYSTEM SUMMARY SECTION'

SMF42HDR17 DESC ' - VSAM RLS DATA SET RESPONSE TIME SUMMARY'
SMF42SH    DESC ' - SUBTYPE 17 HEADER SECTION'
SMF42PRD17 DESC ' - PRODUCT SECTION'
SMF420HA   DESC ' - CF LOCK STRUCTURE ACTIVITY TOTALS SECTION'
SMF420HB   DESC ' - LOCK STRUCTURE SUMMARY SECTION'

SMF42HDR18 DESC ' - VSAM RLS CF CACHE PARTITION USAGE'
SMF42SI    DESC ' - SUBTYPE 18 HEADER SECTION'
SMF42PRD18 DESC ' - PRODUCT SECTION'
SMF420IA1  DESC ' - CF CACHE PARTITION TOTALS SECTION'
SMF420IC   DESC ' - CF CACHE PARTITION SUMMARY SECTION'
SMF420IE   DESC ' - CF CACHE DIRECTORY/ELEMENT RATIO SECTION'

SMF42HDR19 DESC ' - VSAM RLS LOCAL BUFFER MGR LRU STATS SUMMARY'
SMF42SJ    DESC ' - SUBTYPE 19 HEADER SECTION'
SMF42PRD19 DESC ' - PRODUCT SECTION'
SMF420JA   DESC ' - LBM LRU STATS SUMMARY SYSPLEX TOTALS'

SMF42HDR20 DESC ' - STOW INITIALIZE'
SMF42SK    DESC ' - SUBTYPE 20 HEADER SECTION'
SMF42PRD20 DESC ' - PRODUCT SECTION'
SMF420KA   DESC ' - STOW INITIALIZE - JOB AND DATA SET SECTION'
SMF420KB   DESC ' - STOW INITIALIZE - ADDITIONAL INFORMATION'
TKN_4220   DESC ' - (SMF420KB - ADDITIONAL INFO) RACF USER TOKEN'

SMF42HDR21 DESC ' - MEMBER DELETION'
SMF42SL    DESC ' - SUBTYPE 21 HEADER SECTION'
SMF42PRD21 DESC ' - PRODUCT SECTION'
SMF420LA   DESC ' - MEMBER DELETION - JOB AND DATA SET SECTION'
SMF420LB   DESC ' - MEMBER DELETION - DELETED ALIAS SECTION'
SMF420LC   DESC ' - MEMBER DELETION - ADDITIONAL INFORMATION'
TKN_4221   DESC ' - (SMF420LC - ADDITIONAL INFO) RACF USER TOKEN'

SMF42HDR22 DESC ' - DFSMSRMM AUDIT INFORMATION'
SMF42SM    DESC ' - SUBTYPE 22 HEADER SECTION'
SMF42PRD22 DESC ' - PRODUCT SECTION'
SMF420MA   DESC ' - DFSMSRMM AUDIT SECTION'

SMF42HDR23 DESC ' - DFSMSRMM SECURITY INFORMATION'
SMF42SN    DESC ' - SUBTYPE 23 HEADER SECTION'
SMF42PRD23 DESC ' - PRODUCT SECTION'
SMF420NA   DESC ' - DFSMSRMM SECURITY SECTION'

SMF42HDR24 DESC ' - MEMBER ADD OR REPLACE'
SMF42SP    DESC ' - SUBTYPE 24 HEADER SECTION'
SMF42PRD24 DESC ' - PRODUCT SECTION'
SMF420PA   DESC ' - MEMBER ADD/REPLACE - JOB AND DATA SET SECTION'
SMF420PB   DESC ' - MEMBER ADD/REPLACE - DELETED ALIAS SECTION'
SMF420PC   DESC ' - MEMBER ADD/REPLACE - ADDITIONAL INFORMATION'
TKN_4224   DESC ' - (SMF420PC - ADDITIONAL INFO) RACF USER TOKEN'

SMF42HDR25 DESC ' - MEMBER RENAME'
SMF42SQ    DESC ' - SUBTYPE 25 HEADER SECTION'
SMF42PRD25 DESC ' - PRODUCT SECTION'
SMF420QA   DESC ' - MEMBER RENAME - JOB AND DATA SET SECTION'
SMF420QB   DESC ' - MEMBER RENAME - ORIGINAL MEMBER NAME SECTION'
SMF420QC   DESC ' - MEMBER RENAME - ADDITIONAL INFORMATION'
TKN_4225   DESC ' - (SMF420QC - ADDITIONAL INFO) RACF USER TOKEN'

SMF42HDR27 DESC ' - VTOC AUDIT LOG'
SMF42S27   DESC ' - SUBTYPE 27 HEADER SECTION'
SMF42PRD27 DESC ' - PRODUCT SECTION'
SMF420RA   DESC ' - SECURITY SECTION'
S420RB_O   DESC ' - PRE-CHANGE (OLD) DSCB'
S420RB_N   DESC ' - POST-CHANGE (NEW) DSCB'

SMFRCD43   DESC ' - JES2/JES3 START'

SMFRCD45   DESC ' - JES2/JES3 WITHDRAWAL'

SMFRCD60   DESC ' - VVDS UPDATED'

SMFRCD61   DESC ' - ICF DEFINE'

SMFRCD62   DESC ' - VSAM OPEN'
SMF62VLT   DESC ' - VOLUME LIST SECTION'
SMF62DSD   DESC ' - DATA SET DETAILS SECTION'

SMFRCD63   DESC ' - VSAM CATALOG ENTRY DEFINED'

SMFRCD64   DESC ' - VSAM CLOSE/EOV'
SMF64FEX   DESC ' - EXTENT TABLE SECTION'
SMF64STS   DESC ' - DATA SET STATISTICS SECTION'

SMFRCD65   DESC ' - ICF DELETE'

SMFRCD66   DESC ' - ICF ALTER'

SMFRCD67   DESC ' - VSAM CATALOG ENTRY DELETED'

SMFRCD68   DESC ' - VSAM CATALOG ENTRY RENAMED'

SMFRCD69   DESC ' - VSAM DATA SPACE ACTIVITY'

SMF70HDR1  DESC ' - RMF PROCESSOR ACTIVITY'
SMF70PRO1  DESC ' - RMF PRODUCT SECTION'
SMF70RHD1  DESC ' - REASSEMBLY AREA SECTION'
SMF70RBL1  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'
SMF70CTL   DESC ' - CPU CONTROL SECTION'
SMF70CPU   DESC ' - CPU DATA SECTION'
SMF70AID   DESC ' - ASID DATA AREA SECTION'
SMF70BCT   DESC ' - PR/SM PARTITION DATA SECTION'
SMF70BPD   DESC ' - PR/SM LOGICAL PROCESSOR DATA SECTION'
SMF70CIS   DESC ' - CPU-IDENTIFICATION NAME SECTION'
SMF70LCS   DESC ' - LOGICAL CORE DATA SECTION'
SMF70TNT   DESC ' - TENANT RESOURCE GROUP DATA SECTION'

SMF70HDR2  DESC ' - RMF CRYPTO ACTIVITY'
SMF70PRO2  DESC ' - RMF PRODUCT SECTION'
SMF70RHD2  DESC ' - REASSEMBLY AREA SECTION'
SMF70RBL2  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'
R702TYP3   DESC ' - CRYPTOGRAPHIC COPROCESSOR SECTION'
R702TYP4   DESC ' - CRYPTOGRAPHIC ACCELERATOR SECTION'
R702CCF    DESC ' - ICSF SECTION'
R702TYP5   DESC ' - CRYPTOGRAPHIC PKCS11 COPROCESSOR SECTION'

SMF71HDR1  DESC ' - RMF PAGING ACTIVITY'
SMF71PRO   DESC ' - RMF PRODUCT SECTION'
SMF71RHD   DESC ' - REASSEMBLY AREA SECTION'
SMF71RBL   DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'
SMF71PAG   DESC ' - PAGING DATA SECTION'
SMF71SWP   DESC ' - SWAP PLACEMENT DATA SECTION'

SMF72HDR1  DESC ' - RMF WORKLOAD ACTIVITY'
SMF72PRO1  DESC ' - RMF PRODUCT SECTION'
SMF72RHD1  DESC ' - REASSEMBLY AREA SECTION'
SMF72RBL1  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'
SMF72CTL   DESC ' - WORKLOAD CONTROL SECTION'
SMF72WKL   DESC ' - PERFORMANCE GROUP PERIOD DATA SECTION'

SMF72HDR2  DESC ' - RMF MONITOR III WORKLOAD ACTIVITY'
SMF72PRO2  DESC ' - RMF PRODUCT SECTION'
SMF72RHD2  DESC ' - REASSEMBLY AREA SECTION'
SMF72RBL2  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'
R722WKL    DESC ' - WORKLOAD CONTROL SECTION'
R722DATA   DESC ' - WORKLOAD DATA SECTION'
R722SWRE   DESC ' - SWAP REASON DATA SECTION'

SMF72HDR3  DESC ' - RMF WORKLOAD ACTIVITY - GOAL MODE'
SMF72PRO3  DESC ' - RMF PRODUCT SECTION'
SMF72RHD3  DESC ' - REASSEMBLY AREA SECTION'
SMF72RBL3  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'
R723WMS    DESC ' - WORKLOAD MANAGER CONTROL SECTION'
R723SSS    DESC ' - SERVICE CLASSES BEING SERVED SECTION'
R723RGS    DESC ' - RESOURCE GROUP DATA SECTION'
R723SCS    DESC ' - SERVICE OR REPORT CLASS PERIOD SECTION'
R723RTS    DESC ' - RESPONSE TIME DISTRIBUTION MAP SECTION'
R723WRS    DESC ' - WORK MANAGER/RESOURCE MANAGER STATES SECTION'
R723DNS    DESC ' - RESOURCE DELAY NAMES SECTION'

SMF72HDR4  DESC ' - RMF MONITOR III WORKLOAD ACTIVITY - GOAL MODE'
SMF72PRO4  DESC ' - RMF PRODUCT SECTION'
SMF72RHD4  DESC ' - REASSEMBLY AREA SECTION'
SMF72RBL4  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'
R724DATA   DESC ' - DATA SECTION'
R724SWRE   DESC ' - SWAP REASON DATA SECTION'

SMF72HDR5  DESC ' - RMF MONITOR III SERIALIZATION DELAY'

SMF73HDR1  DESC ' - RMF CHANNEL PATH ACTIVITY'
SMF73PRO1  DESC ' - RMF PRODUCT SECTION'
SMF73RHD1  DESC ' - REASSEMBLY AREA SECTION'
SMF73RBL1  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'
SMF73CTL   DESC ' - CHANNEL CONTROL SECTION'
SMF73CHA   DESC ' - CHANNEL DATA SECTION'
SMF73ECD   DESC ' - EXTENDED CHANNEL DATA SECTION'

SMF74HDR1  DESC ' - RMF DEVICE ACTIVITY'
SMF74PRO1  DESC ' - RMF PRODUCT SECTION'
SMF74RHD1  DESC ' - REASSEMBLY AREA SECTION'
SMF74RBL1  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'
SMF74A     DESC ' - DEVICE CONTROL SECTION'
SMF74B     DESC ' - DEVICE DATA SECTION'

SMF74HDR2  DESC ' - RMF XCF ACTIVITY'
SMF74PRO2  DESC ' - RMF PRODUCT SECTION'
SMF74RHD2  DESC ' - REASSEMBLY AREA SECTION'
SMF74RBL2  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'

SMF74HDR3  DESC ' - RMF OMVS KERNEL ACTIVITY'
SMF74PRO3  DESC ' - RMF PRODUCT SECTION'
SMF74RHD3  DESC ' - REASSEMBLY AREA SECTION'
SMF74RBL3  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'

SMF74HDR4  DESC ' - RMF COUPLING FACILITY ACTIVITY'
SMF74PRO4  DESC ' - RMF PRODUCT SECTION'
SMF74RHD4  DESC ' - REASSEMBLY AREA SECTION'
SMF74RBL4  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'

SMF74HDR5  DESC ' - RMF CACHE SUBSYSTEM DEVICE ACTIVITY'
SMF74PRO5  DESC ' - RMF PRODUCT SECTION'
SMF74RHD5  DESC ' - REASSEMBLY AREA SECTION'
SMF74RBL5  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'
R745CNTL   DESC ' - CONTROL DATA SECTION'
R745DEV    DESC ' - CACHE DEVICE DATA SECTION'
R7451DEV   DESC ' - RAID RANK / EXTENT POOL DATA SECTION'
R745STAT   DESC ' - CACHE CONTROL UNIT STATUS DATA SECTION'

SMF74HDR6  DESC ' - RMF HFS STATISTICS'
SMF74PRO6  DESC ' - RMF PRODUCT SECTION'
SMF74RHD6  DESC ' - REASSEMBLY AREA SECTION'
SMF74RBL6  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'

SMF74HDR7  DESC ' - RMF FICON DIRECTOR STATISTICS'
SMF74PRO7  DESC ' - RMF PRODUCT SECTION'
SMF74RHD7  DESC ' - REASSEMBLY AREA SECTION'
SMF74RBL7  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'

SMF74HDR8  DESC ' - RMF ENTERPRISE DISK SYSTEM STATISTICS'
SMF74PRO8  DESC ' - RMF PRODUCT SECTION'
SMF74RHD8  DESC ' - REASSEMBLY AREA SECTION'
SMF74RBL8  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'

SMF74HDR9  DESC ' - RMF PCI EXPRESS BASED FUNCTION ACTIVITY'
SMF74PRO9  DESC ' - RMF PRODUCT SECTION'
SMF74RHD9  DESC ' - REASSEMBLY AREA SECTION'
SMF74RBL9  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'

SMF74HDR10 DESC ' - RMF EXTENDED ASYNCH DATA MOVER (EADM) STATS'
SMF74PRO10 DESC ' - RMF PRODUCT SECTION'
SMF74RHD10 DESC ' - REASSEMBLY AREA SECTION'
SMF74RBL10 DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'

SMF75HDR1  DESC ' - RMF PAGE DATA SET ACTIVITY'
SMF75PRO1  DESC ' - RMF PRODUCT SECTION'
SMF75RHD1  DESC ' - REASSEMBLY AREA SECTION'
SMF75RBL1  DESC ' - REASSEMBLY AREA INFORMATION BLOCK SECTION'
SMF75PSD   DESC ' - PAGE DATA SECTION'

SMFRCD89   DESC ' - PROGRAM PRODUCT USAGE/STATE DATA'
SMF89PR    DESC ' - RECORD PRODUCT SECTION'
SMF89SI    DESC ' - SYSTEM ID SECTION'
SMF89UD    DESC ' - USAGE DATA SECTION'
SMF89CN    DESC ' - PRODUCT INTERSECTION TIME DATA SECTION'
SMF89TRG   DESC ' - TENANT RESOURCE GROUPS DATA SECTION'
SMF89TC    DESC ' - PRODUCT INTERSECTION TIME TRG DATA SECTION'
SMF89T2    DESC ' - PRODUCT ENABLE/DISABLE SECTION'
SMF89T2TRG DESC ' - PRODUCT ENABLE/DISABLE TRG SECTION'

         DC    X'FF'
         DC    0D
         DC    CL16' END OF REVEXSYM'

         TITLE ' WORKING STORAGE '
WORKAREA DSECT
SAVE1    DS    18F
SAVE2    DS    18F
DBL      DS    D

CRNTDSCT DS    CL8
CRNTOFST DS    F
ITEM_NUM DS    PL4
ITEM_CHR DS    CL8
SYMIN_CT DS    F
SYM_CSR  DS    A
DESCSAVE DS    A
@HOLDTOP EQU   *
NAMESAVE DS    CL12
HOLD_NXT DS    CL12
HOLD_FGS EQU   *,2                     SECTION FLAG BYTES
HOLD_FG1 DS    X
HOLD_FG2 DS    X
HOLD_OO  DS    H
HOLD_LO  DS    H
HOLD_NO  DS    H
HOLD_OM  DS    X
$CRNT    EQU   X'80'                   "CURRENT" LOCATION
HOLD_LM  DS    X
HOLD_NM  DS    X
HOLD_LVL DS    X
@HOLDEND EQU   *
$HOLDLEN EQU   @HOLDEND-@HOLDTOP
FLAGS1   DS    XL1                     PROGRAM FLAGS
$EOF     EQU   X'80'                   ASMPRTIN DD EOF
$QOT     EQU   X'40'                   WITHIN QUOTED TEXT
$CSTT    EQU   X'20'                   CREATE SUBTYPE FILTER TABLE
$VNUN    EQU   X'10'                   VANISH NEXT UNNAMED ITEM
$ZERO    EQU   X'08'                   SUPPRESS PUNCHOUT OUTPUT
$NOGET   EQU   X'04'                   INHIBIT READ LISTING
$TOKCMT  EQU   X'02'                   PROCESSING ICHRUTKN SYMBOL
$1W2H    EQU   X'01'                   BREAK FULLWORD INTO HALFWORDS
FLAGS2   DS    XL1                     SECTION FLAGS
FLAGS3   DS    XL1                     ITEM FLAGS
$BINTOD  EQU   X'80'               FORMAT AS TIME-OF-DAY JIFFIES
$HEX     EQU   X'40'               FORMAT AS HEXADECIMAL
$DEC     EQU   X'20'               FORMAT BINARY AS DECIMAL INTEGER
$CHR     EQU   X'10'               FORMAT AS CHARACTER
$NDEC    EQU   $HEX+$CHR           FORMAT AS CHARACTER OR HEX
$HFP     EQU   X'08'               FORMAT AS HEX FLOATING POINT
$NCHR    EQU   $HEX+$DEC           FORMAT AS HEX AND/OR DECIMAL INTEGER
$RFM     EQU   $HEX+4              FORMAT THE BYTE AS RECORD FORMAT
$DSO     EQU   $HEX+2              FORMAT AS DATA SET ORGANIZATION
$JIF     EQU   $BINTOD+$DEC        FORMAT AS HUNDREDTHS OF SECONDS
$KMS     EQU   $BINTOD+$NDEC       FORMAT AS 1.024 MILLISECONDS
$128     EQU   $BINTOD+$CHR        FORMAT AS 128 MICROSECONDS
$STCK    EQU   $BINTOD+$HEX        FORMAT AS STCK TOD CLOCK
$KB      EQU   $DEC+2              FORMAT AS KILOBYTES
$BYT     EQU   $DEC+4              FORMAT AS BYTES
BLANK    DS    CL1
CARD     DS    CL90
DSCTCARD DS    CL90
CARDHOLD DS    CL90
CARDCONT DS    CL90
PRT_LINE DS    CL256

         DS    0F
INDCBW   DS    XL(INDCB1L)
         DS    0F
OUTDCBW  DS    XL(OUTDCBL)

SYM_DATA DS    0D
         ORG   WORKAREA+(512*1024)

         DS    0D
$WORKLEN EQU   *-WORKAREA

         END   REVEXSYM
